["```py\n</script><script>alert(1);</script>\n```", "```py\n\", \"longitude\": 26.52799}]); } function placeCrimes(crimes) { for (i=0; i\n```", "```py\nplaceCrimes([{\"latitude\": -33.305645, \"date\": \"2015-10-10\", \"category\": \"mugging\", \"description\": \"</script><script>alert(1);</script>\", \"longitude\": 26.52799}]);\n```", "```py\nmysql crimemap \u2013p\n<your database password>\ndelete from crimes;\n\n```", "```py\ncategories = ['mugging', 'break-in']\n```", "```py\nreturn render_template(\"home.html\", crimes=crimes, categories=categories)\n```", "```py\n<select name=\"category\" id=\"category\">\n    {% for category in categories %}\n        <option value=\"{{category}}\">{{category}}</option>\n    {% endfor %}\n</select>\n```", "```py\ncategory = request.form.get(\"category\")\nif category not in categories:\n    return home()\n```", "```py\n<label for=\"latitude\">Latitude</label>\n<input name=\"latitude\" id=\"latitude\" type=\"text\" readonly>\n<label for=\"longitude\">Longitude</label>\n<input name=\"longitude\" id=\"longitude\" type=\"text\" readonly>\n```", "```py\ntry:\n    latitude = float(request.form.get(\"latitude\"))\n    longitude = float(request.form.get(\"longitude\"))\nexcept ValueError:\n    return home()\n```", "```py\npip install --user dateparser\n```", "```py\nimport dateparser\nprint dateparser.parse(\"1-jan/15\")\nprint dateparser.parse(\"1 week and 3 days ago\")\nprint(dateparser.parse(\"3/4/15\")\n```", "```py\ndef format_date(userdate):\n    date = dateparser.parse(userdate)\n    try:\n        return datetime.datetime.strftime(date, \"%Y-%m-%d\")\n    except TypeError:\n        return None    \n```", "```py\nimport datetime\nimport dateparser\n```", "```py\n@app.route(\"/\")\ndef home(error_message=None):\n    crimes = DB.get_all_crimes()\n    crimes = json.dumps(crimes)\n return render_template(\"home.html\", crimes=crimes, categories=categories, error_message=error_message)\n\n```", "```py\nif category not in categories:\n    return home()\ndate = format_date(request.form.get(\"date\"))\nif not date:\n return home(\"Invalid date. Please use yyyy-mm-dd format\")\n\n```", "```py\n<div id=\"newcrimeform\">\n    <h2>Submit new crime</h2>\n {% if error_message %}\n <div id=\"error\"><p>{{error_message}}</p></div>\n {% endif %}\n    <form action=\"/submitcrime\" method=\"POST\">\n```", "```py\n#error {\n    color: red;\n}\n```", "```py\ndef sanitize_string(userinput):\n    whitelist = string.letters + string.digits + \" !?$.,;:-'()&\"\n    return filter(lambda x: x in whitelist, userinput)\n```", "```py\nimport string\n```", "```py\ndescription = request.form.get(\"description\")\ndescription = sanitize_string(request.form.get(\"description\"))\n```"]