["```py\n    mkdir crimemap\n    cd crimemap\n    git init\n    git remote add origin <git repository URL>\n\n    ```", "```py\nsudo apt-get update\nsudo apt-get install mysql-server\n\n```", "```py\nmysql \u2013p\n\n```", "```py\npip install --user pymysql\n\n```", "```py\nimport pymysql\nimport dbconfig\nconnection = pymysql.connect(host='localhost',\n                             user=dbconfig.db_user,\n                             passwd=dbconfig.db_password)\n\ntry:\n        with connection.cursor() as cursor:\n                sql = \"CREATE DATABASE IF NOT EXISTS crimemap\"\n                cursor.execute(sql)\n                sql = \"\"\"CREATE TABLE IF NOT EXISTS crimemap.crimes (\nid int NOT NULL AUTO_INCREMENT,\nlatitude FLOAT(10,6),\nlongitude FLOAT(10,6),\ndate DATETIME,\ncategory VARCHAR(50),\ndescription VARCHAR(1000),\nupdated_at TIMESTAMP,\nPRIMARY KEY (id)\n)\"\"\"\n                cursor.execute(sql);\n        connection.commit()\nfinally:\n        connection.close()\n```", "```py\ngit add db_setup.py\ngit commit \u2013m \"database setup script\"\ngit push origin master\n\n```", "```py\nssh user@123.456.789.123\ncd /var/www\ngit clone <your-git-url>\ncd crimemap\n\n```", "```py\nnano dbconfig.py\n\n```", "```py\ndb_user = \"root\"\ndb_password = \"<your-mysql-password>\"\n```", "```py\ndbconfig.py\n*.pyc\n\n```", "```py\npython db_setup.py\n\n```", "```py\ncd crimemap\ngit pull origin master\nmkdir templates\ntouch templates/home.html\ntouch crimemap.py\ntouch dbhelper.py\n\n```", "```py\nfrom dbhelper import DBHelper\nfrom flask import Flask\nfrom flask import render_template\nfrom flask import request\n\napp = Flask(__name__)\nDB = DBHelper()\n\n@app.route(\"/\")\ndef home():\n    try:\n        data = DB.get_all_inputs()\n    except Exception as e:\n        print e\n        data = None\n    return render_template(\"home.html\", data=data)\n\n@app.route(\"/add\", methods=[\"POST\"])\ndef add():\n  try:\n    data = request.form.get(\"userinput\")\n    DB.add_input(data)\n  except Exception as e:\n    print e\n  return home()\n\n@app.route(\"/clear\")\ndef clear():\n  try:\n    DB.clear_all()\n  except Exception as e:\n    print e\n  return home()\n\nif __name__ == '__main__':\n  app.run(port=5000, debug=True)\n```", "```py\nimport pymysql\nimport dbconfig\n\nclass DBHelper:\n\n  def connect(self, database=\"crimemap\"):\n    return pymysql.connect(host='localhost',\n              user=dbconfig.db_user,\n              passwd=dbconfig.db_password,\n              db=database)\n\n  def get_all_inputs(self):\n  connection = self.connect()\n    try:\n      query = \"SELECT description FROM crimes;\"\n      with connection.cursor() as cursor:\n        cursor.execute(query)\n      return cursor.fetchall()\n    finally:\n      connection.close()\n\n  def add_input(self, data):\n    connection = self.connect()\n    try:\n      # The following introduces a deliberate security flaw. See section on SQL injection below\n      query = \"INSERT INTO crimes (description) VALUES ('{}');\".format(data)\n      with connection.cursor() as cursor:\n        cursor.execute(query)\n        connection.commit()\n    finally:\n      connection.close()\n\n  def clear_all(self):\n    connection = self.connect()\n    try:\n      query = \"DELETE FROM crimes;\"\n      with connection.cursor() as cursor:\n        cursor.execute(query)\n        connection.commit()\n    finally:\n      connection.close()\n```", "```py\n<html>\n<body>\n  <head>\n    <title>Crime Map</title>\n  </head>\n\n  <h1>Crime Map</h1>\n  <form action=\"/add\" method=\"POST\">\n    <input type=\"text\" name=\"userinput\">\n    <input type=\"submit\" value=\"Submit\">\n    </form>\n  <a href=\"/clear\">clear</a>\n  {% for userinput in data %}\n    <p>{{userinput}}</p>\n    {% endfor %}\n</body>\n</html>\n```", "```py\ngit add .\ngit commit \u2013m \"Skeleton CrimeMap\"\ngit push origin master\nssh <username>@<vps-ip-address>\n\n```", "```py\ncd /var/www/crimemap\ngit pull origin master\n\n```", "```py\nnano crimemap.wsgi\n\n```", "```py\nimport sys\nsys.path.insert(0, \"/var/www/crimemap\")\nfrom crimemap import app as application\n```", "```py\ncd /etc/apache2/sites-available\nnano crimemap.conf\n\n```", "```py\n<VirtualHost *>\n    ServerName example.com\n\n WSGIScriptAlias / /var/www/crimemap/crimemap.wsgi\n WSGIDaemonProcess crimemap\n <Directory /var/www/crimemap>\n WSGIProcessGroup crimemap\n       WSGIApplicationGroup %{GLOBAL}\n        Order deny,allow\n        Allow from all\n    </Directory>\n</VirtualHost>\n```", "```py\nsudo a2dissite headlines.conf\nsudo a2ensite crimemap.conf\nsudo service apache2 reload\n\n```", "```py\nquery = \"INSERT INTO crimes (description) VALUES ('{}');\".format(data)\n```", "```py\n\"INSERT INTO crimes (description) VALUES (''); DELETE FROM crimes; -- ');\"\n```", "```py\ndef add_input(self, data):\n    connection = self.connect()\n  try:\n      query = \"INSERT INTO crimes (description) VALUES (%s);\"\n      with connection.cursor() as cursor:\n          cursor.execute(query, data)\n          connection.commit()\n      finally:\n          connection.close()\n```"]