["```py\nsudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv EA312927\n\n```", "```py\necho \"deb http://repo.mongodb.org/apt/ubuntu trusty/mongodb-org/3.2 multiverse\" | sudo tee /etc/apt/sources.list.d/mongodb-org-3.2.list\n\n```", "```py\nsudo apt-get update\n\n```", "```py\nsudo apt-get install -y mongodb-org\n\n```", "```py\nmongo\n\n```", "```py\nuse sandbox\n\n```", "```py\ndb.people.insert({\"name\":\"John Smith\", \"age\": 35})\n\n```", "```py\ndb.people.insert({\"name\":\"Mary Jones\"})\n\n```", "```py\ndb.people.find()\n\n```", "```py\ndb.people.find({\"name\":\"John Smith\"})\n\n```", "```py\ndb.people.find({\"name\":\"John Smith\"}, {\"age\":1})\n\n```", "```py\ndb.people.find({\"name\":\"John Smith\"}, {\"age\":1, \"_id\": 0})\n\n```", "```py\ndb.people.find({\"name\":\"John Smith\", \"age\":1})\ndb.people.find({\"name\":\"John Smith\"}, {\"age\":1})\n\n```", "```py\ndb.people.update({\"name\":\"John Smith\"}, {\"name\":\"John Smith\", \"age\":43})\n\n```", "```py\ndb.people.update({\"name\":\"John Smith\"}, {$set: {\"age\":35}})\n\n```", "```py\ndb.people.remove({\"name\":\"John Smith\"})\n\n```", "```py\ndb.people.find()\n\n```", "```py\ndb.people.remove({})\n\n```", "```py\ndb.people.find()\n\n```", "```py\npip install --user pymongo\n\n```", "```py\nimport pymongo\n\nDATABASE = \"waitercaller\"\n\nclass DBHelper:\n\n  def __init__(self):\n    client = pymongo.MongoClient()\n    self.db = client[DATABASE]\n```", "```py\n    def get_user(self, email):\n        return self.db.users.find_one({\"email\": email})\n\n    def add_user(self, email, salt, hashed):\n        self.db.users.insert({\"email\": email, \"salt\": salt, \"hashed\": hashed})\n```", "```py\ndef add_table(self, number, owner):\n    new_id = self.db.tables.insert({\"number\": number, \"owner\": owner})\n    return new_id\n\ndef update_table(self, _id, url):\n    self.db.tables.update({\"_id\": _id}, {\"$set\": {\"url\": url}})\n\ndef get_tables(self, owner_id):\n    return list(self.db.tables.find({\"owner\": owner_id}))\n\ndef get_table(self, table_id):\n    return self.db.tables.find_one({\"_id\": ObjectId(table_id)})\n\ndef delete_table(self, table_id):\n    self.db.tables.remove({\"_id\": ObjectId(table_id)})\n```", "```py\nfrom bson.objectid import ObjectId\n```", "```py\n    def add_request(self, table_id, time):\n        table = self.get_table(table_id)\n        self.db.requests.insert({\"owner\": table['owner'], \"table_number\": table['number'],\"table_id\": table_id, \"time\": time})\n\n    def get_requests(self, owner_id):\n        return list(self.db.requests.find({\"owner\": owner_id}))\n\n    def delete_request(self, request_id):\n        self.db.requests.remove({\"_id\": ObjectId(request_id)})\n```", "```py\nif config.test\n    from mockdbhelper import MockDBHelper as DBHelper\nelse:\n    from dbhelper import DBHelper\n```", "```py\nnew_url = BH.shorten_url(config.base_url + \"newrequest/\" + tableid)\n```", "```py\nnew_url = BH.shorten_url(config.base_url + \"newrequest/\" + str(tableid))\n```", "```py\ngit add .\ngit commit -m \"DBHelper code\"\ngit push origin master\n\n```", "```py\ncd /var/www/waitercaller\ngit pull origin master\n\n```", "```py\nnano config.py\n\n```", "```py\ntest = False\nbase_url = \"http://123.456.789.123/\n\n```", "```py\nsudo service apache2 reload \n\n```", "```py\nimport pymongo\nclient = pymongo.MongoClient()\nc = client['waitercaller']\nprint c.users.create_index(\"email\", unique=True)\nprint c.requests.create_index(\"table_id\", unique=True)\n```", "```py\n    def add_request(self, table_id, time):\n        table = self.get_table(table_id)\n        try:\n            self.db.requests.insert({\"owner\": table['owner'], \"table_number\": table['number'], \"table_id\": table_id, \"time\": time})\n            return True\n        except pymongo.errors.DuplicateKeyError:\n            return False\n```", "```py\n@app.route(\"/newrequest/<tid>\")\ndef new_request(tid):\n        if DB.add_request(tid, datetime.datetime.now()):\n            return \"Your request has been logged and a waiter will be with you shortly\"\n        return \"There is already a request pending for this table. Please be patient, a waiter will be there ASAP\"\n```", "```py\npython create_mongo_indices.py\n\n```", "```py\n<link rel=\"shortcut icon\" href=\"{{ url_for('static', filename='favicon.ico') }}\">\n```", "```py\n<link rel=\"shortcut icon\" href=\"/static/favicon.ico\">\n```"]