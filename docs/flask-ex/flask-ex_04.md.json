["```py\nimport feedparser\nfrom flask import Flask\nfrom flask import render_template\nfrom flask import request\n\napp = Flask(__name__)\n\nRSS_FEEDS = {'bbc': 'http://feeds.bbci.co.uk/news/rss.xml',\n             'cnn': 'http://rss.cnn.com/rss/edition.rss',\n             'fox': 'http://feeds.foxnews.com/foxnews/latest',\n             'iol': 'http://www.iol.co.za/cmlink/1.640'}\n\n@app.route(\"/\")\ndef get_news():\n query = request.args.get(\"publication\")\n if not query or query.lower() not in RSS_FEEDS:\n publication = \"bbc\"\n else:\n publication = query.lower()\n        feed = feedparser.parse(RSS_FEEDS[publication])\n return render_template(\"home.html\",articles=feed['entries']\n\nif __name__ == \"__main__\":\n    app.run(port=5000, debug=True)\n```", "```py\n<form>\n  <input type=\"text\" name=\"publication\" placeholder=\"search\" />\n  <input type=\"submit\" value=\"Submit\" />\n</form>\n```", "```py\ngit add headlines.py\ngit add templates/home.html\ngit commit -m \"Using GET\"\ngit push origin master\n\n```", "```py\ngit branch post-requests\ngit checkout post-requests\n\n```", "```py\n<form action=\"/\" method=\"POST\">\n```", "```py\ngit add headlines.py\ngit add templates/home.html\ngit commit \u2013m \"POST requests\"\ngit checkout master\n\n```", "```py\nimport json\nimport urllib2\nimport urllib\n```", "```py\ndef get_weather(query):\n    api_url = http://api.openweathermap.org/data/2.5/weather?q={}&units=metric&appid=<your-api-key-here>\n    query = urllib.quote(query)\n    url = api_url.format(query)\n    data = urllib2.urlopen(url).read()\n    parsed = json.loads(data)\n    weather = None\n    if parsed.get(\"weather\"):\n        weather = {\"description\":parsed[\"weather\"][0][\"description\"],\"temperature\":parsed[\"main\"][\"temp\"],\"city\":parsed[\"name\"]\n                  }\n    return weather\n```", "```py\n@app.route(\"/\")\ndef get_news():\n        query = request.args.get(\"publication\")\n        if not query or query.lower() not in RSS_FEEDS:\n                publication = \"bbc\"\n        else:\n                publication = query.lower()\n        feed = feedparser.parse(RSS_FEEDS[publication])\n        weather = get_weather(\"London,UK\")\n        return render_template(\"home.html\",articles=feed[\"entries\"],weather=weather)\n\n```", "```py\n<body>\n  <h1>Headlines</h1>\n  <h2>Current weather</h2>\n  <p>City: <b>{{weather.city}}</b></p>\n  <p>{{weather.description}} |{{weather.temperature}}\u2103</p>\n  <h2>Headlines</h2>\n\n```", "```py\n<form>\n  <input type=\"text\" name=\"city\" placeholder=\"weather search\">\n  <input type=\"submit\" value=\"Submit\">\n</form>\n```", "```py\n# ...\n\nDEFAULTS = {'publication':'bbc',\n            'city': 'London,UK'}\n\n@app.route(\"/\")\ndef home():\n    # get customized headlines, based on user input or default\n    publication = request.args.get('publication')\n    if not publication:\n        publication = DEFAULTS['publication']\n    articles = get_news(publication)\n    # get customized weather based on user input or default\n    city = request.args.get('city')\n    if not city:\n        city = DEFAULTS['city']\n    weather = get_weather(city)\nreturn render_template(\"home.html\", articles=articles,weather=weather)\n\ndef get_news(query):\n    if not query or query.lower() not in RSS_FEEDS:\n        publication = DEFAULTS[\"publication\"]\n    else:\n        publication = query.lower()\n    feed = feedparser.parse(RSS_FEEDS[publication])\n    return feed['entries']\n\ndef get_weather(query):\n    query = urllib.quote(query)\n    url = WEATHER_URL.format(query)\n    data = urllib2.urlopen(url).read()\n    parsed = json.loads(data)\n    weather = None\n    if parsed.get('weather'):\n        weather = {'description':parsed['weather'][0]['description'],'temperature':parsed['main']['temp'],'city':parsed['name']}\n    return weather\n```", "```py\nweather = {'description': parsed['weather'][0]['description'],\n           'temperature': parsed['main']['temp'],\n           'city': parsed['name'],\n 'country': parsed['sys']['country']\n          }\n```", "```py\n<p>City: <b>{{weather.city}}, {{weather.country}}</b></p>\n```", "```py\nWEATHER_URL = \"http://api.openweathermap.org/data/2.5/weather?q={}&units=metric&APPID=<your-api-key-here>\"\nCURRENCY_URL = \"https://openexchangerates.org//api/latest.json?app_id=<your-api-key-here>\"\n```", "```py\ndef get_rate(frm, to):\n        all_currency = urllib2.urlopen(CURRENCY_URL).read()\n\n        parsed = json.loads(all_currency).get('rates')\n        frm_rate = parsed.get(frm.upper())\n        to_rate = parsed.get(to.upper())\n        return to_rate/frm_rate\n```", "```py\nDEFAULTS = {'publication':'bbc',\n            'city': 'London,UK',\n 'currency_from':'GBP',\n 'currency_to':'USD'\n}\n\n@app.route(\"/\")\ndef home():\n    # get customized headlines, based on user input or default\n    publication = request.args.get('publication')\n    if not publication:\n        publication = DEFAULTS['publication']\n    articles = get_news(publication)\n    # get customized weather based on user input or default\n    city = request.args.get('city')\n    if not city:\n        city = DEFAULTS['city']\n    weather = get_weather(city)\n    # get customized currency based on user input or default\n    currency_from = request.args.get(\"currency_from\")\n    if not currency_from:\n        currency_from = DEFAULTS['currency_from']\n    currency_to = request.args.get(\"currency_to\")\n    if not currency_to:\n        currency_to = DEFAULTS['currency_to']\n    rate = get_rate(currency_from, currency_to)\n    return render_template(\"home.html\", articles=articles,weather=weather,\n                           currency_from=currency_from, currency_to=currency_to, rate=rate)\n```", "```py\n<h2>Currency</h2>\n1 {{currency_from}} = {{currency_to}} {{rate}}\n```", "```py\n<form>\n    from: <select name=\"currency_from\">\n            <option value=\"USD\">USD</option>\n            <option value=\"GBP\">GBP</option>\n            <option value=\"EUR\">EUR</option>\n            <option value=\"ZAR\">ZAR</option>\n          </select>\n\n     to: <select name=\"currency_to\">\n           <option value=\"USD\">USD</option>\n           <option value=\"GBP\">GBP</option>\n           <option value=\"EUR\">EUR</option>\n           <option value=\"ZAR\">ZAR</option>\n         </select>\n         <input type=\"submit\" value=\"Submit\">\n</form>\n```", "```py\n        if not currency_to:\n          currency_to=DEFAULTS['currency_to']\n rate, currencies = get_rate(currency_from, currency_to)\n return render_template(\"home.html\", articles=articles,weather=weather, currency_from=currency_from, currency_to=currency_to,    rate=rate,currencies=sorted(currencies))\n```", "```py\nfrm_rate = parsed.get(frm.upper())\nto_rate = parsed.get(to.upper())\nreturn (to_rate / frm_rate, parsed.keys())\n\n```", "```py\n        <h2>Currency</h2>\n        <form>\n                from: <select name=\"currency_from\">\n {% for currency in currencies %}\n <optionvalue=\"{{currency}}\">{{currency}}</option>\n {% endfor %}\n                      </select>\n\n                to: <select name=\"currency_to\">\n {% for currency in currencies %}\n <option value=\"{{currency}}\">{{currency}}</option>\n {% endfor %}\n\n                    </select>\n                <input type=\"submit\" value=\"Submit\">\n        </form>\n        1 {{currency_from}} = {{currency_to}} {{rate}}\n```", "```py\n{% for currency in currencies %}\n    <option value=\"{{currency}}\" {{'selected=\"selected\"' if currency_from==currency}}>{{currency}}</option>\n{% endfor %}\n```", "```py\n{% for currency in currencies %}\n    <option value=\"{{currency}}\" {{'selected=\"selected\"' if currency_to==currency}}>{{currency}}</option>\n{% endfor %}\n```"]