["```py\n# ref: https://help.github.com/articles/generating-ssh-keys/\n# type a passphrase when asked for one\nssh-keygen -t rsa -b 4096 -C \"your_email@example.com\"\n\n```", "```py\n# type the root password when requested\nssh-copy-id root@ipaddress\n\n```", "```py\n# as root\napt-get purge apache2-*\napt-get install postgresql\n# type to check which version of postgres was installed (most likely 9.x)\npsql -V\n\n```", "```py\nsudo -u postgres psql\n\n```", "```py\nCREATE DATABASE mydb;\n\n```", "```py\nCREATE USER you WITH PASSWORD 'passwd'; # please, use a strong password\n# We now make sure \"you\" can do whatever you want with mydb\n# You don't want to keep this setup for long, be warned\nGRANT ALL PRIVILEGES ON DATABASE mydb TO you;\n\n```", "```py\nCREATE ROLE you WITH LOGIN;\n\n```", "```py\npsql -U user_you -d database_mydb -h 127.0.0.1 -W\n\n```", "```py\nsudo apt-get install python-dev\npip install fabric\n\n```", "```py\n# coding:utf-8\n\nfrom fabric.api import *\nfrom fabric.contrib.files import exists\n\nenv.linewise = True\n# forward_agent allows you to git pull from your repository\n# if you have your ssh key setup\nenv.forward_agent = True\nenv.hosts = ['your.host.ip.address']\n\ndef create_project():\n    if not exists('~/project'):\n        run('git clone git://path/to/repo.git')\n\ndef update_code():\n    with cd('~/project'):\n        run('git pull')\ndef reload():\n    \"Reloads project instance\"\n    run('touch --no-dereference /tmp/reload')\n```", "```py\nfab create_project  # creates our project in the home folder of our remote web server\nfab update_code  # updates our project code from the version control repository\n\n```", "```py\npip install uwsgi\n\n```", "```py\n# coding:utf-8\nfrom main import app_factory\n\napp = app_factory(name=\"myproject\")\n```", "```py\n[uwsgi]\nuser-home = /home/your-system-username\nproject-name = myproject\nproject-path = %(user-home)/%(myproject)\n\n# make sure paths exist\nsocket = %(user-home)/%(project-name).sock\npidfile = %(user-home)/%(project-name).pid\nlogto = /var/tmp/uwsgi.%(prj).log\ntouch-reload = /tmp/reload\nchdir = %(project-path)\nwsgi-file = %(project-path)/wsgi.py\ncallable = app\nchmod-socket = 664\n\nmaster = true\nprocesses = 5\nvacuum = true\ndie-on-term = true\noptimize = 2\n```", "```py\nsudo apt-get install nginx-full\n\n```", "```py\nserver {\n    listen 80;\n    server_name PROJECT_DOMAIN;\n\n    location /media {\n        alias /path/to/media;\n    }\n    location /static {\n        alias /path/to/static;\n    }\n\n    location / {\n        include         /etc/nginx/uwsgi_params;\n        uwsgi_pass      unix:/path/to/socket/file.sock;\n    }\n}\n```", "```py\nsudo rm /etc/nginx/sites-enabled/default\nln -s /etc/nginx/sites-available/project /etc/nginx/sites-enabled/project\n\n```", "```py\ndescription \"uWSGI application my project\"\n\nstart on runlevel [2345]\nstop on runlevel [!2345]\n\nsetuid your-user\nsetgid www-data\n\nexec /path/to/uwsgi --ini /path/to/ini/file.ini\n```", "```py\nstart project\n\n```", "```py\nsudo /etc/init.d/nginx reload\n\n```"]