["```py\n$ git init\n\n```", "```py\n$ git status\n\n```", "```py\n# In Bash, comments are marked with a #, just like Python\n# Add any files that have changes and you wish to save in this commit\n$ git add main.py\n# Commit the changes, add in your commit message with -m\n$ git commit -m\"Our first commit\"\n\n```", "```py\n# To see the changes from the last commit\n$ git diff\n# To see the history of your changes\n$ git log\n# As an example, we will stage main.py\n# and then remove any added files from the stage\n$ git add main.py\n$ git status\n$ git reset HEAD main.py\n# After any complicated changes, be sure to run status\n# to make sure everything went well\n$ git status\n# lets delete the changes to main.py, reverting to its state at the last commit\n# This can only be run on files that aren't staged\n$ git checkout -- main.py\n\n```", "```py\n$ git log\nFri Jan 23 19:16:43 2015 -0500 f01d1e2 Our first commit  [Jack Stouffer]\n\n```", "```py\n$ git checkout f01d1e2\n\n```", "```py\n$ git checkout master\n\n```", "```py\npip --help\n\n```", "```py\n$ sudo python get-pip.py\n\n```", "```py\n$ pip install [package-name]\n\n```", "```py\n$ pip install flask\n\n```", "```py\n$ pip uninstall [package-name]\n\n```", "```py\n$ pip search [search-term]\n\n```", "```py\n$ pip freeze > requirements.txt\n\n```", "```py\nFlask==0.10.1\nitsdangerous==0.24\nJinja2==2.7.3\nMarkupSafe==0.23\nWerkzeug==0.10.4\nwheel==0.24.0\n```", "```py\n$ pip install -r requirements.txt\n\n```", "```py\n$ pip install virtualenv\n\n```", "```py\n$ virtualenv env\n\n```", "```py\n$ source env/bin/activate\n# Your prompt should now look like\n(env) $\n\n```", "```py\n# you won't need sudo anymore\n(env) $ pip install flask\n# To return to the global Python\n(env) $ deactivate\n\n```", "```py\n$ touch .gitignore\n\n```", "```py\nenv/\n*.pyc\n```", "```py\nclass Config(object):\n    pass\n\nclass ProdConfig(Config):\n    pass\n\nclass DevConfig(Config):\n    DEBUG = True\n```", "```py\nfrom flask import Flask\nfrom config import DevConfig\n\napp = Flask(__name__)\napp.config.from_object(DevConfig)\n\n@app.route('/')\ndef home():\n    return '<h1>Hello World!</h1>'\n\nif __name__ == '__main__':\n    app.run()\n```", "```py\n# The --all flag will tell git to stage all changes you have made\n# including deletions and new files\n$ git add --all\n$ git commit -m \"created the base application\"\n\n```", "```py\n$ pip install flask-script\n\n```", "```py\nfrom flask.ext.script import Manager, Server\nfrom main import app\n```", "```py\nmanager = Manager(app)\n```", "```py\nmanager.add_command(\"server\", Server())\n\n@manager.shell\ndef make_shell_context():\n    return dict(app=app)\n```", "```py\nif __name__ == \"__main__\":\n    manager.run()\n```", "```py\n$ python manage.py server\n\n```", "```py\n$ python manage.py shell\n# Lets check if our app imported correctly\n>>> app\n<Flask 'main'>\n\n```"]