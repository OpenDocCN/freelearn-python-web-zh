["```py\nwebapp/\n  config.py\n  database.db\n  main.py\n  manage.py\n  env/\n  migrations/\n    versions/\n  static/\n    css/\n    js/\n  templates/\n    blog/\n```", "```py\nwebapp/\n  manage.py\n  database.db\n  webapp/\n    __init__.py\n    config.py\n    forms.py\n    models.py\n    controllers/\n      __init__.py\n      blog.py\n    static/\n      css/\n      js/\n    templates/\n      blog/\n  migrations/\n    versions/\n```", "```py\nfrom flask.ext.sqlalchemy import SQLAlchemy\n\ndb = SQLAlchemy()\n\ntags = db.Table(\n    'post_tags',\n    db.Column('post_id', db.Integer, db.ForeignKey('post.id')),\n    db.Column('tag_id', db.Integer, db.ForeignKey('tag.id'))\n)\n\nclass User(db.Model):\n    \u2026\n\nclass Post(db.Model):\n    \u2026\n\nclass Comment(db.Model):\n    \u2026\n\nclass Tag(db.Model):\n    \u2026\n```", "```py\nfrom flask_wtf import Form\nfrom wtforms import StringField, TextAreaField\nfrom wtforms.validators import DataRequired, Length\n\nclass CommentForm(Form):\n    \u2026\n```", "```py\nimport datetime\nfrom os import path\nfrom sqlalchemy import func\nfrom flask import render_template, Blueprint\n\nfrom webapp.models import db, Post, Tag, Comment, User, tags\nfrom webapp.forms import CommentForm\n\nblog_blueprint = Blueprint(\n    'blog',\n    __name__,\n    template_folder=path.join(path.pardir, 'templates', 'blog')\n    url_prefix=\"/blog\"\n)\n\ndef sidebar_data():\n    \u2026\n```", "```py\nfrom flask import Flask, redirect, url_for\nfrom config import DevConfig\n\nfrom models import db\nfrom controllers.blog import blog_blueprint\n\napp = Flask(__name__)\napp.config.from_object(DevConfig)\n\ndb.init_app(app)\n\n@app.route('/')\ndef index():\n    return redirect(url_for('blog.home'))\n\napp.register_blueprint(blog_blueprint)\n\nif __name__ == '__main__':\n    app.run()\n```", "```py\nfrom os import path\n\nclass DevConfig(object):\n    SQLALCHEMY_DATABASE_URI = 'sqlite://' + path.join(\n        path.pardir,\n        'database.db'\n    )\n```", "```py\nfrom webapp import app\nfrom webapp.models import db, User, Post, Tag, Comment\n```", "```py\nfrom flask import Flask, redirect, url_for\nfrom models import db\nfrom controllers.blog import blog_blueprint\n\ndef create_app(object_name):\n    app = Flask(__name__)\n    app.config.from_object(object_name)\n\n    db.init_app(app)\n\n    @app.route('/')\n    def index():\n        return redirect(url_for('blog.home'))\n\n    app.register_blueprint(blog_blueprint)\n\n    return app\n```", "```py\nimport os\nfrom flask.ext.script import Manager, Server\nfrom flask.ext.migrate import Migrate, MigrateCommand\nfrom webapp import create_app\nfrom webapp.models import db, User, Post, Tag, Comment\n\n# default to dev config\nenv = os.environ.get('WEBAPP_ENV', 'dev')\napp = create_app('webapp.config.%sConfig' % env.capitalize())\n\u2026\nmanager = Manager(app)\nmanager.add_command(\"server\", Server())\n```", "```py\n$ export WEBAPP_ENV=\"dev\"\n\n```", "```py\n$ echo $WEBAPP_ENV\ndev\n\n```", "```py\n$ unset $WEBAPP_ENV\n$ echo $WEBAPP_ENV\n\n```"]