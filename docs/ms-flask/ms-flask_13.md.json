["```py\n$ pip install fabric\n\n```", "```py\nfrom fabric.api import local\n\ndef test():\n    local('python -m unittest discover')\n```", "```py\n$ fab test\n[localhost] local: python -m unittest discover\n.....\n---------------------------------------------------------------------\nRan 5 tests in 6.028s\nOK\n\n```", "```py\nfrom fabric.api import env, local, run, sudo, cd\n\nenv.hosts = ['deploy@[your IP]']\n\ndef upgrade_libs():\n    sudo(\"apt-get update\")\n    sudo(\"apt-get upgrade\")\n\ndef setup():\n    test()\n    upgrade_libs()\n\n    # necessary to install many Python libraries \n    sudo(\"apt-get install -y build-essential\")\n    sudo(\"apt-get install -y git\")\n    sudo(\"apt-get install -y python\")\n    sudo(\"apt-get install -y python-pip\")\n    # necessary to install many Python libraries\n    sudo(\"apt-get install -y python-all-dev\")\n\n    run(\"useradd -d /home/deploy/ deploy\")\n    run(\"gpasswd -a deploy sudo\")\n\n    # allows Python packages to be installed by the deploy user\n    sudo(\"chown -R deploy /usr/local/\")\n    sudo(\"chown -R deploy /usr/lib/python2.7/\")\n\n    run(\"git config --global credential.helper store\")\n\n    with cd(\"/home/deploy/\"):\n        run(\"git clone [your repo URL]\")\n\n    with cd('/home/deploy/webapp'):\n        run(\"pip install -r requirements.txt\")\n        run(\"python manage.py createdb\")\n```", "```py\ndef deploy():\n    test()\n    upgrade_libs()\n    with cd('/home/deploy/webapp'):\n        run(\"git pull\")\n        run(\"pip install -r requirements.txt\")\n```", "```py\n$ fabric setup\n$ fabric deploy\n```", "```py\ndef setup():\n    \u2026\n    sudo(\"apt-get install -y supervisor\")\n```", "```py\n[program:webapp]\ncommand=\ndirectory=/home/deploy/webapp\nuser=deploy\n\n[program:rabbitmq]\ncommand=rabbitmq-server\nuser=deploy\n\n[program:celery]\ncommand=celery worker -A celery_runner \ndirectory=/home/deploy/webapp\nuser=deploy\n```", "```py\ndef deploy():\n    \u2026\n    with cd('/home/deploy/webapp'):\n        \u2026\n        sudo(\"cp supervisord.conf /etc/supervisor/conf.d/webapp.conf\")\n\n    sudo('service supervisor restart')\n```", "```py\n$ pip install gevent\n\n```", "```py\nfrom gevent.wsgi import WSGIServer\nfrom webapp import create_app\n\napp = create_app('webapp.config.ProdConfig')\n\nserver = WSGIServer(('', 80), app)\nserver.serve_forever()\n```", "```py\n[program:webapp]\ncommand=python gserver.py \ndirectory=/home/deploy/webapp\nuser=deploy\n\n```", "```py\nfrom tornado.wsgi import WSGIContainer\nfrom tornado.httpserver import HTTPServer\nfrom tornado.ioloop import IOLoop\nfrom webapp import create_app\napp = WSGIContainer(create_app(\"webapp.config.ProdConfig\"))\nhttp_server = HTTPServer(app)\nhttp_server.listen(80)\nIOLoop.instance().start()\n```", "```py\n[program:webapp]\ncommand=python tserver.py \ndirectory=/home/deploy/webapp\nuser=deploy\n```", "```py\n$ pip install uwsgi\n\n```", "```py\nfrom webapp import create_app\n\napp = create_app(\"webapp.config.ProdConfig\")\n```", "```py\n$ uwsgi --socket 127.0.0.1:8080 \\\n--wsgi-file wsgi.py \\\n--callable app \\\n--processes 4 \\\n--threads 2\n\n```", "```py\n[uwsgi]\nsocket = 127.0.0.1:8080\nwsgi-file = wsgi.py\ncallable = app\nprocesses = 4\nthreads = 2\n```", "```py\n[program:webapp]\ncommand=uwsgi uwsgi.ini\ndirectory=/home/deploy/webapp\nuser=deploy\n```", "```py\ndef setup():\n    \u2026\n    sudo(\"apt-get install -y nginx\")\n```", "```py\nserver {\n    listen 80;\n    server_name your_domain_name;\n\n    location / {\n        include uwsgi_params;\n        uwsgi_pass 127.0.0.1:8080;\n    }\n\n    location /static {\n        alias /home/deploy/webapp/webapp/static;\n    }\n}\n```", "```py\ndef deploy():\n    \u2026\n    with cd('/home/deploy/webapp'):\n        \u2026\n        sudo(\"cp nginx.conf \"\n             \"/etc/nginx/sites-available/[your_domain]\")\n        sudo(\"ln -sf /etc/nginx/sites-available/your_domain \"\n             \"/etc/nginx/sites-enabled/[your_domain]\") \n\n    sudo(\"service nginx restart\")\n```", "```py\n<VirtualHost *:80>\n    <Location />\n        ProxyPass / uwsgi://127.0.0.1:8080/\n    </Location>\n</VirtualHost>\n```", "```py\ndef setup():\n\n    sudo(\"apt-get install -y apache2\")\n    sudo(\"apt-get install -y libapache2-mod-proxy-uwsgi\")\n```", "```py\ndef deploy():\n    \u2026\n    with cd('/home/deploy/webapp'):\n        \u2026\n        sudo(\"cp apache.conf \"\n             \"/etc/apache2/sites-available/[your_domain]\")\n        sudo(\"ln -sf /etc/apache2/sites-available/[your_domain] \"\n             \"/etc/apache2/sites-enabled/[your_domain]\") \n\n    sudo(\"service apache2 restart\")\n```", "```py\nweb: uwsgi uwsgi.ini \n```", "```py\npython-2.7.10\n```", "```py\n[uwsgi]\nhttp-socket = :$(PORT)\ndie-on-term = true\nwsgi-file = wsgi.py\ncallable = app\nprocesses = 4\nthreads = 2\n```", "```py\n$ heroku login\n\n```", "```py\n$ foreman start web\n\n```", "```py\n$ heroku create\n$ git push heroku master\n\n```", "```py\n$ heroku open\n\n```", "```py\nweb: uwsgi uwsgi.ini\ncelery: celery worker -A celery_runner\n```", "```py\n$  heroku addons:create cloudamqp:lemur\n\n```", "```py\n$ pip install awsebcli\n\n```", "```py\n$ eb init\n\n```", "```py\n$ eb open\n\n```", "```py\nfrom webapp import create_app\napplication = create_app(\"webapp.config.ProdConfig\")\n```", "```py\n$ eb deploy\n\n```", "```py\n$ pip install boto\n\n```", "```py\nsqs://aws_access_key_id:aws_secret_access_key@\n```", "```py\n  celery_start: \n    command: celery multi start worker1 -A celery_runner\n```"]