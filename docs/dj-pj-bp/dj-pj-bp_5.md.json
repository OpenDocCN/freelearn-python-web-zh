["```py\n> python manage.py createsuperuser\n\n```", "```py\n{% trans \"Movies List\" %}\n```", "```py\n{% load i18n %}\n```", "```py\n> python manage.py makemessages -l fr\nCommandError: Unable to find a locale path to store translations for file main/__init__.py\n\n```", "```py\n>mkdir main/locale\n> python manage.py makemessages -l fr\nprocessing locale fr\n\n```", "```py\n#: main/templates/movies_list.html:5\nmsgid \"Movies List\"\nmsgstr \"\"\n```", "```py\n#: main/templates/movies_list.html:5\nmsgid \"Movies List\"\nmsgstr \"Liste des films\"\n```", "```py\n> python manage.py compilemessages -l fr\nprocessing file django.po in /Users/asadjb/Programming/Personal/DjangoBluePrints/mmdb/mmdb/main/locale/fr/LC_MESSAGES\n\n```", "```py\nMIDDLEWARE_CLASSES = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n 'django.middleware.locale.LocaleMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\n```", "```py\nLANGUAGES = (\n    ('en', 'English'),\n    ('fr', 'French')\n)\n```", "```py\nurlpatterns = i18n_patterns(\nurl(r'^$', MoviesListView.as_view(), name='movies-list'),\nurl(r'^movie/(?P<pk>\\d+)/$', MovieDetailsView.as_view(), name='movie-details'),\nurl(r'^movie/(?P<movie_pk>\\d+)/review/$', NewReviewView.as_view(), name='new-review'),\n\nurl(r'^admin/', admin.site.urls),\n)\n```", "```py\n{% trans \"Stars\" %}\n```", "```py\n> python manage.py makemessages -l fr\n\n```", "```py\n> python manage.py compilemessages\n\n```", "```py\n# SOME DESCRIPTIVE TITLE.\n# Copyright (C) YEAR THE PACKAGE'S COPYRIGHT HOLDER\n# This file is distributed under the same license as the PACKAGE package.\n# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.\n#\n#, fuzzy\nmsgid \"\"\nmsgstr \"\"\n\"Project-Id-Version: PACKAGE VERSION\\n\"\n\"Report-Msgid-Bugs-To: \\n\"\n\"POT-Creation-Date: 2016-02-15 21:25+0000\\n\"\n\"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\\n\"\n\"Last-Translator: FULL NAME <EMAIL@ADDRESS>\\n\"\n\"Language-Team: LANGUAGE <LL@li.org>\\n\"\n\"Language: \\n\"\n\"MIME-Version: 1.0\\n\"\n\"Content-Type: text/plain; charset=UTF-8\\n\"\n\"Content-Transfer-Encoding: 8bit\\n\"\n\"Plural-Forms: nplurals=2; plural=(n > 1);\\n\"\n\n#: main/templates/movies_list.html:6\nmsgid \"Movies List\"\nmsgstr \"Liste des films\"\n\n#: main/templates/movies_list.html:10\nmsgid \"Stars\"\nmsgstr \"\u00c9toile\"\n```", "```py\nurl(r'^example/$', View.as_view(), name='example')\n```", "```py\nurlpatterns = i18n_patterns(url(r'^example/$', ExampleView.as_view(), name='example')) + [url(r'^api/$', ApiView.as_view(), name='api')]\n```", "```py\n{% load i18n %}\n\n<html>\n<head>\n<meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\" />\n\n<title>MMDB</title>\n</head>\n<body>\n<h1>MMDB</h1>\n<div>\n<span>Select Language</span>\n<ul>\n {% get_available_languages as available_languages %}\n {% for lang_code, lang_name in available_languages %}\n {% language lang_code %}<li><a href=\"{% url \"movies-list\" %}\">{{ lang_name }}</a></li>{% endlanguage %}\n {% endfor %}\n</ul>\n</div>\n    {% block content %}\n    {% endblock %}\n</body>\n</html>\n```", "```py\nclass MoviesListView(ListView):\n    model = MovieDetails\n    template_name = 'movies_list.html'\n\n    def get(self, request, *args, **kwargs):\n        current_language = get_language()\n        request.session[LANGUAGE_SESSION_KEY] = current_language\n\n        return super(MoviesListView, self).get(request, *args, **kwargs)\n```", "```py\nfrom django.utils.translation import LANGUAGE_SESSION_KEY\nfrom django.utils.translation import get_language\n```", "```py\nclass MovieDetails(models.Model):\n    title = models.CharField(max_length=500)\n    title_fr = models.CharField(max_length=500)\n\n    description = models.TextField()\n    description_fr = models.TextField()\n\n    stars = models.PositiveSmallIntegerField()\n\n    def __str__(self):\n        return self.title\n```", "```py\n> python manage.py makemigrations\nYou are trying to add a non-nullable field 'description_fr' to moviedetails without a default; we can't do that (the database needs something to populate existing rows).\nPlease select a fix:\n 1) Provide a one-off default now (will be set on all existing rows)\n 2) Quit, and let me add a default in models.py\nSelect an option: 1\nPlease enter the default value now, as valid Python\nThe datetime and django.utils.timezone modules are available, so you can do e.g. timezone.now()\n>>> ''\nYou are trying to add a non-nullable field 'title_fr' to moviedetails without a default; we can't do that (the database needs something to populate existing rows).\nPlease select a fix:\n 1) Provide a one-off default now (will be set on all existing rows)\n 2) Quit, and let me add a default in models.py\nSelect an option: 1\nPlease enter the default value now, as valid Python\nThe datetime and django.utils.timezone modules are available, so you can do e.g. timezone.now()\n>>> ''\nMigrations for 'main':\n 0002_auto_20160216_2300.py:\n - Add field description_fr to moviedetails\n - Add field title_fr to moviedetails\n - Alter field movie on moviereview\n\n```", "```py\n> python manage.py migrate\nOperations to perform:\n Apply all migrations: admin, contenttypes, main, auth, sessions\nRunning migrations:\n Rendering model states... DONE\n Applying main.0002_auto_20160216_2300... OK\n\n```", "```py\nfrom django.utils.translation import get_language\n```", "```py\nclass MovieDetails(models.Model):\n    title = models.CharField(max_length=500)\n    title_fr = models.CharField(max_length=500)\n\n    description = models.TextField()\n    description_fr = models.TextField()\n\n    stars = models.PositiveSmallIntegerField()\n\n def get_title(self):\n return self._get_translated_field('title')\n\n def get_description(self):\n return self._get_translated_field('description')\n\n def _get_translated_field(self, field_name):\n original_field_name = field_name\n\n lang_code = get_language()\n\n if lang_code != 'en':\n field_name = '{}_{}'.format(field_name, lang_code)\n field_value = getattr(self, field_name)\n\n if field_value:\n return field_value\n else:\n return getattr(self, original_field_name)\n\n    def __str__(self):\n        return self.title\n```", "```py\n{% extends \"base.html\" %}\n{% load i18n %}\n\n{% block content %}\n<h2>{% trans \"Movies List\" %}</h2>\n\n<ul>\n    {% for movie in object_list %}\n<li><a href=\"{% url 'movie-details' pk=movie.pk %}\">{{ movie.get_title }}</a> | {{ movie.stars }} {% trans \"Stars\" %}</li>\n    {% endfor %}\n</ul>\n{% endblock %}\n```"]