["```py\nDATABASES = {\n  'default': {\n    'ENGINE': 'django.db.backends.sqlite3', \n    'NAME': os.path.join(PROJECT_ROOT, 'database.db'), \n    'USER': '',                     \n    'PASSWORD': '',                 \n    'HOST': '',                     \n    'PORT': '',                     \n  }\n}\n```", "```py\npip install South\n\n```", "```py\n'south',\n'TasksManager',\n```", "```py\nmanage.py schemamigration TasksManager --initial \n\n```", "```py\nmanage.py syncdb --migrate \n\n```", "```py\n    manage.py schemamigration TasksManager \u2013auto\n    manage.py migrate TasksManager\n\n    ```", "```py\nfrom django.db import models\n```", "```py\nclass UserProfile(models.Model):\n  name = models.CharField(max_length=50, verbose_name=\"Name\")\n  login = models.CharField(max_length=25, verbose_name=\"Login\")\n  password = models.CharField(max_length=100, verbose_name=\"Password\")\n  phone = models.CharField(max_length=20, verbose_name=\"Phone number\" , null=True, default=None, blank=True)\n  born_date = models.DateField(verbose_name=\"Born date\" , null=True, default=None, blank=True)\n  last_connection = models.DateTimeField(verbose_name=\"Date of last connection\" , null=True, default=None, blank=True)\n  email = models.EmailField(verbose_name=\"Email\")\n  years_seniority = models.IntegerField(verbose_name=\"Seniority\", default=0)\n  date_created = models.DateField(verbose_name=\"Date of Birthday\", auto_now_add=True)\n```", "```py\nclass Project(models.Model):\n  title = models.CharField(max_length=50, verbose_name=\"Title\")\n  description = models.CharField(max_length=1000, verbose_name=\"Description\")\n  client_name = models.CharField(max_length=1000, verbose_name=\"Client name\")\n```", "```py\nclass Task(models.Model):\n  title = models.CharField(max_length=50, verbose_name=\"Title\")\n  description = models.CharField(max_length=1000, verbose_name=\"Description\")\n  time_elapsed = models.IntegerField(verbose_name=\"Elapsed time\" , null=True, default=None, blank=True)\n  importance = models.IntegerField(verbose_name=\"Importance\")\n  project = models.ForeignKey(Project, verbose_name=\"Project\" , null=True, default=None, blank=True)\n  app_user = models.ForeignKey(UserProfile, verbose_name=\"User\")\n```", "```py\nclass Supervisor(models.Model):\n  # Duplicated common fields\n  specialisation = models.CharField(max_length=50, verbose_name=\"Specialisation\")\n\nclass Developer(models.Model):\n  # Duplicated common fields\n  supervisor = models.ForeignKey(Supervisor, verbose_name=\"Supervisor\")\n```", "```py\nclass Supervisor(UserProfile):\n  specialisation = models.CharField(max_length=50, verbose_name=\"Specialisation\")\n\nclass Developer(UserProfile):\n  supervisor = models.ForeignKey(Supervisor, verbose_name=\"Supervisor\")\n```", "```py\napp_user = models.ForeignKey(App_user, verbose_name=\"User\")\n```", "```py\ndeveloper = models.ForeignKey(Developer, verbose_name=\"User\")\n```", "```py\nmanage.py schemamigration TasksManager --auto\nmanage.py migrate\npause\n\n```", "```py\n#!/bin/bash\nmanage.py runserver 127.0.0.1:8000\n\n```", "```py\n'django.contrib.admin'\n```", "```py\nfrom django.contrib import admin\nadmin.autodiscover()\nurl (r'^admin', include(admin.site.urls)),\n```", "```py\nfrom django.contrib import admin\nfrom TasksManager.models import UserProfile, Project, Task , Supervisor , Developer\nadmin.site.register(UserProfile)\nadmin.site.register(Project)\nadmin.site.register(Task)\nadmin.site.register(Supervisor)\nadmin.site.register(Developer)\n```", "```py\ndeveloper1 = models.ForeignKey (Developer , verbose_name = \"User\" , related_name = \"dev1\" )\ndeveloper2 = models.ForeignKey (Developer , verbose_name = \"User\" , related_name = \"dev2\" )\n```", "```py\n#Relationship to add to the Task model\ndevelopers = models.ManyToManyField(Developer , through=\"DeveloperWorkTask\")\nclass DeveloperWorkTask(models.Model):\n  developer = models.ForeignKey(Developer)\n  task = models.ForeignKey(Task)\n  time_elapsed_dev = models.IntegerField(verbose_name=\"Time elapsed\", null=True, default=None, blank=True)\n```", "```py\nclass UserProfile ( models.Model ) :\n# Fields...\ndef __str__ (self):\n  return self.name\n```"]