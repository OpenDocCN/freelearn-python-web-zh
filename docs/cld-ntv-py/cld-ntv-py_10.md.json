["```py\n$ apt-get update -y \n\n```", "```py\n$ sudo apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys 58118E89F3A912897C070ADBF76221572C52609D \n\n```", "```py\n$ sudo apt-add-repository 'deb https://apt.dockerproject.org/repo ubuntu-xenial main' \n\n```", "```py\n$ apt-get update -y\n\n```", "```py\n$ sudo apt-get install -y docker-engine -y \n\n```", "```py\n$ docker -v   \nDocker version 17.05.0-ce, build 89658be \n\n```", "```py\n$ docker help \n\n```", "```py\n $ choco install docker\n\n```", "```py\n$ docker swarm init --advertise-addr master_ip_address \n\n```", "```py\n$ docker swarm join     --token SWMTKN-1-\n1le69e43paf0vxyvjdslxaluk1a1mvi5lb6ftvxdoldul6k3dl-\n1dr9qdmbmni5hnn9y3oh1nfxp    master-ip-address:2377 \n\n```", "```py\n$ docker node ls \n\n```", "```py\n$ docker service create  --detach=false -p 80:80 --name webserver\nnginx \n\n```", "```py\n$ docker service ps webserver \n\n```", "```py\n$ docker service ls \n\n```", "```py\n$ docker service scale webserver=3 \n\n```", "```py\n    # MongoDB Dockerfile \n    # Pull base image. \n    FROM ubuntu \n    MAINTAINER Manish Sethi<manish@sethis.in> \n    # Install MongoDB. \n    RUN \\ \n    apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv \n    7F0CEB10 && \\ \n    echo 'deb http://downloads-distro.mongodb.org/repo/ubuntu-upstart\n    dist 10gen' > /etc/apt/sources.list.d/mongodb.list && \\ \n    apt-get update && \\ \n    apt-get install -y mongodb-org && \\ \n    rm -rf /var/lib/apt/lists/* \n\n    # Define mountable directories. \n    VOLUME [\"/data/db\"] \n\n    # Define working directory. \n    WORKDIR /data \n\n    # Define default command. \n    CMD [\"mongod\"] \n\n    # Expose ports. \n    EXPOSE 27017 \n    EXPOSE 28017 \n\n```", "```py\n    # Pull base image. \n    FROM ubuntu \n\n```", "```py\n    # Install MongoDB \n    RUN \\ \n    apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv \n    7F0CEB10 && \\ \n    echo 'deb http://downloads-distro.mongodb.org/repo/ubuntu-upstart \n    dist 10gen' > /etc/apt/sources.list.d/mongodb.list && \\ \n    apt-get update && \\ \n    apt-get install -y mongodb-org && \\ \n    rm -rf /var/lib/apt/lists/*\n\n```", "```py\n    # Define mountable directories. \n    VOLUME [\"/data/db\"] \n\n```", "```py\n    EXPOSE 27017 \n    EXPOSE 28017 \n\n```", "```py\n$ docker build --tag mongodb:ms-packtpub-mongodb\n\n```", "```py\n$ docker images\n\n```", "```py\n$ docker run -d -p 27017:27017 -p 28017:28017 --name mongodb mongodb:ms-packtpub-mongodb mongod --rest --httpinterface\n\n```", "```py\n$ docker login\n\n```", "```py\n$ docker tag mongodb:ms-packtpub-mongodb manishsethis/docker-packtpub\n\n```", "```py\n$ docker push manishsethis/docker-packtpub\n\n```", "```py\n$ docker pull manishsethis/docker-packtpub\n\n```", "```py\n FROM ubuntu:14.04 \n    MAINTAINER Manish Sethi<manish@sethis.in> \n\n    # no tty \n    ENV DEBIAN_FRONTEND noninteractive \n\n    # get up to date \n    RUN apt-get -qq update --fix-missing \n\n    # Bootstrap the image so that it includes all of our dependencies \n    RUN apt-get -qq install python3  python-dev python-virtualenv\n python3-pip --assume-yes \n    RUN sudo apt-get install build-essential autoconf libtool libssl-\n dev libffi-dev --assume-yes \n # Setup locale \n    RUN export LC_ALL=en_US.UTF-8 \n    RUN export LANG=en_US.UTF-8 \n    RUN export LANGUAGE=en_US.UTF-8 \n\n    # copy the contents of the cloud-native-app(i.e. complete\n application) folder into the container at build time \n COPY cloud-native-app/ /app/ \n\n    # Create Virtual environment \n    RUN mkdir -p /venv/ \n    RUN virtualenv /venv/ --python=python3 \n\n    # Python dependencies inside the virtualenv \n    RUN /venv/bin/pip3 install -r /app/requirements.txt \n\n    # expose a port for the flask development server \n    EXPOSE 5000 \n\n    # Running our flask application  \n    CMD cd /app/ && /venv/bin/python app.py \n\n```", "```py\n  COPY cloud-native-app/ /app/ \n\n```", "```py\n# Running our flask application  \nCMD cd /app/ && /venv/bin/python app.py \n\n```", "```py\n$ docker build --tag cloud-native-app:latest .\n\n```", "```py\n$ docker run -d -p 5000:5000  --name=myapp  cloud-native-app:latest\n\n```", "```py\n      $ docker network create -d bridge --subnet 172.25.0.0/16\n      mynetwork\n\n```", "```py\n      $ docker network connect mynetwork  myapp\n      $ docker network connect mynetwork  mongodb\n\n```", "```py\n      $ docker inspect --format '{{ .NetworkSettings.IPAddress }}'\n      $(docker ps -q)\n\n```", "```py\n    #Compose.yml \n    version: '2' \n    services: \n    web: \n     build: . \n      ports: \n      - \"5000:5000\" \n      volumes: \n       - /app/ \n     flask: \n      image: \"cloud-native-app:latest\" \n\n```", "```py\n$ docker tag cloud-native-app:latest manishsethis/docker-packtpub:cloud-native-app\n$ docker push manishsethis/docker-packtpub:cloud-native-app\n\n```"]