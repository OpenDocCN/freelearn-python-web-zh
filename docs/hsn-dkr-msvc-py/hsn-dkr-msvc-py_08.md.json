["```py\n$ # Install k3s\n$ curl -sfL https://get.k3s.io | sh -\n$ # Restart k3s in docker mode\n$ sudo systemctl edit --full k3s.service\n# Replace `ExecStart=/usr/local/bin/k3s` with `ExecStart=/usr/local/bin/k3s server --docker`\n$ sudo systemctl daemon-reload\n$ sudo systemctl restart k3s\n$ sudo systemctl enable k3s\n$ # Allow access outside of root to KUBECTL config\n$ sudo chmod 644 /etc/rancher/k3s/k3s.yaml\n$ # Add your user to the docker group, to be able to run docker commands\n$ # You may need to log out and log in again for the group to take effect\n$ sudo usermod -a -G docker $USER\n```", "```py\n$ kubectl get pods --all-namespaces\nNAMESPACE NAME                                         READY STATUS  RESTARTS AGE\ndocker    compose-89fb656cf-cw7bb                      1/1   Running 0        1m\ndocker    compose-api-64d7d9c945-p98r2                 1/1   Running 0        1m\nkube-system etcd-docker-for-desktop                    1/1   Running 0        260d\nkube-system kube-apiserver-docker-for-desktop          1/1   Running 0        2m\nkube-system kube-controller-manager-docker-for-desktop 1/1   Running 0        2m\nkube-system kube-dns-86f4d74b45-cgpsj                  3/3   Running 1        260d\nkube-system kube-proxy-rm82n                           1/1   Running 0        2m\nkube-system kube-scheduler-docker-for-desktop          1/1   Running 0        2m\nkube-system kubernetes-dashboard-7b9c7bc8c9-hzpkj      1/1   Running 1        260d\n```", "```py\n$ kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/master/deploy/static/mandatory.yaml\n$ kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/master/deploy/static/provider/cloud-generic.yaml\n```", "```py\n$ kubectl create namespace example\nnamespace/example created\n$ kubectl get namespaces\nNAME        STATUS AGE\ndefault     Active 260d\ndocker      Active 260d\nexample     Active 9s\nkube-public Active 260d\nkube-system Active 260d\n```", "```py\n---\napiVersion: v1\nkind: Pod\nmetadata:\n  name: nginx\n  namespace: example\nspec:\n  containers:\n    - name: nginx\n      image: library/nginx:latest\n```", "```py\n$ kubectl apply -f example_pod.yml\npod/nginx created\n$ kubectl get pods -n example\nNAME  READY STATUS            RESTARTS AGE\nnginx 0/1   ContainerCreating 0        2s\n$ kubectl get pods -n example\nNAME  READY STATUS  RESTARTS AGE\nnginx 1/1   Running 0        51s\n```", "```py\n$ kubectl exec -it nginx -n example /bin/bash\nroot@nginx:/# apt-get update\n...\nroot@nginx:/# apt-get install -y curl\n...\nroot@nginx:/# curl localhost\n<!DOCTYPE html>\n<html>\n<head>\n<title>Welcome to nginx!</title>\n...\n</head>\n<body>\n<h1>Welcome to nginx!</h1>\n<p>If you see this page, the nginx web server is successfully installed and\nworking. Further configuration is required.</p>\n\n<p>For online documentation and support please refer to\n<a href=\"http://nginx.org/\">nginx.org</a>.<br/>\nCommercial support is available at\n<a href=\"http://nginx.com/\">nginx.com</a>.</p>\n\n<p><em>Thank you for using nginx.</em></p>\n</body>\n</html>\n```", "```py\n$ kubectl edit pod nginx -n example\n```", "```py\n---\napiVersion: v1\nkind: Pod\nmetadata:\n  name: nginx\n  namespace: example\nspec:\n  containers:\n    - name: nginx\n      image: library/nginx:1.16\n```", "```py\n$ kubectl apply -f example_pod.yml\npod/nginx configured\n$ kubectl get pods -n example\nNAME  READY STATUS  RESTARTS AGE\nnginx 1/1   Running 1        36s\n```", "```py\n$ kubectl get pods -n example -o wide\nNAME  READY STATUS  RESTARTS AGE IP        NODE\nnginx 1/1   Running 1        30m 10.1.0.11 docker-for-desktop\n```", "```py\n$ kubectl get pods -n example -w\nNAME  READY STATUS  RESTARTS AGE\nnginx 1/1   Running 2        32m\nnginx 1/1   Running 3        32m\n```", "```py\n$ kubectl describe pod nginx -n example\nName: nginx\nNamespace: example\nNode: docker-for-desktop/192.168.65.3\nStart Time: Sun, 23 Jun 2019 20:56:23 +0100\nLabels: <none>\nAnnotations: ...\nStatus: Running\nIP: 10.1.0.11\n...\nEvents:\n Type Reason Age From Message\n ---- ------ ---- ---- -------\n Normal Scheduled 40m default-scheduler Successfully assigned nginx to docker-for-desktop\n ...\n Normal Created 4m43s (x5 over 40m) kubelet, docker-for-desktop Created container\n Normal Started 4m43s (x5 over 40m) kubelet, docker-for-desktop Started container\n```", "```py\n$ kubectl delete namespace example\nnamespace \"example\" deleted\n$ kubectl get pods -n example\nNo resources found.\n```", "```py\n$ kubectl logs <pod> -n <namespace> -c <container>\n```", "```py\n$ docker run <image>\n```", "```py\n$ kubectl exec -it <pod> -n <namespace> /bin/sh\n```"]