["```py\n{\n    \"dev\": {\n             ...\n             \"keep_warm\": true/false\n             ...\n     }\n}\n```", "```py\n{\n    \"dev\": {\n             ...\n             \"cors\": true/false\n             ...\n     }\n}\n```", "```py\nzappa_settings.json file:\n```", "```py\n{\n    \"dev\": {\n             ...\n             \"slim_handler\": true/false\n             ...\n     }\n}\n```", "```py\n$ sudo apt update\n$ sudo apt install python-argcomplete\n```", "```py\n$ pip install argcomplete\n```", "```py\n$ activate-global-python-argcomplete\n```", "```py\neval \"$(register-python-argcomplete zappa)\"\n```", "```py\n$ source ~/.bashrc\n```", "```py\n{\n    \"dev\": {\n        ...\n        \"exception_handler\": \"your_module.unhandled_exceptions\",\n    },\n    ...\n}\n```", "```py\nunhandled_exception method that we created in the Quote API application of \u00a0Chapter\u00a09,\u00a0*Asynchronous Task Execution on AWS Lambda.*\n```", "```py\nimport os\nimport boto3\n\ndef unhandled_exceptions(e, event, context):\n    client = boto3.client('sns', aws_access_key_id=os.environ['aws_access_key_id'],\n                            aws_secret_access_key=os.environ['aws_secret_access_key'],\n                            region_name='us-east-1')\n    topic = client.create_topic(Name=\"UnhandledException\")\n    client.publish(Message={'exception': e, 'event': event}, TopicArn=topic['TopicArn'])\n    return True # Prevent invocation retry\n```"]