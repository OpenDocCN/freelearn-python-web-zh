["```py\n$ pipenv --python python3.6\n```", "```py\n[[source]]\n\nurl = \"https://pypi.python.org/simple\"\nverify_ssl = true\nname = \"pypi\"\n\n[dev-packages]\n\n[packages]\n\n[requires]\n\npython_version = \"3.6\"\n```", "```py\nPipfile:\n```", "```py\n[[source]]\n\nurl = \"https://pypi.python.org/simple\"\nverify_ssl = true\nname = \"pypi\"\n\n[dev-packages]\n\npylint = \"*\"\n\n[packages]\n\nfalcon = \"*\"\nzappa = \"*\"\ngunicorn = \"*\"\npeewee = \"*\"\nrequests = \"*\"\n\n[requires]\n\npython_version = \"3.6\"\n```", "```py\n# sample.py\n\nimport falcon\n\nclass QuoteResource:\n    def on_get(self, req, resp):\n        \"\"\"Handles GET requests\"\"\"\n        quote = {\n            'quote': (\n                \"I've always been more interested in \"\n                \"the future than in the past.\"\n            ),\n            'author': 'Grace Hopper'\n        }\n\n        resp.media = quote\n\napi = falcon.API()\napi.add_route('/quote', QuoteResource())\n```", "```py\n$ gunicorn sample:api\n```", "```py\nfrom peewee import *\nimport datetime\n\ndb = SqliteDatabase('my_database.db')\n\nclass BaseModel(Model):\n    class Meta:\n        database = db\n\nclass User(BaseModel):\n    username = CharField(unique=True)\n\nclass Tweet(BaseModel):\n    user = ForeignKeyField(User, backref='tweets')\n    message = TextField()\n    created_date = DateTimeField(default=datetime.datetime.now)\n    is_published = BooleanField(default=True)\n```", "```py\nmodels.py.\n```", "```py\nimport os\nimport datetime\nfrom shutil import copyfile\nfrom peewee import *\n\n# Copy our working DB to /tmp..\ndb_name = 'quote_database.db'\nsrc = os.path.abspath(db_name)\ndst = \"/tmp/{}\".format(db_name)\ncopyfile(src, dst)\n\ndb = SqliteDatabase(dst)\n\nclass QuoteModel(Model):\n\n    class Meta:\n        database = db\n\n    id = IntegerField(primary_key= True)\n    quote = TextField()\n    author = CharField()\n    category = CharField()\n    created_at = DateTimeField(default= datetime.date.today())\n\ndb.connect()\ndb.create_tables([QuoteModel])\n```", "```py\nmashape.py file.\n```", "```py\nimport os\nimport requests\n\ndef fetch_quote():\n    response = requests.get(\n        os.environ.get('Mashape_API_Endpoint'),\n        headers={\n            'X-Mashape-Key': os.environ.get('X_Mashape_Key'),\n            'Accept': 'application/json'\n        }\n    )\n    if response.status_code == 200:\n        return response.json()[0]\n    return response.json()\n```", "```py\nresources.py.\n```", "```py\nimport os\nimport datetime\nimport requests\nimport falcon\n\nfrom models import QuoteModel\nfrom mashape import fetch_quote\n\nclass QuoteResource:\n    def on_get(self, req, resp):\n        \"\"\"Handles GET requests\"\"\"\n        if req.get_param('type') in ['daily', None]:\n            data = QuoteModel.select().where(QuoteModel.created_at == datetime.date.today())\n            if data.exists():\n                data = data.get()\n                resp.media = {'quote': data.quote, 'author': data.author, 'category': data.category}\n            else:\n                quote = fetch_quote()\n                QuoteModel.create(**quote)\n                resp.media = quote\n        elif req.get_param('type') == 'random':\n            resp.media = fetch_quote()\n        else:\n            raise falcon.HTTPError(falcon.HTTP_400,'Invalid Quote type','Supported types are \\'daily\\' or \\'random\\'.')\n\napi = falcon.API()\napi.add_route('/quote', QuoteResource())\n```", "```py\n$ gunicorn resources:api\n[2018-05-18 15:40:57 +0530] [31655] [INFO] Starting gunicorn 19.8.1\n[2018-05-18 15:40:57 +0530] [31655] [INFO] Listening at: http://127.0.0.1:8000 (31655)\n[2018-05-18 15:40:57 +0530] [31655] [INFO] Using worker: sync\n[2018-05-18 15:40:57 +0530] [31662] [INFO] Booting worker with pid: 31662\n```", "```py\n$ curl http://localhost:8000/quote?type=daily\n{\"quote\": \"I'll get you, my pretty, and your little dog, too!\", \"author\": \"The Wizard of Oz\", \"category\": \"Movies\"}\n```", "```py\n$ curl http://localhost:8000/quote?type=random\n{\"quote\": \"The only way to get rid of a temptation is to yield to it.\", \"author\": \"Oscar Wilde\", \"category\": \"Famous\"}\n```", "```py\nsettings.json file.\n```", "```py\n{\n    \"dev\": {\n        \"app_function\": \"resources.api\",\n        \"aws_region\": \"ap-south-1\",\n        \"profile_name\": \"default\",\n        \"project_name\": \"chapter-7\",\n        \"runtime\": \"python3.6\",\n        \"s3_bucket\": \"zappa-0edixmwpd\",\n        \"remote_env\": \"s3://book-configs/chapter-7-config.json\"\n    }\n}\n```", "```py\n$ zappa update dev\nImportant! A new version of Zappa is available!\nUpgrade with: pip install zappa --upgrade\nVisit the project page on GitHub to see the latest changes: https://github.com/Miserlou/Zappa\nCalling update for stage dev..\nDownloading and installing dependencies..\n - sqlite==python36: Using precompiled lambda package\nPackaging project as zip.\nUploading chapter-7-dev-1529584381.zip (5.9MiB)..\n100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 6.17M/6.17M [00:03<00:00, 1.08MB/s]\nUpdating Lambda function code..\nUpdating Lambda function configuration..\nUploading chapter-7-dev-template-1529584474.json (1.6KiB)..\n100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 1.62K/1.62K [00:00<00:00, 9.09KB/s]\nDeploying API Gateway..\nScheduling..\nUnscheduled chapter-7-dev-schedulers.set_quote_of_the_day.\nUnscheduled chapter-7-dev-zappa-keep-warm-handler.keep_warm_callback.\nScheduled chapter-7-dev-schedulers.set_quote_of_the_day with expression cron(0 12 * * ? *)!\nScheduled chapter-7-dev-zappa-keep-warm-handler.keep_warm_callback with expression rate(4 minutes)!\nYour updated Zappa deployment is live!: https://0uqnn5ql3a.execute-api.ap-south-1.amazonaws.com/dev\n```", "```py\n$ curl https://0uqnn5ql3a.execute-api.ap-south-1.amazonaws.com/dev/quote?type=daily\n{\"quote\": \"You've got to ask yourself one question: 'Do I feel lucky?' Well, do ya, punk?\", \"author\": \"Dirty Harry\", \"category\": \"Movies\"}\n```", "```py\n$ curl -s -w 'Total time taken: %{time_total}\\n' https://0uqnn5ql3a.execute-api.ap-south-1.amazonaws.com/dev/quote?type=random\n{\"quote\": \"A friendship founded on business is better than a business founded on friendship.\", \"author\": \"John D. Rockefeller\", \"category\": \"Famous\"}\nTotal time taken: 1.369\n```", "```py\n{\n    \"dev\": {\n        \"app_function\": \"resources.api\",\n        \"aws_region\": \"ap-south-1\",\n        \"profile_name\": \"default\",\n        \"project_name\": \"chapter-7\",\n        \"runtime\": \"python3.6\",\n        \"s3_bucket\": \"zappa-0edixmwpd\",\n        \"remote_env\": \"s3://book-configs/chapter-7-config.json\",\n        \"cache_cluster_enabled\": false,\n \"cache_cluster_size\": 0.5,\n \"cache_cluster_ttl\": 300,\n \"cache_cluster_encrypted\": false,\n    }\n}\n```", "```py\n{\n    \"production\": {\n       ...\n       \"events\": [{\n            \"function\": \"your_module.process_upload_function\",\n            \"event_source\": {\n                  \"arn\": \"arn:aws:s3:::my-bucket\",\n                  \"events\": [\n                    \"s3:ObjectCreated:*\" \n                  ]\n               }\n            }],\n       ...\n    }\n}\n```", "```py\n$ zappa schedule production \n```", "```py\n{\n    \"dev\": {\n        \"app_function\": \"resources.api\",\n        \"aws_region\": \"ap-south-1\",\n        \"profile_name\": \"default\",\n        \"project_name\": \"chapter-7\",\n        \"runtime\": \"python3.6\",\n        \"s3_bucket\": \"zappa-0edixmwpd\",\n        \"remote_env\": \"s3://book-configs/chapter-7-config.json\",\n        \"cache_cluster_enabled\": false,\n        \"cache_cluster_size\": 0.5,\n        \"cache_cluster_ttl\": 300,\n        \"cache_cluster_encrypted\": false,\n        \"events\": [{\n \"function\": \"schedulers.set_quote_of_the_day\",\n \"expression\": \"cron(0 12 * * ? *)\"\n }]\n    }\n}\nschedulers module.\n```", "```py\nfrom models import QuoteModel\nfrom mashape import fetch_quote\n\ndef set_quote_of_the_day(event, context):\n    QuoteModel.create(**fetch_quote())\nset_quote_of_the_day will be executed by the scheduled event and will perform the operation to fetch the quote and store it in the database.\n```", "```py\n$ zappa schedule dev\nCalling schedule for stage dev..\nScheduling..\nUnscheduled chapter-7-dev-zappa-keep-warm-handler.keep_warm_callback.\nUnscheduled chapter-7-dev-schedulers.set_quote_of_the_day.\nScheduled chapter-7-dev-schedulers.set_quote_of_the_day with expression cron(0 12 * * ? *)!\nScheduled chapter-7-dev-zappa-keep-warm-handler.keep_warm_callback with expression rate(4 minutes)!\n```"]