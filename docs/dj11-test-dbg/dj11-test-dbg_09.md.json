["```py\n{% extends \"survey/base.html\" %} \n{% block content %} \n<h1>Survey results for {{ survey.title }}</h1> \n{% endblock content %} \n```", "```py\nclass Question(models.Model): \n    question = models.CharField(max_length=200) \n    survey = models.ForeignKey(Survey) \n\n    def winning_answers(self): \n        max_votes = self.answer_set.aggregate(Max('votes')).values()[0]\n        if max_votes and max_votes > 0: \n            rv = self.answer_set.filter(votes=max_votes) \n        else: \n            rv = self.answer_set.none() \n        return rv \n```", "```py\n{% extends \"survey/base.html\" %} \n{% block content %} \n<h1>Survey results for {{ survey.title }}</h1> \n{% for q in survey.question_set.all %} \n{% with q.winning_answers as winners %} \n{% if winners %} \n<h2>{{ q.question }}</h2> \n<p>Winner{{ winners|length|pluralize }}:</p> \n<ul> \n{% for answer in winners %} \n<li>{{ answer.answer }}</li> \n{% endfor %} \n</ul> \n<p><img src=\"img/{{ q.get_piechart_url }}\" alt=\"Pie Chart\"/></p> \n{% endif %} \n{% endwith %} \n{% endfor %} \n{% endblock content %} \n```", "```py\n    def get_piechart_url(self): \n        from pygooglechart import PieChart3D \n        answer_set = self.answer_set.all() \n        chart = PieChart3D(500, 230) \n        chart.set_data([a.votes for a in answer_set]) \n        chart.set_pie_labels([a.answer for a in answer_set]) \n        return chart.get_url() \n```", "```py\n<p><img src=\"img/\" alt=\"Pie Chart\"/></p>\n```", "```py\n    def get_piechart_url(self): \n        from pygooglechart import PieChart3D \n        import logging \n        logging.debug('get_piechart_url called for pk=%d', self.pk) \n        answer_set = self.answer_set.all() \n        chart = PieChart3D(500, 230) \n        chart.set_data([a.votes for a in answer_set]) \n        chart.set_pie_labels([a.answer for a in answer_set]) \n        logging.debug('get_piechart_url returning: %s', chart.get_url()) \n        return chart.get_url() \n```", "```py\nDEBUG:root:survey_detail called with method GET, kwargs {'pk': u'1'} \nDEBUG:root:display_completed_survey called \nDEBUG:root:get_piechart_url called for pk=1 \nDEBUG:root:get_piechart_url called for pk=2 \nDEBUG:root:display_completed_survey returned type <class 'django.http.HttpResponse'> \nDEBUG:root:survey_detail returned type <class 'django.http.HttpResponse'> \n[14/Nov/2009 11:29:08] \"GET /1/ HTTP/1.1\" 200 2573 \n\n```", "```py\n    def get_piechart_url(self): \n        from pygooglechart import PieChart3D \n        import logging \n        import pdb; pdb.set_trace() \n        logging.debug('get_piechart_url called for pk=%d', self.pk) \n        answer_set = self.answer_set.all() \n        chart = PieChart3D(500, 230) \n        chart.set_data([a.votes for a in answer_set]) \n        chart.set_pie_labels([a.answer for a in answer_set]) \n        logging.debug('get_piechart_url returning: %s', chart.get_url()) \n        return chart.get_url() \n```", "```py\nDEBUG:root:survey_detail called with method GET, kwargs {'pk': u'1'} \nDEBUG:root:display_completed_survey called \n> /dj_projects/marketr/survey/models.py(71)get_piechart_url() \n-> logging.debug('get_piechart_url called for pk=%d', self.pk) \n(Pdb) \n\n```", "```py\n(Pdb\n) l\n 66\n 67         def get_piechart_url(self):\n 68             from pygooglechart import PieChart3D\n 69             import logging\n 70             import pdb; pdb.set_trace()\n 71  ->         logging.debug('get_piechart_url called for pk=%d', self.pk)\n 72             answer_set = self.answer_set.all()\n 73             chart = PieChart3D(500, 230)\n 74             chart.set_data([a.votes for a in answer_set])\n 75             chart.set_pie_labels([a.answer for a in answer_set])\n 76             logging.debug('get_piechart_url returning: %s', \n(Pdb)\n 77                chart.get_url())\n 78             return chart.get_url()\n 79\n 80     class Answer(models.Model):\n 81         answer = models.CharField(max_length=200)\n 82         question = models.ForeignKey(Question)\n 83         votes = models.IntegerField(default=0)\n 84\n 85         def __unicode__(self):\n 86             return self.answer\n 87\n(Pdb)\n\n```", "```py\n(Pdb) l 1,5\n 1     # -*- encoding: utf-8 -*-\n 2\n 3     import datetime\n 4     from django.db import models\n 5     from django.db.models import Max\n(Pdb)\n\n```", "```py\n(Pdb) w \n /usr/lib/python2.5/site-packages/django/core/management/commands/runserver.py(60)inner_run() \n-> run(addr, int(port), handler) \n /usr/lib/python2.5/site-packages/django/core/servers/basehttp.py(698)run() \n-> httpd.serve_forever() \n /usr/lib/python2.5/SocketServer.py(201)serve_forever() \n-> self.handle_request() \n /usr/lib/python2.5/SocketServer.py(222)handle_request() \n-> self.process_request(request, client_address) \n /usr/lib/python2.5/SocketServer.py(241)process_request() \n-> self.finish_request(request, client_address) \n /usr/lib/python2.5/SocketServer.py(254)finish_request() \n-> self.RequestHandlerClass(request, client_address, self) \n /usr/lib/python2.5/site-packages/django/core/servers/basehttp.py(560)__init__() \n-> BaseHTTPRequestHandler.__init__(self, *args, **kwargs) \n /usr/lib/python2.5/SocketServer.py(522)__init__() \n-> self.handle() \n /usr/lib/python2.5/site-packages/django/core/servers/basehttp.py(605)handle() \n-> handler.run(self.server.get_app()) \n /usr/lib/python2.5/site-packages/django/core/servers/basehttp.py(279)run() \n-> self.result = application(self.environ, self.start_response) \n /usr/lib/python2.5/site-packages/django/core/servers/basehttp.py(651)__call__() \n-> return self.application(environ, start_response) \n /usr/lib/python2.5/site-packages/django/core/handlers/wsgi.py(241)__call__() \n-> response = self.get_response(request) \n /usr/lib/python2.5/site-packages/django/core/handlers/base.py(92)get_response() \n-> response = callback(request, *callback_args, **callback_kwargs) \n\n```", "```py\n /dj_projects/marketr/gen_utils/logutils.py(21)__call__() \n-> rv = f(*args, **kwargs) \n /dj_projects/marketr/survey/views.py(30)survey_detail() \n-> return display_completed_survey(request, survey) \n /dj_projects/marketr/gen_utils/logutils.py(11)__call__() \n-> rv = f(*args, **kwargs) \n /dj_projects/marketr/survey/views.py(40)display_completed_survey() \n-> RequestContext(request)) \n\n```", "```py\n /usr/lib/python2.5/site-packages/django/shortcuts/__init__.py(20)render_to_response() \n-> return HttpResponse(loader.render_to_string(*args, **kwargs), **httpresponse_kwargs) \n /usr/lib/python2.5/site-packages/django/template/loader.py(108)render_to_string() \n-> return t.render(context_instance) \n /usr/lib/python2.5/site-packages/django/template/__init__.py(178)render() \n-> return self.nodelist.render(context) \n /usr/lib/python2.5/site-packages/django/template/__init__.py(779)render() \n-> bits.append(self.render_node(node, context)) \n /usr/lib/python2.5/site-packages/django/template/debug.py(71)render_node() \n-> result = node.render(context) \n /usr/lib/python2.5/site-packages/django/template/loader_tags.py(97)render() \n-> return compiled_parent.render(context) \n\n```", "```py\n /usr/lib/python2.5/site-packages/django/template/debug.py(87)render() \n-> output = force_unicode(self.filter_expression.resolve(context)) \n /usr/lib/python2.5/site-packages/django/template/__init__.py(546)resolve() \n-> obj = self.var.resolve(context) \n /usr/lib/python2.5/site-packages/django/template/__init__.py(687)resolve() \n-> value = self._resolve_lookup(context) \n /usr/lib/python2.5/site-packages/django/template/__init__.py(722)_resolve_lookup() \n-> current = current() \n> /dj_projects/marketr/survey/models.py(71)get_piechart_url() \n-> logging.debug('get_piechart_url called for pk=%d', self.pk) \n(Pdb) \n\n```", "```py\n(Pdb) a \nself = Television Trends (opens 2009-09-10, closes 2009-11-10): What is your favorite type of TV show? \n(Pdb) \n\n```", "```py\n(Pdb) whatis self \n<class 'survey.models.Question'> \n(Pdb) \n\n```", "```py\n(Pdb) type(self) \n<class 'survey.models.Question'> \n(Pdb) \n\n```", "```py\n(Pdb) self.pk \n1L \n(Pdb) \n\n```", "```py\n(Pdb) p self \n<Question: Television Trends (opens 2009-09-10, closes 2009-11-10): What is your favorite type of TV show?> \n(Pdb)\n\n```", "```py\n(Pdb) p locals() \n{'PieChart3D': <class 'pygooglechart.PieChart3D'>, 'self': <Question: Television Trends (opens 2009-09-10, closes 2009-11-10): What is your favorite type of TV show?>, 'logging': <module 'logging' from '/usr/lib/python2.5/logging/__init__.pyc'>, 'pdb': <module 'pdb' from '/usr/lib/python2.5/pdb.pyc'>} \n\n```", "```py\n(Pdb) pp locals() \n{'PieChart3D': <class 'pygooglechart.PieChart3D'>, \n 'logging': <module 'logging' from '/usr/lib/python2.5/logging/__init__.pyc'>, \n 'pdb': <module 'pdb' from '/usr/lib/python2.5/pdb.pyc'>, \n 'self': <Question: Television Trends (opens 2009-09-10, closes 2009-11-10): What is your favorite type of TV show?>} \n(Pdb) \n\n```", "```py\n(Pdb) n \nDEBUG:root:get_piechart_url called for pk=1 \n> /dj_projects/marketr/survey/models.py(72)get_piechart_url() \n-> answer_set = self.answer_set.all() \n(Pdb) \n\n```", "```py\n(Pdb) \n> /dj_projects/marketr/survey/models.py(73)get_piechart_url() \n-> chart = PieChart3D(500, 230) \n(Pdb) p answer_set \n[<Answer: Comedy>, <Answer: Drama>, <Answer: Reality>] \n(Pdb) \n\n```", "```py\n(Pdb) n\n> /dj_projects/marketr/survey/models.py(74)get_piechart_url() \n-> chart.set_data([a.votes for a in answer_set]) \n(Pdb) \nAttributeError: \"'PieChart3D' object has no attribute 'set_data'\" \n> /dj_projects/marketr/survey/models.py(74)get_piechart_url() \n-> chart.set_data([a.votes for a in answer_set]) \n(Pdb) \n\n```", "```py\n(Pdb) \n--Return-- \n> /dj_projects/marketr/survey/models.py(74)get_piechart_url()->None \n-> chart.set_data([a.votes for a in answer_set]) \n\n```", "```py\n(Pdb) \nAttributeError: \"'PieChart3D' object has no attribute 'set_data'\" \n> /usr/lib/python2.5/site-packages/django/template/__init__.py(722)_resolve_lookup() \n-> current = current() \n(Pdb) \n> /usr/lib/python2.5/site-packages/django/template/__init__.py(723)_resolve_lookup() \n-> except TypeError: # arguments *were* required \n(Pdb) \n> /usr/lib/python2.5/site-packages/django/template/__init__.py(727)_resolve_lookup() \n-> except Exception, e: \n\n```", "```py\n(Pdb) l\n722                          current = current()\n723                      except TypeError: # arguments *were* required\n724                          # GOTCHA: This will also catch any TypeError\n725                          # raised in the function itself.\n726 \ncurrent = settings.TEMPLATE_STRING_IF_INVALID #\n invalid method call\n727  ->                  except Exception, e:\n728                          if getattr(e, 'silent_variable_failure', False\n):\n729 \ncurrent = settings.TEMPLATE_STRING_IF_INVALID\n730                          else:\n731                             raise\n732                      except (TypeError, AttributeError):\n\n```", "```py\n(Pdb) n\n> /usr/lib/python2.5/site-packages/django/template/__init__.py(728)_resolve_lookup() \n-> if getattr(e, 'silent_variable_failure', False): \n(Pdb) \n> /usr/lib/python2.5/site-packages/django/template/__init__.py(731)_resolve_lookup() \n-> raise \n\n```", "```py\n(Pdb) n\n> /usr/lib/python2.5/site-packages/django/template/__init__.py(732)_resolve_lookup() \n-> except (TypeError, AttributeError): \n\n```", "```py\n(Pdb) l\n727                                 except Exception, e:\n728                                     if getattr(e, 'silent_variable_failure', False):\n729                                         current = settings.TEMPLATE_STRING_IF_INVALID\n730                                     else:\n731                                         raise\n732  ->                 except (TypeError, AttributeError):\n733                         try: # list-index lookup\n734                             current = current[int(bit)]\n735                         except (IndexError, # list index out of range\n736                                 ValueError, # invalid literal for int()\n737                                 KeyError,   # current is a dict without `int(bit)` key\n(Pdb)\n738                                 TypeError,  # unsubscriptable object\n739                                 ):\n740                             raise VariableDoesNotExist(\"Failed lookup for key [%s] in %r\", (bit, current)) # missing attribute\n741                     except Exception, e:\n742                         if getattr(e, 'silent_variable_failure', False):\n743                             current = settings.TEMPLATE_STRING_IF_INVALID\n744                         else:\n745                             raise\n746\n747             return current\n748\n(Pdb)\n\n```", "```py\n(Pdb) n\n> /usr/lib/python2.5/site-packages/django/template/__init__.py(733)_resolve_lookup() \n-> try: # list-index lookup \n(Pdb) \n> /usr/lib/python2.5/site-packages/django/template/__init__.py(734)_resolve_lookup() \n-> current = current[int(bit)] \n(Pdb) \nValueError: \"invalid literal for int() with base 10: 'get_piechart_url'\" \n> /usr/lib/python2.5/site-packages/django/template/__init__.py(734)_resolve_lookup() \n-> current = current[int(bit)] \n\n```", "```py\n(Pdb) c \n> /dj_projects/marketr/survey/models.py(71)get_piechart_url() \n-> logging.debug('get_piechart_url called for pk=%d', self.pk) \n(Pdb)\n\n```", "```py\n(Pdb) self \n<Question: Television Trends (opens 2009-09-10, closes 2009-11-10): How many new shows will you try this Fall?> \n(Pdb) \n\n```", "```py\n(Pdb) n \nDEBUG:root:get_piechart_url called for pk=2 \n> /dj_projects/marketr/survey/models.py(72)get_piechart_url() \n-> answer_set = self.answer_set.all() \n(Pdb) n \n> /dj_projects/marketr/survey/models.py(73)get_piechart_url() \n-> chart = PieChart3D(700, 230) \n(Pdb) n \n> /dj_projects/marketr/survey/models.py(74)get_piechart_url() \n-> chart.set_data([a.votes for a in answer_set]) \n(Pdb) \n\n```", "```py\n(Pdb) chart.add_data([a.votes for a in answer_set]) \n0 \n(Pdb) \n\n```", "```py\n(Pdb) j 75 \n> /dj_projects/marketr/survey/models.py(75)get_piechart_url() \n-> chart.set_pie_labels([a.answer for a in answer_set]) \n(Pdb)\n\n```", "```py\n(Pdb) n \n> /dj_projects/marketr/survey/models.py(75)get_piechart_url() \n-> chart.set_pie_labels([a.answer for a in answer_set]) \n(Pdb) n \n> /dj_projects/marketr/survey/models.py(75)get_piechart_url() \n-> chart.set_pie_labels([a.answer for a in answer_set]) \n(Pdb)\n\n```", "```py\n(Pdb) b 76 \nBreakpoint 1 at /dj_projects/marketr/survey/models.py:76 \n(Pdb) c \n> /dj_projects/marketr/survey/models.py(76)get_piechart_url() \n-> logging.debug('get_piechart_url returning: %s', chart.get_url()) \n(Pdb) \n\n```", "```py\n(Pdb) b\nNum Type         Disp Enb   Where\n1   breakpoint   keep yes   at /dj_projects/marketr/survey/models.py:76\n breakpoint already hit 1 time\n(Pdb)\n\n```", "```py\n(Pdb) cl 1 \nDeleted breakpoint 1 \n(Pdb) \n\n```", "```py\n(Pdb) c \nDEBUG:root:get_piechart_url returning: http://chart.apis.google.com/chart?cht=p3&chs=700x230&chd=s:9UU&chl=Hardly%20any%3A%20I%20already%20watch%20too%20much%20TV%21|Maybe%203-5|I%27m%20a%20TV%20fiend%2C%20I%27ll%20try%20them%20all%20at%20least%20once%21 \nDEBUG:root:display_completed_survey returned type <class 'django.http.HttpResponse'> \nDEBUG:root:survey_detail returned type <class 'django.http.HttpResponse'> \n[14/Nov/2009 18:03:38] \"GET /1/ HTTP/1.1\" 200 2989 \n\n```", "```py\n    def get_piechart_url(self): \n        import pdb; pdb.set_trace() \n        answer_set = self.answer_set.all() \n        chart = PieChart3D(500, 230) \n        chart.add_data([a.votes for a in answer_set]) \n        chart.set_legend([a.answer for a in answer_set]) \n        return chart.get_url() \n```", "```py\nDEBUG:root:survey_detail called with method GET, kwargs {'pk': u'1'} \nDEBUG:root:display_completed_survey called \n> /dj_projects/marketr/survey/models.py(71)get_piechart_url() \n-> answer_set = self.answer_set.all() \n(Pdb) \n\n```", "```py\n(Pdb) s \n--Call-- \n> /usr/lib/python2.5/site-packages/django/db/models/fields/related.py(319)__get__() \n-> def __get__(self, instance, instance_type=None): \n(Pdb) \n> /usr/lib/python2.5/site-packages/django/db/models/fields/related.py(320)__get__() \n-> if instance is None: \n(Pdb) \n> /usr/lib/python2.5/site-packages/django/db/models/fields/related.py(323)__get__() \n-> return self.create_manager(instance, \n(Pdb) \n> /usr/lib/python2.5/site-packages/django/db/models/fields/related.py(324)__get__() \n-> self.related.model._default_manager.__class__) \n(Pdb) \n--Call-- \n> /usr/lib/python2.5/site-packages/django/db/models/fields/related.py(346)create_manager() \n-> def create_manager(self, instance, superclass): \n(Pdb) \n> /usr/lib/python2.5/site-packages/django/db/models/fields/related.py(350)create_manager() \n-> rel_field = self.related.field \n(Pdb) \n\n```", "```py\n(Pdb) u \n> /usr/lib/python2.5/site-packages/django/db/models/fields/related.py(324)__get__() \n-> self.related.model._default_manager.__class__) \n(Pdb) u \n> /dj_projects/marketr/survey/models.py(71)get_piechart_url() \n-> answer_set = self.answer_set.all() \n(Pdb) u \n> /usr/lib/python2.5/site-packages/django/template/__init__.py(722)_resolve_lookup() \n-> current = current() \n(Pdb) \n\n```", "```py\n\n(Pdb) whatis current \nFunction get_piechart_url \n(Pdb) \n\n```", "```py\n(Pdb) l\n717                         if callable(current):\n718 \nif getattr(current, 'alters_data', False):\n719                                 current = settings.TEMPLATE_STRING_IF_INVALID\n720                             else:\n721                                 try: # method call (assuming no args required)\n722  ->                                 current = current()\n723                                 except TypeError: # arguments *were* required\n724                                     # GOTCHA: This will also catch any TypeError\n725                                     # raised in the function itself.\n726                                     current = settings.TEMPLATE_STRING_IF_INVALID # invalid method call\n727                                 except Exception, e:\n(Pdb)\n\n```", "```py\n\n /usr/lib/python2.5/site-packages/django/template/__init__.py(687)resolve() \n-> value = self._resolve_lookup(context) \n> /usr/lib/python2.5/site-packages/django/template/__init__.py(722)_resolve_lookup() \n-> current = current() \n /dj_projects/marketr/survey/models.py(71)get_piechart_url() \n-> answer_set = self.answer_set.all() \n /usr/lib/python2.5/site-packages/django/db/models/fields/related.py(324)__get__() \n-> self.related.model._default_manager.__class__) \n /usr/lib/python2.5/site-packages/django/db/models/fields/related.py(350)create_manager() \n-> rel_field = self.related.field \n(Pdb) \n\n```", "```py\n\n(Pdb) d \n> /dj_projects/marketr/survey/models.py(71)get_piechart_url() \n-> answer_set = self.answer_set.all() \n(Pdb) \n\n```", "```py\n(Pdb) n \n> /dj_projects/marketr/survey/models.py(72)get_piechart_url() \n-> chart = PieChart3D(500, 230) \n(Pdb) \n\n```", "```py\n\n(Pdb) s \n--Call-- \n> /var/lib/python-support/python2.5/pygooglechart.py(820)__init__() \n-> def __init__(self, *args, **kwargs): \n(Pdb) \n> /var/lib/python-support/python2.5/pygooglechart.py(821)__init__() \n-> assert(type(self) != PieChart)  # This is an abstract class \n(Pdb) \n> /var/lib/python-support/python2.5/pygooglechart.py(822)__init__() \n-> Chart.__init__(self, *args, **kwargs) \n(Pdb) \n\n```", "```py\n(Pdb) r \n--Return-- \n> /var/lib/python-support/python2.5/pygooglechart.py(823)__init__()->None \n-> self.pie_labels = [] \n(Pdb) \n\n```", "```py\n(Pdb) s \n> /dj_projects/marketr/survey/models.py(73)get_piechart_url() \n-> chart.add_data([a.votes for a in answer_set]) \n(Pdb) \n\n```", "```py\n(Pdb) r \n--Return-- \n> /dj_projects/marketr/survey/models.py(75)get_piechart_url()->'http://chart...Drama|Reality' \n-> return chart.get_url() \n(Pdb) \n\n```", "```py\n(Pdb) pp chart.get_url() \n'http://chart.apis.google.com/chart?cht=p3&chs=500x230&chd=s:99f&chdl=Comedy|Drama|Reality' \n(Pdb)\n\n```", "```py\n(Pdb) c \n> /dj_projects/marketr/survey/models.py(71)get_piechart_url() \n-> answer_set = self.answer_set.all() \n(Pdb) c \nDEBUG:root:display_completed_survey returned type <class 'django.http.HttpResponse'> \nDEBUG:root:survey_detail returned type <class 'django.http.HttpResponse'> \n[15/Nov/2009 11:48:07] \"GET /1/ HTTP/1.1\" 200 3280 \n\n```", "```py\nfrom django.http import HttpResponse \nfrom survey.models import Question \nfrom matplotlib.figure import Figure \nfrom matplotlib.backends.backend_agg import FigureCanvasAgg as \\FigureCanvas \n\n@log_view \ndef answer_piechart(request, pk): \n    q = get_object_or_404(Question, pk=pk) \n    answer_set = q.answer_set.all() \n    x = [a.votes for a in answer_set] \n    labels = [a.answer for a in answer_set] \n\n    fig = Figure() \n    axes = fig.add_subplot(1, 1, 1) \n    patches, texts, autotexts = axes.pie(x, autopct=\"%.0f%%\") \n    legend = fig.legend(patches, labels, 'lower left') \n\n    canvas = FigureCanvas(fig) \n    response = HttpResponse(content_type='image/png') \n    canvas.print_png(response) \n    return response \n```", "```py\nurlpatterns = patterns('survey.views', \n    url(r'^$', 'home', name='survey_home'), \n    url(r'^(?P<pk>\\d+)/$', 'survey_detail', name='survey_detail'), \n    url(r'^thanks/(?P<pk>\\d+)/$', 'survey_thanks', name='survey_thanks'),\n    url(r'^piechart/(?P<pk>\\d+)\\.png/$', 'answer_piechart', name='survey_answer_piechart'), \n) \n```", "```py\n<p><img src=\"img/{% url survey_answer_piechart q.pk %}\" alt=\"Pie Chart\"/></p> \n```", "```py\nMEDIA_ROOT = '/dj_projects/marketr/site_media/'\n```", "```py\nMEDIA_URL = '/site_media/' \n```", "```py\nfrom django.conf.urls.defaults import * \n\n# Uncomment the next two lines to enable the admin: \nfrom django.contrib import admin \nadmin.autodiscover() \n\nfrom django.conf import settings \n\nurlpatterns = patterns('', \n    # Example: \n    # (r'^marketr/', include('marketr.foo.urls')), \n\n    # Uncomment the admin/doc line below and add # 'django.contrib.admindocs' \n    # to INSTALLED_APPS to enable admin documentation: \n    # (r'^admin/doc/', include('django.contrib.admindocs.urls')), \n\n    # Uncomment the next line to enable the admin: \n    (r'^admin/', include(admin.site.urls)), \n    (r'^site_media/(.*)$', 'django.views.static.serve', \n        {'document_root': settings.MEDIA_ROOT, 'show_indexes': True}), \n    (r'', include('survey.urls')), \n) \n```", "```py\n@log_call \ndef display_completed_survey(request, survey): \n    for q in survey.question_set.all(): \n        q.check_piechart() \n    return render_to_response('survey/completed_survey.html', {'survey': survey}, \n        RequestContext(request)) \n```", "```py\nfrom survey import pie_utils\nclass Question(models.Model): \n    [\u2026 other code unchanged ...]\n\n    @property \n    def piechart_path(self): \n        if self.pk and self.survey.closes < datetime.date.today():\n            return pie_utils.PIE_PATH + '%d.png' % self.pk \n        else: \n            raise AttributeError \n\n    def check_piechart(self): \n        pie_utils.make_pie_if_necessary(self.piechart_path, self.answer_set.all())\n```", "```py\n<p><img src=\"img/{{ MEDIA_URL }}{{ q.piechart_path }}\" alt=\"Pie Chart\"/></p> \n```", "```py\nimport os\nfrom django.conf import settings \nPIE_PATH = 'piecharts/' \nif not os.path.exists(settings.MEDIA_ROOT + PIE_PATH): \n    os.mkdir(settings.MEDIA_ROOT + PIE_PATH)    \n```", "```py\ndef make_pie_if_necessary(rel_path, answer_set): \n    fname = settings.MEDIA_ROOT + rel_path \n    if not os.path.exists(fname): \n        create_piechart(fname, answer_set) \n```", "```py\nfrom matplotlib.figure import Figure \nfrom matplotlib.backends.backend_agg import FigureCanvasAgg as \\FigureCanvas \n\ndef create_piechart(f, answer_set): \n    x = [a.votes for a in answer_set] \n    labels = [a.answer for a in answer_set] \n\n    fig = Figure() \n    axes = fig.add_subplot(1, 1, 1) \n    patches, texts, autotexts = axes.pie(x, autopct=\"%.0f%%\") \n    legend = fig.legend(patches, labels, 'lower left') \n\n    canvas = FigureCanvas(fig) \n    canvas.print_png(f) \n```", "```py\nimport errno\ndef make_pie_if_necessary(rel_path, answer_set): \n    fname = settings.MEDIA_ROOT + rel_path \n    try: \n        fd = os.open(fname, os.O_WRONLY | os.O_CREAT | os.O_EXCL) \n        try: \n            f = os.fdopen(fd, 'wb') \n            create_piechart(f, answer_set) \n        finally: \n            f.close() \n    except OSError, e: \n        if e.errno == errno.EEXIST: \n            pass \n        else: \n            raise \n```", "```py\nimport fcntl\ndef make_pie_if_necessary(rel_path, answer_set): \n    fname = settings.MEDIA_ROOT + rel_path \n    try: \n        fd = os.open(fname, os.O_WRONLY | os.O_CREAT | os.O_EXCL) \n        try: \n            f = os.fdopen(fd, 'wb') \n            fcntl.flock(f, fcntl.LOCK_EX) \n            create_piechart(f, answer_set) \n        finally: \n            fcntl.flock(f, fcntl.LOCK_UN) \n            f.close() \n    except OSError, e: \n        if e.errno == errno.EEXIST: \n            wait_for_data(fname) \n        else: \n            raise \n```", "```py\nimport time\ndef wait_for_data(fname): \n    try: \n        fd = os.open(fname, os.O_RDONLY) \n        empty = True \n        while empty: \n            fcntl.flock(fd, fcntl.LOCK_SH) \n            st = os.fstat(fd) \n            if st.st_size > 0: \n                empty = False \n            fcntl.flock(fd, fcntl.LOCK_UN) \n            if empty: \n                time.sleep(.5) \n    finally: \n        if fd: \n            os.close(fd) \n```", "```py\ndef make_pie_if_necessary(rel_path, answer_set): \n    fname = settings.MEDIA_ROOT + rel_path \n    try: \n        import pdb; pdb.set_trace()\n        fd = os.open(fname, os.O_WRONLY | os.O_CREAT | os.O_EXCL) \n```", "```py\nrm /dj_projects/marketr/site_media/piecharts/*\n\n```", "```py\n> /dj_projects/marketr/survey/pie_utils.py(13)make_pie_if_necessary() \n-> fd = os.open(fname, os.O_WRONLY | os.O_CREAT | os.O_EXCL) \n(Pdb) \n\n```", "```py\n(Pdb) n \n> /dj_projects/marketr/survey/pie_utils.py(14)make_pie_if_necessary() \n-> try: \n(Pdb) \n\n```", "```py\nkmt@lbox:/dj_projects/marketr$ python manage.py shell \nPython 2.5.2 (r252:60911, Oct  5 2008, 19:24:49) \n[GCC 4.3.2] on linux2 \nType \"help\", \"copyright\", \"credits\" or \"license\" for more information. \n(InteractiveConsole) \n>>> from survey.models import Question \n>>> q = Question.objects.get(pk=1) \n>>> q.check_piechart() \n> /dj_projects/marketr/survey/pie_utils.py(13)make_pie_if_necessary() \n-> fd = os.open(fname, os.O_WRONLY | os.O_CREAT | os.O_EXCL) \n(Pdb) \n\n```", "```py\n(Pdb) n \nOSError: (17, 'File exists', '/dj_projects/marketr/site_media/piecharts/1.png') \n> /dj_projects/marketr/survey/pie_utils.py(13)make_pie_if_necessary() \n-> fd = os.open(fname, os.O_WRONLY | os.O_CREAT | os.O_EXCL) \n(Pdb) n \n> /dj_projects/marketr/survey/pie_utils.py(21)make_pie_if_necessary() \n-> except OSError, e: \n(Pdb) n \n> /dj_projects/marketr/survey/pie_utils.py(22)make_pie_if_necessary() \n-> if e.errno == errno.EEXIST: \n(Pdb) n \n> /dj_projects/marketr/survey/pie_utils.py(23)make_pie_if_necessary() \n-> wait_for_data(fname) \n(Pdb) \n\n```", "```py\n(Pdb) s \n--Call-- \n> /dj_projects/marketr/survey/pie_utils.py(43)wait_for_data() \n-> def wait_for_data(fname): \n(Pdb) n \n> /dj_projects/marketr/survey/pie_utils.py(44)wait_for_data() \n-> try: \n(Pdb) n \n> /dj_projects/marketr/survey/pie_utils.py(45)wait_for_data() \n-> fd = os.open(fname, os.O_RDONLY) \n(Pdb) n \n> /dj_projects/marketr/survey/pie_utils.py(46)wait_for_data() \n-> empty = True \n(Pdb) \n\n```", "```py\n(Pdb) n \n> /dj_projects/marketr/survey/pie_utils.py(47)wait_for_data() \n-> while empty: \n(Pdb) n \n> /dj_projects/marketr/survey/pie_utils.py(48)wait_for_data() \n-> fcntl.flock(fd, fcntl.LOCK_SH) \n(Pdb) n \n> /dj_projects/marketr/survey/pie_utils.py(49)wait_for_data() \n-> st = os.fstat(fd) \n(Pdb) n \n> /dj_projects/marketr/survey/pie_utils.py(50)wait_for_data() \n-> if st.st_size > 0: \n(Pdb) n \n> /dj_projects/marketr/survey/pie_utils.py(52)wait_for_data() \n-> fcntl.flock(fd, fcntl.LOCK_UN) \n(Pdb) n \n> /dj_projects/marketr/survey/pie_utils.py(53)wait_for_data() \n-> if empty: \n(Pdb) n \n> /dj_projects/marketr/survey/pie_utils.py(54)wait_for_data() \n-> time.sleep(.5) \n(Pdb) n \n> /dj_projects/marketr/survey/pie_utils.py(47)wait_for_data() \n-> while empty: \n(Pdb) \n\n```", "```py\n> /dj_projects/marketr/survey/pie_utils.py(48)wait_for_data() \n-> fcntl.flock(fd, fcntl.LOCK_SH) \n(Pdb) n \n> /dj_projects/marketr/survey/pie_utils.py(49)wait_for_data() \n-> st = os.fstat(fd) \n(Pdb) \n\n```", "```py\n(Pdb) n \n> /dj_projects/marketr/survey/pie_utils.py(15)make_pie_if_necessary() \n-> f = os.fdopen(fd, 'wb') \n(Pdb) n \n> /dj_projects/marketr/survey/pie_utils.py(16)make_pie_if_necessary() \n-> fcntl.flock(f, fcntl.LOCK_EX) \n(Pdb) n \n\n```", "```py\n(Pdb) n \n> /dj_projects/marketr/survey/pie_utils.py(50)wait_for_data() \n-> if st.st_size > 0: \n(Pdb) n \n> /dj_projects/marketr/survey/pie_utils.py(52)wait_for_data() \n-> fcntl.flock(fd, fcntl.LOCK_UN) \n(Pdb) n \n> /dj_projects/marketr/survey/pie_utils.py(53)wait_for_data() \n-> if empty: \n(Pdb) \n\n```", "```py\n> /dj_projects/marketr/survey/pie_utils.py(17)make_pie_if_necessary() \n-> create_piechart(f, answer_set) \n(Pdb) \n\n```", "```py\n(Pdb) n \n> /dj_projects/marketr/survey/pie_utils.py(54)wait_for_data() \n-> time.sleep(.5) \n(Pdb) n \n> /dj_projects/marketr/survey/pie_utils.py(47)wait_for_data() \n-> while empty: \n(Pdb) n \n> /dj_projects/marketr/survey/pie_utils.py(48)wait_for_data() \n-> fcntl.flock(fd, fcntl.LOCK_SH) \n(Pdb) n \n\n```", "```py\n(Pdb) n \n> /dj_projects/marketr/survey/pie_utils.py(19)make_pie_if_necessary() \n-> fcntl.flock(f, fcntl.LOCK_UN) \n(Pdb) n \n> /dj_projects/marketr/survey/pie_utils.py(20)make_pie_if_necessary() \n-> f.close() \n(Pdb) \n\n```", "```py\n> /dj_projects/marketr/survey/pie_utils.py(49)wait_for_data() \n-> st = os.fstat(fd) \n(Pdb) \n\n```", "```py\n(Pdb) n \n> /dj_projects/marketr/survey/pie_utils.py(50)wait_for_data() \n-> if st.st_size > 0: \n(Pdb) n \n> /dj_projects/marketr/survey/pie_utils.py(51)wait_for_data() \n-> empty = False \n(Pdb) \n\n```", "```py\n(Pdb) n \n> /dj_projects/marketr/survey/pie_utils.py(52)wait_for_data() \n-> fcntl.flock(fd, fcntl.LOCK_UN) \n(Pdb) n \n> /dj_projects/marketr/survey/pie_utils.py(53)wait_for_data() \n-> if empty: \n(Pdb) n \n> /dj_projects/marketr/survey/pie_utils.py(47)wait_for_data() \n-> while empty: \n(Pdb) n \n> /dj_projects/marketr/survey/pie_utils.py(56)wait_for_data() \n-> if fd: \n(Pdb) n \n> /dj_projects/marketr/survey/pie_utils.py(57)wait_for_data() \n-> os.close(fd) \n(Pdb) n \n--Return-- \n> /dj_projects/marketr/survey/pie_utils.py(57)wait_for_data()->None \n-> os.close(fd) \n(Pdb) \n\n```", "```py\n(Pdb) c \n> /dj_projects/marketr/survey/pie_utils.py(13)make_pie_if_necessary() \n-> fd = os.open(fname, os.O_WRONLY | os.O_CREAT | os.O_EXCL) \n(Pdb)\n\n```", "```py\n>>> q = Question.objects.get(pk=2) \n>>> q.check_piechart() \n> /dj_projects/marketr/survey/pie_utils.py(13)make_pie_if_necessary() \n-> fd = os.open(fname, os.O_WRONLY | os.O_CREAT | os.O_EXCL) \n(Pdb) n \n> /dj_projects/marketr/survey/pie_utils.py(14)make_pie_if_necessary() \n-> try: \n(Pdb) n \n> /dj_projects/marketr/survey/pie_utils.py(15)make_pie_if_necessary() \n-> f = os.fdopen(fd, 'wb') \n(Pdb) n \n> /dj_projects/marketr/survey/pie_utils.py(16)make_pie_if_necessary() \n-> fcntl.flock(f, fcntl.LOCK_EX) \n(Pdb) n \n> /dj_projects/marketr/survey/pie_utils.py(17)make_pie_if_necessary() \n-> create_piechart(f, answer_set) \n(Pdb) n \n> /dj_projects/marketr/survey/pie_utils.py(19)make_pie_if_necessary() \n-> fcntl.flock(f, fcntl.LOCK_UN) \n(Pdb) n \n> /dj_projects/marketr/survey/pie_utils.py(20)make_pie_if_necessary() \n-> f.close() \n(Pdb) \n\n```", "```py\n(Pdb) n \nOSError: (17, 'File exists', '/dj_projects/marketr/site_media/piecharts/2.png') \n> /dj_projects/marketr/survey/pie_utils.py(13)make_pie_if_necessary() \n-> fd = os.open(fname, os.O_WRONLY | os.O_CREAT | os.O_EXCL) \n(Pdb) n \n> /dj_projects/marketr/survey/pie_utils.py(21)make_pie_if_necessary() \n-> except OSError, e: \n(Pdb) n \n> /dj_projects/marketr/survey/pie_utils.py(22)make_pie_if_necessary() \n-> if e.errno == errno.EEXIST: \n(Pdb) n \n> /dj_projects/marketr/survey/pie_utils.py(23)make_pie_if_necessary() \n-> wait_for_data(fname) \n(Pdb) n \n--Return-- \n> /dj_projects/marketr/survey/pie_utils.py(23)make_pie_if_necessary()->None \n-> wait_for_data(fname) \n(Pdb) n \n--Return-- \n(Pdb)\n\n```", "```py\ndef make_pie_if_necessary(rel_path, answer_set): \n    fname = settings.MEDIA_ROOT + rel_path \n    try: \n        import pdb; pdb.set_trace() \n        fd = os.open(fname, os.O_WRONLY | os.O_CREAT | os.O_EXCL) \n        try: \n            f = os.fdopen(fd, 'wb') \n            fcntl.flock(f, fcntl.LOCK_EX) \n            create_piechart(f, answer_set) \n        finally: \n            f.flush() \n            os.fsync(f.fileno()) \n            fcntl.flock(f, fcntl.LOCK_UN) \n            f.close() \n    except OSError, e: \n       if e.errno == errno.EEXIST: \n            wait_for_data(fname) \n       else: \n            raise \n```"]