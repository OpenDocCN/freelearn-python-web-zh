["```py\nkmt@lbox:/dj_projects$ django-admin.py startproject marketr\n\n```", "```py\nkmt@lbox:/dj_projects/marketr$ python manage.py startapp survey\n\n```", "```py\n\"\"\" \nThis file demonstrates two different styles of tests (one doctest and one unittest). These will both pass when you run \"manage.py test\". \n\nReplace these with more appropriate tests for your application. \n\"\"\"\n\nfrom django.test import TestCase \n\nclass SimpleTest(TestCase): \n    def test_basic_addition(self): \n        \"\"\" \n        Tests that 1 + 1 always equals 2\\. \n        \"\"\" \n        self.failUnlessEqual(1 + 1, 2) \n```", "```py\nself.failUnlessEqual(1 + 1, 2)\n```", "```py\n__test__ = {\"doctest\": \"\"\"\nAnother way to test that 1 + 1 is equal to 2.\n\n>>> 1 + 1 == 2\nTrue\n\"\"\"}\n```", "```py\nkmt@lbox:/dj_projects/marketr$ python manage.py test \nCreating test database... \nTraceback (most recent call last): \n File \"manage.py\", line 11, in <module> \n execute_manager(settings) \n File \"/usr/lib/python2.5/site-packages/django/core/management/__init__.py\", line 362, in execute_manager \n utility.execute() \n File \"/usr/lib/python2.5/site-packages/django/core/management/__init__.py\", line 303, in execute \n self.fetch_command(subcommand).run_from_argv(self.argv) \n File \"/usr/lib/python2.5/site-packages/django/core/management/base.py\", line 195, in run_from_argv \n self.execute(*args, **options.__dict__) \n File \"/usr/lib/python2.5/site-packages/django/core/management/base.py\", line 222, in execute \n output = self.handle(*args, **options) \n File \"/usr/lib/python2.5/site-packages/django/core/management/commands/test.py\", line 23, in handle \n failures = test_runner(test_labels, verbosity=verbosity, interactive=interactive) \n File \"/usr/lib/python2.5/site-packages/django/test/simple.py\", line 191, in run_tests \n connection.creation.create_test_db(verbosity, autoclobber=not interactive) \n File \"/usr/lib/python2.5/site-packages/django/db/backends/creation.py\", line 327, in create_test_db \n test_database_name = self._create_test_db(verbosity, autoclobber) \n File \"/usr/lib/python2.5/site-packages/django/db/backends/creation.py\", line 363, in _create_test_db \n cursor = self.connection.cursor() \n File \"/usr/lib/python2.5/site-packages/django/db/backends/dummy/base.py\", line 15, in complain \n raise ImproperlyConfigured, \"You haven't set the DATABASE_ENGINE setting yet.\" \ndjango.core.exceptions.ImproperlyConfigured: You haven't set the DATABASE_ENGINE setting yet.\n\n```", "```py\nkmt@lbox:/dj_projects/marketr$ python manage.py test \nCreating test database... \nCreating table auth_permission \nCreating table auth_group \nCreating table auth_user \nCreating table auth_message \nCreating table django_content_type \nCreating table django_session \nCreating table django_site \nCreating table django_admin_log \nInstalling index for auth.Permission model \nInstalling index for auth.Message model \nInstalling index for admin.LogEntry model \n................................... \n---------------------------------------------------------------------- \nRan 35 tests in 2.012s \n\nOK \nDestroying test database...\n\n```", "```py\nkmt@lbox:/dj_projects/marketr$ python manage.py test survey \nCreating test database... \nCreating table auth_permission \nCreating table auth_group \nCreating table auth_user \nCreating table auth_message \nCreating table django_content_type \nCreating table django_session \nCreating table django_site \nCreating table django_admin_log \nInstalling index for auth.Permission model \nInstalling index for auth.Message model \nInstalling index for admin.LogEntry model \n.. \n---------------------------------------------------------------------- \nRan 2 tests in 0.039s \n\nOK \nDestroying test database... \n\n```", "```py\nkmt@lbox:/dj_projects/marketr$ python manage.py test\nCreating test database... \nCreating table auth_permission \nCreating table auth_group \nCreating table auth_user \nCreating table auth_message \nCreating table django_content_type \nCreating table django_session \nCreating table django_site \nCreating table django_admin_log \nInstalling index for auth.Permission model\nInstalling index for auth.Message model \nInstalling index for admin.LogEntry model \n...........................F.......\n====================================================================== \nFAIL: test_basic_addition (survey.tests.SimpleTest) \n---------------------------------------------------------------------- \nTraceback (most recent call last): \n File \"/dj_projects/marketr/survey/tests.py\", line 15, in test_basic_addition \n self.failUnlessEqual(1 + 1, 3) \nAssertionError: 2 != 3 \n\n---------------------------------------------------------------------- \nRan 35 tests in 2.759s \n\nFAILED (failures=1) \nDestroying test database...\n\n```", "```py\nkmt@lbox:/dj_projects/marketr$ python manage.py test survey \nCreating test database... \nCreating table auth_permission \nCreating table auth_group \nCreating table auth_user \nCreating table auth_message \nCreating table django_content_type \nCreating table django_session \nCreating table django_site \nCreating table django_admin_log \nInstalling index for auth.Permission model \nInstalling index for auth.Message model \nInstalling index for admin.LogEntry model \n.F \n====================================================================== \nFAIL: Doctest: survey.tests.__test__.doctest \n---------------------------------------------------------------------- \nTraceback (most recent call last): \n File \"/usr/lib/python2.5/site-packages/django/test/_doctest.py\", line 2180, in runTest \n raise self.failureException(self.format_failure(new.getvalue())) \nAssertionError: Failed doctest test for survey.tests.__test__.doctest \n File \"/dj_projects/marketr/survey/tests.py\", line unknown line number, in doctest \n\n---------------------------------------------------------------------- \nFile \"/dj_projects/marketr/survey/tests.py\", line ?, in survey.tests.__test__.doctest \nFailed example: \n 1 + 1 == 3 \nExpected: \n True \nGot: \n False \n\n---------------------------------------------------------------------- \nRan 2 tests in 0.054s \n\nFAILED (failures=1) \nDestroying test database... \n\n```", "```py\n\"\"\" \nThis file demonstrates two different styles of tests (one doctest and one unittest). These will both pass when you run \"manage.py test\". \n\nReplace these with more appropriate tests for your application. \n\n>>> 1 + 1 == 3 \nTrue\n\"\"\" \n```", "```py\nkmt@lbox:/dj_projects/marketr$ python manage.py test survey \nCreating test database... \nCreating table auth_permission \nCreating table auth_group \nCreating table auth_user \nCreating table auth_message \nCreating table django_content_type \nCreating table django_session \nCreating table django_site \nCreating table django_admin_log \nInstalling index for auth.Permission model \nInstalling index for auth.Message model \nInstalling index for admin.LogEntry model \n.F. \n====================================================================== \nFAIL: Doctest: survey.tests \n---------------------------------------------------------------------- \nTraceback (most recent call last): \n File \"/usr/lib/python2.5/site-packages/django/test/_doctest.py\", line 2180, in runTest \n raise self.failureException(self.format_failure(new.getvalue())) \nAssertionError: Failed doctest test for survey.tests \n File \"/dj_projects/marketr/survey/tests.py\", line 0, in tests \n\n---------------------------------------------------------------------- \nFile \"/dj_projects/marketr/survey/tests.py\", line 7, in survey.tests \nFailed example: \n 1 + 1 == 3 \nExpected: \n True \nGot: \n False \n\n---------------------------------------------------------------------- \nRan 3 tests in 0.052s \n\nFAILED (failures=1) \nDestroying test database... \n\n```", "```py\nself.failUnlessEqual(1 + 1, sum_args(1, 1))\n```", "```py\nkmt@lbox:/dj_projects/marketr$ python manage.py test survey \nCreating test database... \nCreating table auth_permission \nCreating table auth_group \nCreating table auth_user \nCreating table auth_message \nCreating table django_content_type \nCreating table django_session \nCreating table django_site \nCreating table django_admin_log \nInstalling index for auth.Permission model \nInstalling index for auth.Message model \nInstalling index for admin.LogEntry model \nE. \n====================================================================== \nERROR: test_basic_addition (survey.tests.SimpleTest) \n---------------------------------------------------------------------- \nTraceback (most recent call last): \n File \"/dj_projects/marketr/survey/tests.py\", line 15, in test_basic_addition \n self.failUnlessEqual(1 + 1, sum_args(1, 1)) \nNameError: global name 'sum_args' is not defined \n\n---------------------------------------------------------------------- \nRan 2 tests in 0.041s \n\nFAILED (errors=1) \nDestroying test database... \n\n```", "```py\n>>> 1 + 1 == sum_args(1, 1) \n```", "```py\nkmt@lbox:/dj_projects/marketr$ python manage.py test survey \nCreating test database... \nCreating table auth_permission \nCreating table auth_group \nCreating table auth_user \nCreating table auth_message \nCreating table django_content_type \nCreating table django_session \nCreating table django_site \nCreating table django_admin_log \nInstalling index for auth.Permission model \nInstalling index for auth.Message model \nInstalling index for admin.LogEntry model \nEF \n====================================================================== \nERROR: test_basic_addition (survey.tests.SimpleTest) \n---------------------------------------------------------------------- \nTraceback (most recent call last): \n File \"/dj_projects/marketr/survey/tests.py\", line 15, in test_basic_addition \n self.failUnlessEqual(1 + 1, sum_args(1, 1)) \nNameError: global name 'sum_args' is not defined \n\n====================================================================== \nFAIL: Doctest: survey.tests.__test__.doctest \n---------------------------------------------------------------------- \nTraceback (most recent call last): \n File \"/usr/lib/python2.5/site-packages/django/test/_doctest.py\", line 2180, in runTest \n raise self.failureException(self.format_failure(new.getvalue())) \nAssertionError: Failed doctest test for survey.tests.__test__.doctest \n File \"/dj_projects/marketr/survey/tests.py\", line unknown line number, in doctest \n\n---------------------------------------------------------------------- \nFile \"/dj_projects/marketr/survey/tests.py\", line ?, in survey.tests.__test__.doctest \nFailed example: \n 1 + 1 == sum_args(1, 1) \nException raised: \n Traceback (most recent call last): \n File \"/usr/lib/python2.5/site-packages/django/test/_doctest.py\", line 1267, in __run \n compileflags, 1) in test.globs \n File \"<doctest survey.tests.__test__.doctest[0]>\", line 1, in <module> \n 1 + 1 == sum_args(1, 1) \n NameError: name 'sum_args' is not defined \n\n---------------------------------------------------------------------- \nRan 2 tests in 0.044s \n\nFAILED (failures=1, errors=1) \nDestroying test database... \n\n```", "```py\nkmt@lbox:/dj_projects/marketr$ python manage.py test --help\nUsage: manage.py test [options] [appname ...]\n\nRuns the test suite for the specified applications, or the entire site if no apps are specified.\n\nOptions:\n -v VERBOSITY, --verbosity=VERBOSITY\n Verbosity level; 0=minimal output, 1=normal output,\n 2=all output\n --settings=SETTINGS   The Python path to a settings module, e.g.\n \"myproject.settings.main\". If this isn't provided, the\n DJANGO_SETTINGS_MODULE environment variable will \n be used.\n --pythonpath=PYTHONPATH\n A directory to add to the Python path, e.g.\n \"/home/djangoprojects/myproject\".\n --traceback           Print traceback on exception\n --noinput             Tells Django to NOT prompt the user for input of \n any kind.\n --version             show program's version number and exit\n -h, --help            show this help message and exit\n\n```", "```py\nkmt@lbox:/dj_projects/marketr$ python manage.py test survey -v0 \n====================================================================== \nERROR: test_basic_addition (survey.tests.SimpleTest) \n---------------------------------------------------------------------- \nTraceback (most recent call last): \n File \"/dj_projects/marketr/survey/tests.py\", line 15, in test_basic_addition \n self.failUnlessEqual(1 + 1, sum_args(1, 1)) \nNameError: global name 'sum_args' is not defined \n\n---------------------------------------------------------------------- \nRan 2 tests in 0.008s \n\nFAILED (errors=1) \n\n```", "```py\nkmt@lbox:/dj_projects/marketr$ python manage.py test survey --verbosity=2 \nCreating test database... \nProcessing auth.Permission model \nCreating table auth_permission \nProcessing auth.Group model \nCreating table auth_group \n **[...more snipped...]**\n\n**Creating many-to-many tables for auth.Group model** \n**Creating many-to-many tables for auth.User model** \n**Running post-sync handlers for application auth** \n**Adding permission 'auth | permission | Can add permission'** \n**Adding permission 'auth | permission | Can change permission'** \n ****[...more snipped...]**\n\n**No custom SQL for auth.Permission model** \n**No custom SQL for auth.Group model** \n\n**[...more snipped...]**\n ****Installing index for auth.Permission model** \n**Installing index for auth.Message model** \n**Installing index for admin.LogEntry model** \n**Loading 'initial_data' fixtures...** \n**Checking '/usr/lib/python2.5/site-packages/django/contrib/auth/fixtures' for fixtures...** \n**Trying '/usr/lib/python2.5/site-packages/django/contrib/auth/fixtures' for initial_data.xml fixture 'initial_data'...** \n**No xml fixture 'initial_data' in '/usr/lib/python2.5/site-packages/django/contrib/auth/fixtures'.** \n\n**[....much more snipped...]**\n**No fixtures found.** \n**test_basic_addition (survey.tests.SimpleTest) ... ok** \n**Doctest: survey.tests.__test__.doctest ... ok** \n\n**----------------------------------------------------------------------** \n**Ran 2 tests in 0.004s** \n\n**OK** \n**Destroying test database...****** \n```", "```py\n****kmt@lbox:/dj_projects/marketr$ python manage.py test** \n**Creating test database...** \n**Got an error creating the test database: (1007, \"Can't create database 'test_marketr'; database exists\")** \n**Type 'yes' if you would like to try deleting the test database 'test_marketr', or 'no' to cancel:**** \n```"]