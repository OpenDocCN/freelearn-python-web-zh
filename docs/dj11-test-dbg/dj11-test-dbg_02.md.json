["```py\nclass Survey(models.Model): \n    title = models.CharField(max_length=60) \n    opens = models.DateField() \n    closes = models.DateField() \n```", "```py\nclass Question(models.Model): \n    question = models.CharField(max_length=200) \n    survey = models.ForeignKey(Survey) \n```", "```py\nclass Answer(models.Model): \n    answer = models.CharField(max_length=200) \n    question = models.ForeignKey(Question) \n    votes = models.IntegerField(default=0) \n```", "```py\nkmt@lbox:/dj_projects/marketr$ python manage.py shell \nPython 2.5.2 (r252:60911, Oct  5 2008, 19:24:49) \n[GCC 4.3.2] on linux2 \nType \"help\", \"copyright\", \"credits\" or \"license\" for more information. \n(InteractiveConsole) \n>>> from survey.models import Survey \n>>> import datetime \n>>> t = 'First!'\n>>> d = datetime.date.today()\n>>> s = Survey.objects.create(title=t, opens=d, closes=d) \n>>>\n\n```", "```py\n>>> s = Survey.objects.create(title=t, opens=d, closes=None) \n File \"<console>\", line 1, in <module> \n File \"/usr/lib/python2.5/site-packages/django/db/models/manager.py\", line 126, in create \n return self.get_query_set().create(**kwargs) \n File \"/usr/lib/python2.5/site-packages/django/db/models/query.py\", line 315, in create \n obj.save(force_insert=True) \n File \"/usr/lib/python2.5/site-packages/django/db/models/base.py\", line 410, in save \n self.save_base(force_insert=force_insert, force_update=force_update) \n File \"/usr/lib/python2.5/site-packages/django/db/models/base.py\", line 495, in save_base \n result = manager._insert(values, return_id=update_pk) \n File \"/usr/lib/python2.5/site-packages/django/db/models/manager.py\", line 177, in _insert \n return insert_query(self.model, values, **kwargs) \n File \"/usr/lib/python2.5/site-packages/django/db/models/query.py\", line 1087, in insert_query \n return query.execute_sql(return_id) \n File \"/usr/lib/python2.5/site-packages/django/db/models/sql/subqueries.py\", line 320, in execute_sql \n cursor = super(InsertQuery, self).execute_sql(None) \n File \"/usr/lib/python2.5/site-packages/django/db/models/sql/query.py\", line 2369, in execute_sql \n cursor.execute(sql, params) \n File \"/usr/lib/python2.5/site-packages/django/db/backends/util.py\", line 19, in execute \n return self.cursor.execute(sql, params) \n File \"/usr/lib/python2.5/site-packages/django/db/backends/sqlite3/base.py\", line 193, in execute \n return Database.Cursor.execute(self, query, params) \nIntegrityError: survey_survey.closes may not be NULL \n\n```", "```py\nimport datetime\nfrom django.db import models \n\nclass Survey(models.Model): \n    \"\"\" \n    >>> t = 'First!' \n    >>> d = datetime.date.today() \n    >>> s = Survey.objects.create(title=t, opens=d, closes=d) \n    >>> s = Survey.objects.create(title=t, opens=d, closes=None) \n    Traceback (most recent call last): \n    ... \n    IntegrityError: survey_survey.closes may not be NULL \n    >>> s = Survey.objects.create(title=t, opens=None, closes=d) \n    Traceback (most recent call last): \n    ... \n    IntegrityError: survey_survey.opens may not be NULL \n    >>> s = Survey.objects.create(title=None, opens=d, closes=d) \n    Traceback (most recent call last): \n    ... \n    IntegrityError: survey_survey.title may not be NULL \n    \"\"\" \n    title = models.CharField(max_length=60) \n    opens = models.DateField() \n    closes = models.DateField()\n```", "```py\nNo fixtures found. \ntest_basic_addition (survey.tests.SimpleTest) ... ok \nDoctest: survey.models.Survey ... ok \nDoctest: survey.tests.__test__.doctest ... ok \n\n---------------------------------------------------------------------- \nRan 3 tests in 0.030s \n\nOK \nDestroying test database... \n\n```", "```py\nimport datetime\nfrom django.db import models  \n\nclass Survey(models.Model): \n    title = models.CharField(max_length=60) \n    opens = models.DateField() \n    closes = models.DateField() \n\n    def save(self, **kwargs): \n        if not self.pk and not self.closes: \n            self.closes = self.opens + datetime.timedelta(7) \n        super(Survey, self).save(**kwargs) \n```", "```py\nkmt@lbox:/dj_projects/marketr$ python manage.py shell \nPython 2.5.2 (r252:60911, Oct  5 2008, 19:24:49) \n[GCC 4.3.2] on linux2 \nType \"help\", \"copyright\", \"credits\" or \"license\" for more information. \n(InteractiveConsole) \n>>> from survey.models import Survey \n>>> import datetime \n>>> t = \"New Year's Resolutions\" \n>>> sd = datetime.date(2009, 12, 28) \n>>> s = Survey.objects.create(title=t, opens=sd) \n>>> s.closes \ndatetime.date(2010, 1, 4) \n>>> \n\n```", "```py\n>>> s = Survey.objects.create(title=t, opens=sd, closes=sd)\n>>> s.opens \ndatetime.date(2009, 12, 28) \n>>> s.closes \ndatetime.date(2009, 12, 28) \n>>> \n\n```", "```py\n>>> s.closes = None \n>>> s.save() \nTraceback (most recent call last): \n File \"<console>\", line 1, in <module> \n File \"/dj_projects/marketr/survey/models.py\", line 12, in save \n super(Survey, self).save(**kwargs) \n File \"/usr/lib/python2.5/site-packages/django/db/models/base.py\", line 410, in save \n self.save_base(force_insert=force_insert, force_update=force_update) \n File \"/usr/lib/python2.5/site-packages/django/db/models/base.py\", line 474, in save_base \n rows = manager.filter(pk=pk_val)._update(values) \n File \"/usr/lib/python2.5/site-packages/django/db/models/query.py\", line 444, in _update \n return query.execute_sql(None) \n File \"/usr/lib/python2.5/site-packages/django/db/models/sql/subqueries.py\", line 120, in execute_sql \n cursor = super(UpdateQuery, self).execute_sql(result_type) \n File \"/usr/lib/python2.5/site-packages/django/db/models/sql/query.py\", line 2369, in execute_sql \n cursor.execute(sql, params) \n File \"/usr/lib/python2.5/site-packages/django/db/backends/util.py\", line 19, in execute \n return self.cursor.execute(sql, params) \n File \"/usr/lib/python2.5/site-packages/django/db/backends/sqlite3/base.py\", line 193, in execute \n return Database.Cursor.execute(self, query, params) \nIntegrityError: survey_survey.closes may not be NULL \n>>> \n\n```", "```py\n>>> s = Survey.objects.create(title=t) \nTraceback (most recent call last): \n File \"<console>\", line 1, in <module> \n File \"/usr/lib/python2.5/site-packages/django/db/models/manager.py\", line 126, in create \n return self.get_query_set().create(**kwargs) \n File \"/usr/lib/python2.5/site-packages/django/db/models/query.py\", line 315, in create \n obj.save(force_insert=True) \n File \"/dj_projects/marketr/survey/models.py\", line 11, in save \n self.closes = self.opens + datetime.timedelta(7) \nTypeError: unsupported operand type(s) for +: 'NoneType' and 'datetime.timedelta' \n>>> \n\n```", "```py\n    def save(self, **kwargs): \n        if not self.pk and self.opens and not self.closes: \n            self.closes = self.opens + datetime.timedelta(7) \n        super(Survey, self).save(**kwargs) \n```", "```py\n>>> s = Survey.objects.create(title=t) \nTraceback (most recent call last): \n File \"<console>\", line 1, in <module> \n File \"/usr/lib/python2.5/site-packages/django/db/models/manager.py\", line 126, in create \n return self.get_query_set().create(**kwargs) \n File \"/usr/lib/python2.5/site-packages/django/db/models/query.py\", line 315, in create \n obj.save(force_insert=True) \n File \"/dj_projects/marketr/survey/models.py\", line 12, in save \n super(Survey, self).save(**kwargs) \n File \"/usr/lib/python2.5/site-packages/django/db/models/base.py\", line 410, in save \n self.save_base(force_insert=force_insert, force_update=force_update) \n File \"/usr/lib/python2.5/site-packages/django/db/models/base.py\", line 495, in save_base \n result = manager._insert(values, return_id=update_pk) \n File \"/usr/lib/python2.5/site-packages/django/db/models/manager.py\", line 177, in _insert \n return insert_query(self.model, values, **kwargs) \n File \"/usr/lib/python2.5/site-packages/django/db/models/query.py\", line 1087, in insert_query \n return query.execute_sql(return_id) \n File \"/usr/lib/python2.5/site-packages/django/db/models/sql/subqueries.py\", line 320, in execute_sql \n cursor = super(InsertQuery, self).execute_sql(None) \n File \"/usr/lib/python2.5/site-packages/django/db/models/sql/query.py\", line 2369, in execute_sql \n cursor.execute(sql, params) \n File \"/usr/lib/python2.5/site-packages/django/db/backends/util.py\", line 19, in execute \n return self.cursor.execute(sql, params) \n File \"/usr/lib/python2.5/site-packages/django/db/backends/sqlite3/base.py\", line 193, in execute \n return Database.Cursor.execute(self, query, params) \nIntegrityError: survey_survey.opens may not be NULL \n>>> \n\n```", "```py\n    def save(self, **kwargs): \n        \"\"\" \n        save override to allow for Survey instances to be created without explicitly specifying a closes date. If not specified, closes will be set to 7 days after opens. \n        >>> t = \"New Year's Resolutions\" \n        >>> sd = datetime.date(2009, 12, 28) \n        >>> s = Survey.objects.create(title=t, opens=sd) \n        >>> s.closes \n        datetime.date(2010, 1, 4) \n\n        If closes is specified, it will be honored and not auto-set. \n\n        >>> s = Survey.objects.create(title=t, opens=sd, closes=sd) \n        >>> s.closes \n        datetime.date(2009, 12, 28) \n\n        Any changes to closes after initial creation need to be explicit. Changing closes to None on an existing instance will not result in closes being reset to 7 days after opens. \n\n        >>> s.closes = None \n        >>> s.save() \n        Traceback (most recent call last): \n          ... \n        IntegrityError: survey_survey.closes may not be NULL \n\n        Making the mistake of specifying neither opens nor closes results in the expected IntegrityError for opens, not any exception in the code here. \n\n        >>> s = Survey.objects.create(title=t) \n        Traceback (most recent call last): \n          ... \n        IntegrityError: survey_survey.opens may not be NULL \n        \"\"\" \n        if not self.pk and self.opens and not self.closes: \n            self.closes = self.opens + datetime.timedelta(7) \n        super(Survey, self).save(**kwargs) \n```", "```py\n__test__ = {\"survey_save\": \"\"\" \n\nTests for the Survey save override method. \n\n>>> import datetime \n>>> from survey.models import Survey \n>>> t = \"New Year's Resolutions\" \n>>> sd = datetime.date(2009, 12, 28) \n\nIf closes is specified, it will be honored and not auto-set. \n\n>>> s = Survey.objects.create(title=t, opens=sd, closes=sd) \n>>> s.closes \ndatetime.date(2009, 12, 28) \n\nMaking the mistake of specifying neither opens nor closes results \nin the expected IntegrityError for opens, not any exception in the \nsave override code itself. \n\n>>> s = Survey.objects.create(title=t) \nTraceback (most recent call last): \n  ... \nIntegrityError: survey_survey.opens may not be NULL \n\"\"\"} \n```", "```py\n    def save(self, **kwargs): \n        \"\"\" \n        save override to allow for Survey instances to be created without explicitly specifying a closes date. If not specified, closes will be set to 7 days after opens. \n        >>> t = \"New Year's Resolutions\" \n        >>> sd = datetime.date(2009, 12, 28) \n        >>> s = Survey.objects.create(title=t, opens=sd) \n        >>> s.closes \n        datetime.date(2010, 1, 4) \n\n        Any changes to closes after initial creation need to be explicit. Changing closes to None on an existing instance will not result in closes being reset to 7 days after opens. \n\n        >>> s.closes = None \n        >>> s.save() \n        Traceback (most recent call last): \n          ... \n        IntegrityError: survey_survey.closes may not be NULL \n\n        \"\"\" \n        if not self.pk and self.opens and not self.closes: \n            self.closes = self.opens + datetime.timedelta(7) \n        super(Survey, self).save(**kwargs) \n```", "```py\n    def __unicode__(self): \n        return u'%s (Opens %s, closes %s)' % (self.title, self.opens, self.closes) \n```", "```py\n>>> from survey.models import Survey \n>>> import datetime \n>>> sd = datetime.date(2009, 12, 28) \n>>> t = \"New Year's Resolutions\" \n>>> s = Survey.objects.create(title=t, opens=sd) \n>>> s \n<Survey: New Year's Resolutions (Opens 2009-12-28, closes 2010-01-04)> \n>>> \n\n```", "```py\n====================================================================== \nFAIL: Doctest: survey.models.Survey.save \n---------------------------------------------------------------------- \nTraceback (most recent call last): \n File \"/usr/lib/python2.5/site-packages/django/test/_doctest.py\", line 2189, in runTest \n raise self.failureException(self.format_failure(new.getvalue())) \nAssertionError: Failed doctest test for survey.models.Survey.save \n File \"/dj_projects/marketr/survey/models.py\", line 9, in save \n\n---------------------------------------------------------------------- \nFile \"/dj_projects/marketr/survey/models.py\", line 32, in survey.models.Survey.save \nFailed example: \n s \nExpected: \n <Survey: New Year's Resolutions (Opens 2009-12-28, closes 2010-01-04)> \nGot: \n <Survey: New Year's Resolutions (opens 2009-12-28, closes 2010-01-04)> \n\n---------------------------------------------------------------------- \nRan 3 tests in 0.076s \n\nFAILED (failures=1) \nDestroying test database... \n\n```", "```py\n====================================================================== \nFAIL: Doctest: survey.tests.__test__.survey_save \n---------------------------------------------------------------------- \nTraceback (most recent call last): \n File \"/usr/lib/python2.5/site-packages/django/test/_doctest.py\", line 2189, in runTest \n raise self.failureException(self.format_failure(new.getvalue())) \nAssertionError: Failed doctest test for survey.tests.__test__.survey_save \n File \"/dj_projects/marketr/survey/tests.py\", line unknown line number, in survey_save \n\n---------------------------------------------------------------------- \nFile \"/dj_projects/marketr/survey/tests.py\", line ?, in survey.tests.__test__.survey_save \nFailed example: \n s = Survey.objects.create(title=t) \nExpected: \n Traceback (most recent call last): \n ... \n IntegrityError: survey_survey.opens may not be NULL \nGot: \n Traceback (most recent call last): \n File \"/usr/lib/python2.5/site-packages/django/test/_doctest.py\", line 1274, in __run \n compileflags, 1) in test.globs \n File \"<doctest survey.tests.__test__.survey_save[6]>\", line 1, in <module> \n s = Survey.objects.create(title=t) \n File \"/usr/lib/python2.5/site-packages/django/db/models/manager.py\", line 126, in create \n return self.get_query_set().create(**kwargs) \n File \"/usr/lib/python2.5/site-packages/django/db/models/query.py\", line 315, in create \n obj.save(force_insert=True) \n File \"/dj_projects/marketr/survey/models.py\", line 34, in save \n super(Survey, self).save(**kwargs) \n File \"/usr/lib/python2.5/site-packages/django/db/models/base.py\", line 410, in save \n self.save_base(force_insert=force_insert, force_update=force_update) \n File \"/usr/lib/python2.5/site-packages/django/db/models/base.py\", line 495, in save_base \n result = manager._insert(values, return_id=update_pk) \n File \"/usr/lib/python2.5/site-packages/django/db/models/manager.py\", line 177, in _insert \n return insert_query(self.model, values, **kwargs) \n File \"/usr/lib/python2.5/site-packages/django/db/models/query.py\", line 1087, in insert_query \n return query.execute_sql(return_id) \n File \"/usr/lib/python2.5/site-packages/django/db/models/sql/subqueries.py\", line 320, in execute_sql \n cursor = super(InsertQuery, self).execute_sql(None) \n File \"/usr/lib/python2.5/site-packages/django/db/models/sql/query.py\", line 2369, in execute_sql \n cursor.execute(sql, params) \n File \"/usr/lib/python2.5/site-packages/django/db/backends/mysql/base.py\", line 89, in execute \n raise Database.IntegrityError(tuple(e)) \n IntegrityError: (1048, \"Column 'opens' cannot be null\") \n\n---------------------------------------------------------------------- \nRan 3 tests in 0.434s \n\nFAILED (failures=2) \nDestroying test database... \n\n```", "```py\n IntegrityError: survey_survey.opens may not be NULL \n\n```", "```py\n IntegrityError: (1048, \"Column 'opens' cannot be null\") \n\n```", "```py\n>>> s = Survey.objects.create(title=t) # doctest: +IGNORE_EXCEPTION_DETAIL \n```", "```py\n>>> s = Survey.objects.create(title=t) \nTraceback (most recent call last): \n  ... \nIntegrityError: ... \n```", "```py\n        >>> s.closes = None \n        >>> s.save() \n        Traceback (most recent call last): \n          ... \n        IntegrityError: survey_survey.closes may not be NULL \n```", "```py\nNo fixtures found. \ntest_basic_addition (survey.tests.SimpleTest) ... ok \nDoctest: survey.models.Survey.save ... ok \nDoctest: survey.tests.__test__.survey_save ... FAIL \n\n```", "```py\n====================================================================== \nFAIL: Doctest: survey.tests.__test__.survey_save \n---------------------------------------------------------------------- \nTraceback (most recent call last): \n File \"/usr/lib/python2.5/site-packages/django/test/_doctest.py\", line 2189, in runTest \n raise self.failureException(self.format_failure(new.getvalue())) \nAssertionError: Failed doctest test for survey.tests.__test__.survey_save \n File \"/dj_projects/marketr/survey/tests.py\", line unknown line number, in survey_save \n\n---------------------------------------------------------------------- \nFile \"/dj_projects/marketr/survey/tests.py\", line ?, in survey.tests.__test__.survey_save \nFailed example: \n s = Survey.objects.create(title=t, opens=sd, closes=sd) \nException raised: \n Traceback (most recent call last): \n File \"/usr/lib/python2.5/site-packages/django/test/_doctest.py\", line 1274, in __run \n compileflags, 1) in test.globs \n File \"<doctest survey.tests.__test__.survey_save[4]>\", line 1, in <module> \n s = Survey.objects.create(title=t, opens=sd, closes=sd) \n File \"/usr/lib/python2.5/site-packages/django/db/models/manager.py\", line 126, in create \n return self.get_query_set().create(**kwargs) \n File \"/usr/lib/python2.5/site-packages/django/db/models/query.py\", line 315, in create \n obj.save(force_insert=True) \n File \"/dj_projects/marketr/survey/models.py\", line 34, in save \n super(Survey, self).save(**kwargs)\n File \"/usr/lib/python2.5/site-packages/django/db/models/base.py\", line 410, in save \n self.save_base(force_insert=force_insert, force_update=force_update) \n File \"/usr/lib/python2.5/site-packages/django/db/models/base.py\", line 495, in save_base \n result = manager._insert(values, return_id=update_pk) \n File \"/usr/lib/python2.5/site-packages/django/db/models/manager.py\", line 177, in _insert \n return insert_query(self.model, values, **kwargs) \n File \"/usr/lib/python2.5/site-packages/django/db/models/query.py\", line 1087, in insert_query \n return query.execute_sql(return_id) \n File \"/usr/lib/python2.5/site-packages/django/db/models/sql/subqueries.py\", line 320, in execute_sql \n cursor = super(InsertQuery, self).execute_sql(None) \n File \"/usr/lib/python2.5/site-packages/django/db/models/sql/query.py\", line 2369, in execute_sql \n cursor.execute(sql, params) \n InternalError: current transaction is aborted, commands ignored until end of transaction block \n\n---------------------------------------------------------------------- \nFile \"/dj_projects/marketr/survey/tests.py\", line ?, in survey.tests.__test__.survey_save \nFailed example: \n s.closes \nException raised: \n Traceback (most recent call last): \n File \"/usr/lib/python2.5/site-packages/django/test/_doctest.py\", line 1274, in __run \n compileflags, 1) in test.globs \n File \"<doctest survey.tests.__test__.survey_save[5]>\", line 1, in <module> \n s.closes \n NameError: name 's' is not defined \n ****----------------------------------------------------------------------** \n**Ran 3 tests in 0.807s** \n ****FAILED (failures=1)** \n**Destroying test database...****** \n```", "```py\n**>>> import datetime \n>>> from survey.models import Survey \n>>> t = \"New Year's Resolutions\" \n>>> sd = datetime.date(2009, 12, 28) \n\nIf closes is specified, it will be honored and not auto-set. \n\n>>> s = Survey.objects.create(title=t, opens=sd, closes=sd) \n>>> s.closes \ndatetime.date(2009, 12, 28)** \n```", "```py\n****InternalError: current transaction is aborted, commands ignored until end of transaction block****\n```", "```py\n **>>> s.closes = None \n        >>> s.save() \n        Traceback (most recent call last): \n          ... \n        IntegrityError: ... \n        \"\"\"** \n```", "```py\n **>>> s.closes = None \n        >>> s.save() \n        Traceback (most recent call last): \n          ... \n        IntegrityError: ... \n        >>> from django.db import transaction \n        >>> transaction.rollback() \n        \"\"\"** \n```", "```py\n **def __unicode__(self): \n        \"\"\" \n        >>> t = u'\u00bfComo est\u00e1 usted?' \n        >>> sd = datetime.date(2009, 12, 28) \n        >>> s = Survey.objects.create(title=t, opens=sd) \n        >>> print s \n        \u00bfComo est\u00e1 usted? (opens 2009-12-28, closes 2010-01-04) \n        \"\"\" \n        return u'%s (opens %s, closes %s)' % (self.title, self.opens, self.closes)** \n```", "```py\n****kmt@lbox:/dj_projects/marketr$ python manage.py test survey** \n**Traceback (most recent call last):** \n **File \"manage.py\", line 11, in <module>** \n **execute_manager(settings)** \n **File \"/usr/lib/python2.5/site-packages/django/core/management/__init__.py\", line 362, in execute_manager** \n **utility.execute()** \n **File \"/usr/lib/python2.5/site-packages/django/core/management/__init__.py\", line 303, in execute** \n **self.fetch_command(subcommand).run_from_argv(self.argv)** \n **File \"/usr/lib/python2.5/site-packages/django/core/management/base.py\", line 195, in run_from_argv** \n **self.execute(*args, **options.__dict__)** \n **File \"/usr/lib/python2.5/site-packages/django/core/management/base.py\", line 222, in execute** \n **output = self.handle(*args, **options)** \n **File \"/usr/lib/python2.5/site-packages/django/core/management/commands/test.py\", line 23, in handle** \n **failures = test_runner(test_labels, verbosity=verbosity, interactive=interactive)** \n **File \"/usr/lib/python2.5/site-packages/django/test/simple.py\", line 178, in run_tests** \n **app = get_app(label)** \n **File \"/usr/lib/python2.5/site-packages/django/db/models/loading.py\", line 114, in get_app** \n **self._populate()** \n **File \"/usr/lib/python2.5/site-packages/django/db/models/loading.py\", line 58, in _populate** \n **self.load_app(app_name, True)** \n **File \"/usr/lib/python2.5/site-packages/django/db/models/loading.py\", line 74, in load_app** \n **models = import_module('.models', app_name)** \n **File \"/usr/lib/python2.5/site-packages/django/utils/importlib.py\", line 35, in import_module** \n **__import__(name)** \n **File \"/dj_projects/marketr/survey/models.py\", line 40** \n**SyntaxError: Non-ASCII character '\\xc2' in file /dj_projects/marketr/survey/models.py on line 41, but no encoding declared; see http://www.python.org/peps/pep-0263.html for details**** \n```", "```py\n**# -*- encoding: utf-8 -*-** \n```", "```py\n****======================================================================** \n**FAIL: Doctest: survey.models.Survey.__unicode__** \n**----------------------------------------------------------------------** \n**Traceback (most recent call last):** \n **File \"/usr/lib/python2.5/site-packages/django/test/_doctest.py\", line 2180, in runTest** \n **raise self.failureException(self.format_failure(new.getvalue()))** \n**AssertionError: Failed doctest test for survey.models.Survey.__unicode__** \n **File \"/dj_projects/marketr/survey/models.py\", line 39, in __unicode__** \n\n**----------------------------------------------------------------------** \n**File \"/dj_projects/marketr/survey/models.py\", line 44, in survey.models.Survey.__unicode__** \n**Failed example:** \n **print s** \n**Expected:** \n **\u00bfComo est\u00e1 usted? (opens 2009-12-28, closes 2010-01-04)** \n**Got:** \n **\u00c2\u00bfComo est\u00c3\u00a1 usted? (opens 2009-12-28, closes 2010-01-04)** \n\n**----------------------------------------------------------------------** \n**Ran 4 tests in 0.084s** \n\n**FAILED (failures=1)** \n**Destroying test database...**** \n```", "```py\n **def __unicode__(self): \n        \"\"\" \n        >>> t = '\u00bfComo est\u00e1 usted?'.decode('utf-8') \n        >>> sd = datetime.date(2009, 12, 28) \n        >>> s = Survey.objects.create(title=t, opens=sd) \n        >>> print s \n        \u00bfComo est\u00e1 usted? (opens 2009-12-28, closes 2010-01-04) \n        \"\"\" \n        return u'%s (opens %s, closes %s)' % (self.title, self.opens, self.closes)** \n```", "```py\n****No fixtures found.** \n**test_basic_addition (survey.tests.SimpleTest) ... ok** \n**Doctest: survey.models.Survey.__unicode__ ... ok** \n**Doctest: survey.models.Survey.save ... ok** \n**Doctest: survey.tests.__test__.survey_save ... ok** \n\n**----------------------------------------------------------------------** \n**Ran 4 tests in 0.046s** \n\n**OK** \n**Destroying test database...**** \n```"]