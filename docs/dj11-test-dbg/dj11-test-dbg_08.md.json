["```py\n# Addresses for internal machines that can see potentially sensitive\n# information such as the query history for a request.\nINTERNAL_IPS = ('127.0.0.1', ) \n```", "```py\ndef home(request):\n    today = datetime.date.today()\n    active = Survey.objects.active()\n    completed = Survey.objects.completed().filter(closes__gte=today-\n                    datetime.timedelta(14))\n    upcoming = Survey.objects.upcoming().filter(\n                    opens__lte=today+datetime.timedelta(7))\n    return render_to_response('survey/home.html',\n        {'active_surveys': active,\n        'completed_surveys': completed,\n        'upcoming_surveys': upcoming,\n        }) \n```", "```py\nfrom django.template import RequestContext \ndef home(request): \n    today = datetime.date.today() \n    active = Survey.objects.active() \n    completed = Survey.objects.completed().filter(closes__gte=today-datetime.timedelta(14)) \n    upcoming = Survey.objects.upcoming().filter(opens__lte=today+datetime.timedelta(7)) \n    return render_to_response('survey/home.html', \n        {'active_surveys': active, \n         'completed_surveys': completed, \n         'upcoming_surveys': upcoming,}, \n        RequestContext(request)) \n```", "```py\n{% extends \"survey/base.html\" %} \n{% block content %} \n<!-- \n{{ sql_queries|length }} queries \n{% for qdict in sql_queries %} \n{{ qdict.sql }} ({{ qdict.time }} seconds) \n{% endfor %} \n--> \n```", "```py\n<!--\n1 queries\n\nSELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = d538f13c423c2fe1e7f8d8147b0f6887  AND `django_session`.`expire_date` &gt; 2009-10-24 17:24:49 ) (0.001 seconds)\n\n--> \n\n```", "```py\n{% with sql_queries|length as qcount %} \n{{ qcount }} quer{{ qcount|pluralize:\"y,ies\" }} \n{% endwith %} \n```", "```py\n<!--\n\n0 queries\n\n--> \n\n```", "```py\n{% endif %} \n<!-- \n{% with sql_queries|length as qcount %} \n{{ qcount }} quer{{ qcount|pluralize:\"y,ies\" }} \n{% endwith %} \n{% for qdict in sql_queries %} \n{{ qdict.sql|safe|wordwrap:60 }} ({{ qdict.time }} seconds) \n{% endfor %} \n--> \n{% endblock content %} \n```", "```py\n<!--\n\n3 queries\n\nSELECT `survey_survey`.`id`, `survey_survey`.`title`,\n`survey_survey`.`opens`, `survey_survey`.`closes` FROM\n`survey_survey` WHERE (`survey_survey`.`opens` <= 2009-10-25\n AND `survey_survey`.`closes` >= 2009-10-25 ) (0.000 seconds)\n\nSELECT `survey_survey`.`id`, `survey_survey`.`title`,\n`survey_survey`.`opens`, `survey_survey`.`closes` FROM\n`survey_survey` WHERE (`survey_survey`.`closes` < 2009-10-25\n AND `survey_survey`.`closes` >= 2009-10-11 ) (0.000 seconds)\n\nSELECT `survey_survey`.`id`, `survey_survey`.`title`,\n`survey_survey`.`opens`, `survey_survey`.`closes` FROM\n`survey_survey` WHERE (`survey_survey`.`opens` > 2009-10-25 \nAND `survey_survey`.`opens` <= 2009-11-01 ) (0.000 seconds)\n\n--> \n\n```", "```py\nkmt@lbox:/dj_projects/marketr$ python manage.py startapp gen_utils \n\n```", "```py\n{% if sql_queries %}<!-- \n{% with sql_queries|length as qcount %} \n{{ qcount }} quer{{ qcount|pluralize:\"y,ies\" }} \n{% endwith %} \n{% for qdict in sql_queries %} \n{{ qdict.sql|safe|wordwrap:60 }} ({{ qdict.time }} seconds){% endfor %} \n-->{% endif %} \n```", "```py\n    Survey.objects.filter(title__contains='--').count() \n```", "```py\nfrom django import template \n\nregister = template.Library() \n\n@register.filter \ndef replace_dashes(value): \n    return value.replace('--','~~double-dash~~') \nreplace_dashes.is_safe = True \n```", "```py\n{% if sql_queries %}<!-- \n{% with sql_queries|length as qcount %} \n{{ qcount }} quer{{ qcount|pluralize:\"y,ies\" }} \n{% endwith %} \n{% load gentags %} \n{% for qdict in sql_queries %} \n{{ qdict.sql|safe|replace_dashes|wordwrap:60 }} ({{ qdict.time }} seconds) \n{% endfor %} \n-->{% endif %} \n```", "```py\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\"> \n<html > \n<head> \n<title>{% block title %}Survey Central{% endblock %}</title> \n</head> \n<body> \n{% block content %}{% endblock %}\n</body> \n{% include \"gen_utils/showqueries.html\" %} \n</html> \n```", "```py\nkmt@lbox:/dj_projects/marketr$ python manage.py shell \nPython 2.5.2 (r252:60911, Oct  5 2008, 19:24:49) \n[GCC 4.3.2] on linux2 \nType \"help\", \"copyright\", \"credits\" or \"license\" for more information. \n(InteractiveConsole) \n>>> from gen_utils.templatetags import gentags \nTraceback (most recent call last): \n File \"<console>\", line 1, in <module> \nImportError: No module named templatetags \n>>> \n\n```", "```py\n<!--\n\n4 queries\n\nSELECT COUNT(*) FROM `survey_survey` WHERE\n`survey_survey`.`title` LIKE BINARY %~~double-dash~~%  (0.015 seconds)\n\nSELECT `survey_survey`.`id`, `survey_survey`.`title`,\n`survey_survey`.`opens`, `survey_survey`.`closes` FROM\n`survey_survey` WHERE (`survey_survey`.`opens` <= 2009-11-01\n AND `survey_survey`.`closes` >= 2009-11-01 ) (0.001 seconds)\n\nSELECT `survey_survey`.`id`, `survey_survey`.`title`,\n`survey_survey`.`opens`, `survey_survey`.`closes` FROM\n`survey_survey` WHERE (`survey_survey`.`closes` < 2009-11-01\n AND `survey_survey`.`closes` >= 2009-10-18 ) (0.000 seconds)\n\nSELECT `survey_survey`.`id`, `survey_survey`.`title`,\n`survey_survey`.`opens`, `survey_survey`.`closes` FROM\n`survey_survey` WHERE (`survey_survey`.`opens` > 2009-11-01 \nAND `survey_survey`.`opens` <= 2009-11-08 ) (0.000 seconds)\n\n--> \n\n```", "```py\n<!--\n\n6 queries\n\nSELECT `survey_survey`.`id`, `survey_survey`.`title`,\n`survey_survey`.`opens`, `survey_survey`.`closes` FROM\n`survey_survey` WHERE `survey_survey`.`id` = 1  (0.000 seconds)\n\nSELECT `survey_question`.`id`, `survey_question`.`question`,\n`survey_question`.`survey_id` FROM `survey_question` WHERE\n`survey_question`.`survey_id` = 1  (0.000 seconds)\n\nSELECT COUNT(*) FROM `survey_answer` WHERE\n`survey_answer`.`question_id` = 1  (0.001 seconds)\n\nSELECT COUNT(*) FROM `survey_answer` WHERE\n`survey_answer`.`question_id` = 2  (0.001 seconds)\n\nSELECT `survey_answer`.`id`, `survey_answer`.`answer`,\n`survey_answer`.`question_id`, `survey_answer`.`votes` FROM\n`survey_answer` WHERE `survey_answer`.`question_id` = 1  (0.024 seconds)\n\nSELECT `survey_answer`.`id`, `survey_answer`.`answer`,\n`survey_answer`.`question_id`, `survey_answer`.`votes` FROM\n`survey_answer` WHERE `survey_answer`.`question_id` = 2  (0.001 seconds)\n\n-->\n\n```", "```py\ndef survey_detail(request, pk): \n    survey = get_object_or_404(Survey, pk=pk) \n```", "```py\n    qforms = [] \n    for i, q in enumerate(survey.question_set.all()): \n        if q.answer_set.count() > 1: \n            qforms.append(QuestionVoteForm(q, prefix=i, data=data)) \n```", "```py\n        self.fields['answer'].queryset = question.answer_set.all() \n```", "```py\n<!--\n\n1 query\n\nSELECT `survey_survey`.`id`, `survey_survey`.`title`,\n`survey_survey`.`opens`, `survey_survey`.`closes` FROM\n`survey_survey` WHERE `survey_survey`.`id` = 1  (0.001 seconds)\n\n-->\n\n```", "```py\ndef survey_thanks(request, pk): \n    survey = get_object_or_404(Survey, pk=pk) \n    return render_to_response('survey/thanks.html', \n        {'survey': survey }, \n        RequestContext(request)) \n```", "```py\n    if request.method == 'POST': \n        chosen_answers = [] \n        for qf in qforms: \n            if not qf.is_valid(): \n                break; \n            chosen_answers.append(qf.cleaned_data['answer']) \n        else: \n            for answer in chosen_answers: \n                answer.votes += 1 \n                answer.save() \n           return HttpResponseRedirect(reverse('survey_thanks', args=(survey.pk,))) \n```", "```py\n                answer.save(force_update=True) \n```", "```py\ndef display_active_survey(request, survey): \n    print 'display_active_survey called for a %s of survey '\\'with pk %s' % (request.method, survey.pk) \n```", "```py\nDjango version 1.1.1, using settings 'marketr.settings' \nDevelopment server is running at http://0.0.0.0:8000/ \nQuit the server with CONTROL-C. \ndisplay_active_survey called for a GET of survey with pk 1 \n[04/Nov/2009 19:14:10] \"GET /1/ HTTP/1.1\" 200 2197 \n\n```", "```py\nimport logging \ndef display_active_survey(request, survey): \n    logging.debug('display_active_survey called for a %s of ''survey with pk %s', request.method, survey.pk) \n```", "```py\nimport logging\nif DEBUG: \n    logging.basicConfig(level=logging.DEBUG)\n```", "```py\nDjango version 1.1.1, using settings 'marketr.settings' \nDevelopment server is running at http://0.0.0.0:8000/ \nQuit the server with CONTROL-C. \nDEBUG:root:display_active_survey called for a GET of survey with pk 1 \n[04/Nov/2009 19:24:14] \"GET /1/ HTTP/1.1\" 200 2197 \n\n```", "```py\nimport logging \n\nclass LoggingDecorator(object): \n    def __init__(self, f): \n        self.f = f \n\nclass log_call(LoggingDecorator): \n    def __call__(self, *args, **kwargs): \n       f = self.f \n       logging.debug(\"%s called\", f.__name__) \n       rv = f(*args, **kwargs) \n       logging.debug(\"%s returned type %s\", f.__name__, type(rv)) \n       return rv \n```", "```py\nclass log_view(LoggingDecorator): \n    def __call__(self, *args, **kwargs): \n        f = self.f \n        logging.debug(\"%s called with method %s, kwargs %s\", \n            f.__name__, args[0].method, kwargs) \n        rv = f(*args, **kwargs) \n        logging.debug(\"%s returned type %s\", f.__name__, type(rv)) \n        return rv \n```", "```py\nfrom gen_utils.logutils import log_view, log_call \n```", "```py\n@log_view \ndef home(request): \n```", "```py\n@log_call \ndef display_active_survey(request, survey): \n```", "```py\nDEBUG:root:home called with method GET, kwargs {} \nDEBUG:root:home returned type <class 'django.http.HttpResponse'> \n[05/Nov/2009 10:46:48] \"GET / HTTP/1.1\" 200 1184 \n\n```", "```py\nDEBUG:root:survey_detail called with method GET, kwargs {'pk': u'1'} \nDEBUG:root:display_active_survey called \nDEBUG:root:display_active_survey returned type <class 'django.http.\nHttpResponse'> \nDEBUG:root:survey_detail returned type <class 'django.http.HttpResponse'> \n[05/Nov/2009 10:46:49] \"GET /1/ HTTP/1.1\" 200 2197 \n\n```", "```py\nDEBUG:root:survey_detail called with method POST, kwargs {'pk': u'1'} \nDEBUG:root:display_active_survey called \nDEBUG:root:display_active_survey returned type <class 'django.http.HttpResponse'> \nDEBUG:root:survey_detail returned type <class 'django.http.HttpResponse'> \n[05/Nov/2009 10:46:52] \"POST /1/ HTTP/1.1\" 200 2466 \n\n```", "```py\nDEBUG:root:survey_detail called with method POST, kwargs {'pk': u'1'} \nDEBUG:root:display_active_survey called \nDEBUG:root:display_active_survey returned type <class 'django.http.HttpResponseRedirect'> \nDEBUG:root:survey_detail returned type <class 'django.http.HttpResponseRedirect'> \n[05/Nov/2009 10:46:56] \"POST /1/ HTTP/1.1\" 302 0 \n\n```", "```py\nDEBUG:root:survey_thanks called with method GET, kwargs {'pk': u'1'} \nDEBUG:root:survey_thanks returned type <class 'django.http.HttpResponse'> \n[05/Nov/2009 10:46:56] \"GET /thanks/1/ HTTP/1.1\" 200 544 \n\n```", "```py\n        for qf in qforms: \n            if not qf.is_valid(): \n                logging.debug(\"form failed validation: %r\", qf.errors) \n                break; \n```"]