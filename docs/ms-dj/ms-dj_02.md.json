["```py\nfrom django.http import HttpResponse \n\ndef hello(request): \n    return HttpResponse(\"Hello world\") \n\n```", "```py\n\"\"\"mysite URL Configuration \n The urlpatterns list routes URLs to views. For more information please \n see:\n     https://docs.djangoproject.com/en/1.8/topics/http/urls/ \nExamples:\nFunction views\n     1\\. Add an import:  from my_app import views\n     2\\. Add a URL to urlpatterns:  url(r'^$', views.home, name='home') Class-based views\n     1\\. Add an import:  from other_app.views import Home\n     2\\. Add a URL to urlpatterns:  url(r'^$', Home.as_view(), name='home')\nIncluding another URLconf\n     1\\. Add an import:  from blog import urls as blog_urls\n     2\\. Add a URL to urlpatterns:  url(r'^blog/', include(blog_urls)) \n\"\"\" \nfrom django.conf.urls import include, url\nfrom django.contrib import admin\n\n urlpatterns = [\n     url(r'^admin/', include(admin.site.urls)),\n ] \n\n```", "```py\nfrom django.conf.urls import include, url\nfrom django.contrib import admin \n\nurlpatterns = [\n     url(r'^admin/', include(admin.site.urls)),\n ] \n\n```", "```py\nfrom django.conf.urls import include, url \nfrom django.contrib import admin \nfrom mysite.views import hello \n\nurlpatterns = [\n     url(r'^admin/', include(admin.site.urls)),\n     url(r'^hello/$', hello), \n] \n\n```", "```py\nfrom mysite.views import hello, my_homepage_view\n\n urlpatterns = [\n     url(r'^$', my_homepage_view),\n     # ... \n\n```", "```py\nROOT_URLCONF = 'mysite.urls'\n```", "```py\n>>> import datetime \n>>> now = datetime.datetime.now() \n>>> now \ndatetime.datetime(2015, 7, 15, 18, 12, 39, 2731) \n>>> print (now) \n2015-07-15 18:12:39.002731 \n\n```", "```py\nfrom django.http import HttpResponse \nimport datetime \n\ndef hello(request):\n     return HttpResponse(\"Hello world\") \n\ndef current_datetime(request):\n     now = datetime.datetime.now()\n     html = \"<html><body>It is now %s.</body></html>\" % now\n     return HttpResponse(html) \n\n```", "```py\nfrom django.conf.urls import include, url \nfrom django.contrib import admin \nfrom mysite.views import hello, current_datetime\n\n     urlpatterns = [\n         url(r'^admin/', include(admin.site.urls)),\n         url(r'^hello/$', hello),\n         url(r'^time/$', current_datetime),\n     ] \n\n```", "```py\nurlpatterns = [\n       url(r'^admin/', include(admin.site.urls)),\n       url(r'^hello/$', hello),\n       url(r'^time/$', current_datetime),\n       url(r'^another-time-page/$', current_datetime),\n ] \n\n```", "```py\nurlpatterns = [\n     url(r'^time/$', current_datetime),\n     url(r'^time/plus/1/$', one_hour_ahead),\n     url(r'^time/plus/2/$', two_hours_ahead),\n     url(r'^time/plus/3/$', three_hours_ahead),\n] \n\n```", "```py\nurlpatterns = [\n     # ...\n     url(r'^time/plus/\\d+/$', hours_ahead),\n     # ... \n] \n\n```", "```py\nurl(r'^time/plus/\\d{1,2}/$', hours_ahead), \n\n```", "```py\nurl(r'^time/plus/(\\d{1,2})/$', hours_ahead), \n\n```", "```py\nfrom django.conf.urls import include, url from django.contrib import admin from mysite.views import hello, current_datetime, hours_ahead \n\nurlpatterns = [\n     url(r'^admin/', include(admin.site.urls)),\n     url(r'^hello/$', hello),\n     url(r'^time/$', current_datetime),\n     url(r'^time/plus/(\\d{1,2})/$', hours_ahead),\n ] \n\n```", "```py\nfrom django.http import Http404, HttpResponse \nimport datetime \n\ndef hours_ahead(request, offset):\n     try:\n         offset = int(offset)\n     except ValueError:\n         raise Http404()\n     dt = datetime.datetime.now() + datetime.timedelta(hours=offset)\n     html = \"<html><body>In %s hour(s), it will be  %s.\n             </body></html>\" % (offset, dt)\n     return HttpResponse(html) \n\n```", "```py\ndef hours_ahead(request, offset):\n     # try:\n #     offset = int(offset)\n # except ValueError:\n #     raise Http404()\n     dt = datetime.datetime.now() + datetime.timedelta(hours=offset)\n     html = \"<html><body>In %s hour(s), it will be %s.\n               </body></html>\" % (offset, dt)\n     return HttpResponse(html) \n\n```", "```py\ndef hours_ahead(request, offset):\n     try:\n         offset = int(offset)\n     except ValueError:\n         raise Http404()\n     dt = datetime.datetime.now() + datetime.timedelta(hours=offset)\n     assert False\n     html = \"<html><body>In %s hour(s), it will be %s.\n              </body></html>\" % (offset, dt)\n     return HttpResponse(html) \n\n```"]