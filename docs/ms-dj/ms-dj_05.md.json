["```py\npython manage.py createsuperuser\n\n```", "```py\nUsername: admin\n\n```", "```py\nEmail address: admin@example.com\n\n```", "```py\nPassword: **********\nPassword (again): *********\nSuperuser created successfully.\n\n```", "```py\npython manage.py runserver\n\n```", "```py\nfrom django.contrib import admin \nfrom .models import Publisher, Author, Book \n\nadmin.site.register(Publisher) \nadmin.site.register(Author) \nadmin.site.register(Book) \n\n```", "```py\nclass Book(models.Model): \n    title = models.CharField(max_length=100) \n    authors = models.ManyToManyField(Author) \n    publisher = models.ForeignKey(Publisher) \n    publication_date = models.DateField() \n\n    def __str__(self): \n        return self.title \n\n```", "```py\nclass Author(models.Model): \n    first_name = models.CharField(max_length=30) \n    last_name = models.CharField(max_length=40) \n    email = models.EmailField(blank=True)\n\n```", "```py\nCREATE TABLE \"books_author\" ( \n    \"id\" serial NOT NULL PRIMARY KEY, \n    \"first_name\" varchar(30) NOT NULL, \n    \"last_name\" varchar(40) NOT NULL, \n    \"email\" varchar(75) NOT NULL \n); \n\n```", "```py\nclass Book(models.Model): \n    title = models.CharField(max_length=100) \n    authors = models.ManyToManyField(Author) \n    publisher = models.ForeignKey(Publisher) \n    publication_date = models.DateField(blank=True, null=True)\n\n```", "```py\nclass Author(models.Model): \n    first_name = models.CharField(max_length=30) \n    last_name = models.CharField(max_length=40) \n email = models.EmailField(blank=True, verbose_name ='e-mail')\n\n```", "```py\nclass Author(models.Model): \n    first_name = models.CharField(max_length=30) \n    last_name = models.CharField(max_length=40) \n    email = models.EmailField(blank=True, verbose_name ='e-mail') \n\n    def __str__(self): \n        return u'%s %s' % (self.first_name, self.last_name) \n\n```", "```py\nfrom django.contrib import admin \nfrom mysite.books.models import Publisher, Author, Book \n\nclass AuthorAdmin(admin.ModelAdmin):\n list_display = ('first_name', 'last_name', 'email') \n\nadmin.site.register(Publisher) \nadmin.site.register(Author, AuthorAdmin) \nadmin.site.register(Book) \n\n```", "```py\nclass AuthorAdmin(admin.ModelAdmin): \n    list_display = ('first_name', 'last_name', 'email') \n search_fields = ('first_name', 'last_name')\n\n```", "```py\nfrom django.contrib import admin \nfrom mysite.books.models import Publisher, Author, Book \n\nclass AuthorAdmin(admin.ModelAdmin): \n    list_display = ('first_name', 'last_name', 'email') \n    search_fields = ('first_name', 'last_name') \n\nclass BookAdmin(admin.ModelAdmin):\n list_display = ('title', 'publisher', 'publication_date')\n list_filter = ('publication_date',) \n\nadmin.site.register(Publisher) \nadmin.site.register(Author, AuthorAdmin) \nadmin.site.register(Book, BookAdmin)\n\n```", "```py\nclass BookAdmin(admin.ModelAdmin): \n    list_display = ('title', 'publisher','publication_date') \n    list_filter = ('publication_date',) \n date_hierarchy = 'publication_date'\n\n```", "```py\nclass BookAdmin(admin.ModelAdmin): \n    list_display = ('title', 'publisher','publication_date') \n    list_filter = ('publication_date',) \n    date_hierarchy = 'publication_date' \n ordering = ('-publication_date',)\n\n```", "```py\nclass BookAdmin(admin.ModelAdmin): \n    list_display = ('title', 'publisher', 'publication_date') \n    list_filter = ('publication_date',) \n    date_hierarchy = 'publication_date' \n    ordering = ('-publication_date',) \n fields = ('title', 'authors', 'publisher', publication_date')\n\n```", "```py\nclass BookAdmin(admin.ModelAdmin): \n    list_display = ('title', 'publisher','publication_date') \n    list_filter = ('publication_date',) \n    date_hierarchy = 'publication_date' \n    ordering = ('-publication_date',) \n fields = ('title', 'authors', 'publisher')\n\n```", "```py\nclass BookAdmin(admin.ModelAdmin): \n    list_display = ('title', 'publisher','publication_date') \n    list_filter = ('publication_date',) \n    date_hierarchy = 'publication_date' \n    ordering = ('-publication_date',) \n filter_horizontal = ('authors',)\n\n```", "```py\nclass BookAdmin(admin.ModelAdmin): \n    list_display = ('title', 'publisher','publication_date') \n    list_filter = ('publication_date',) \n    date_hierarchy = 'publication_date' \n    ordering = ('-publication_date',) \n    filter_horizontal = ('authors',) \n raw_id_fields = ('publisher',)\n\n```"]