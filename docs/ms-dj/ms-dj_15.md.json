["```py\n>>> # initial assignment \n>>> request.session[0] = 'bar' \n>>> # subsequent requests following serialization & deserialization \n>>> # of session data \n>>> request.session[0]  # KeyError \n>>> request.session['0'] \n'bar' \n\n```", "```py\ndef login(request): \n    if request.method == 'POST': \n        if request.session.test_cookie_worked(): \n            request.session.delete_test_cookie() \n            return HttpResponse(\"You're logged in.\") \n        else: \n            return HttpResponse(\"Please enable cookies and try again.\") \n    request.session.set_test_cookie() \n    return render_to_response('foo/login_form.html') \n\n```", "```py\n>>> from importlib import import_module \n>>> from django.conf import settings \n>>> SessionStore = import_module(settings.SESSION_ENGINE).SessionStore \n\n```", "```py\n>>> from django.contrib.sessions.backends.db import SessionStore \n>>> s = SessionStore() \n>>> # stored as seconds since epoch since datetimes are not serializable in JSON. \n>>> s['last_login'] = 1376587691 \n>>> s.save() \n>>> s.session_key \n'2b1189a188b44ad18c35e113ac6ceead' \n\n>>> s = SessionStore(session_key='2b1189a188b44ad18c35e113ac6ceead') \n>>> s['last_login'] \n1376587691 \n\n```", "```py\n>>> from django.contrib.sessions.backends.db import SessionStore \n>>> s = SessionStore(session_key='no-such-session-here') \n>>> s.save() \n>>> s.session_key \n'ff882814010ccbc3c870523934fee5a2' \n\n```", "```py\n>>> from django.contrib.sessions.models import Session \n>>> s = Session.objects.get(pk='2b1189a188b44ad18c35e113ac6ceead') \n>>> s.expire_date \ndatetime.datetime(2005, 8, 20, 13, 35, 12) \nNote that you'll need to call get_decoded() to get the session dictionary. This is necessary because the dictionary is stored in an encoded format: \n>>> s.session_data \n'KGRwMQpTJ19hdXRoX3VzZXJfaWQnCnAyCkkxCnMuMTExY2ZjODI2Yj...' \n>>> s.get_decoded() \n{'user_id': 42} \n\n```", "```py\n# Session is modified. \nrequest.session['foo'] = 'bar' \n\n# Session is modified. \ndel request.session['foo'] \n\n# Session is modified. \nrequest.session['foo'] = {} \n\n# Gotcha: Session is NOT modified, because this alters \n# request.session['foo'] instead of request.session. \nrequest.session['foo']['bar'] = 'baz' \n\n```", "```py\nrequest.session.modified = True \n\n```"]