["```py\nfrom django.http import HttpResponse \n\ndef hello(request): \n    return HttpResponse(\"Hello world\") \n\n```", "```py\n# BAD! \ndef current_url_view_bad(request): \n    return HttpResponse(\"Welcome to the page at /current/\") \n\n# GOOD \ndef current_url_view_good(request): \n    return HttpResponse(\"Welcome to the page at %s\" % request.path) \n\n```", "```py\n# BAD! \ndef ua_display_bad(request): \n    ua = request.META['HTTP_USER_AGENT']  # Might raise KeyError! \n    return HttpResponse(\"Your browser is %s\" % ua) \n\n# GOOD (VERSION 1) \ndef ua_display_good1(request): \n    try: \n        ua = request.META['HTTP_USER_AGENT'] \n    except KeyError: \n        ua = 'unknown' \n    return HttpResponse(\"Your browser is %s\" % ua) \n\n# GOOD (VERSION 2) \ndef ua_display_good2(request): \n    ua = request.META.get('HTTP_USER_AGENT', 'unknown') \n    return HttpResponse(\"Your browser is %s\" % ua) \n\n```", "```py\ndef display_meta(request): \n    values = request.META.items() \n    values.sort() \n    html = [] \n    for k, v in values: \n      html.append('<tr><td>%s</td><td>%s</td></tr>' % (k, v)) \n    return HttpResponse('<table>%s</table>' % '\\n'.join(html)) \n\n```", "```py\n\nfrom django.shortcuts import render \n\ndef search_form(request): \n    return render(request, 'search_form.html') \n\n```", "```py\n<html> \n<head> \n    <title>Search</title> \n</head> \n<body> \n    <form action=\"/search/\" method=\"get\"> \n        <input type=\"text\" name=\"q\"> \n        <input type=\"submit\" value=\"Search\"> \n    </form> \n</body> \n</html> \n\n```", "```py\nfrom books import views \n\nurlpatterns = [ \n    # ... \n    url(r'^search-form/$', views.search_form), \n    # ... \n] \n\n```", "```py\n# urls.py \n\nurlpatterns = [ \n    # ... \n    url(r'^search-form/$', views.search_form), \n    url(r'^search/$', views.search), \n    # ... \n] \n\n# books/views.py \n\nfrom django.http import HttpResponse \n\n# ... \n\ndef search(request): \n    if 'q' in request.GET: \n        message = 'You searched for: %r' % request.GET['q'] \n    else: \n        message = 'You submitted an empty form.' \n    return HttpResponse(message) \n\n```", "```py\n# BAD! \ndef bad_search(request): \n    # The following line will raise KeyError if 'q' hasn't \n    # been submitted! \n    message = 'You searched for: %r' % request.GET['q'] \n    return HttpResponse(message) \n\n```", "```py\nfrom django.http import HttpResponse \nfrom django.shortcuts import render \nfrom books.models import Book \n\ndef search(request): \n    if 'q' in request.GET and request.GET['q']: \n        q = request.GET['q'] \n        books = Book.objects.filter(title__icontains=q) \n        return render(request, 'search_results.html', \n                      {'books': books, 'query': q}) \n    else: \n        return HttpResponse('Please submit a search term.') \n\n```", "```py\n         <html> \n          <head> \n              <title>Book Search</title> \n          </head> \n          <body> \n            <p>You searched for: <strong>{{ query }}</strong></p> \n\n            {% if books %} \n                <p>Found {{ books|length }}\n                    book{{ books|pluralize }}.</p> \n                <ul> \n                    {% for book in books %} \n                    <li>{{ book.title }}</li> \n                    {% endfor %} \n                </ul> \n            {% else %} \n                <p>No books matched your search criteria.</p> \n            {% endif %} \n\n          </body> \n        </html> \n\n```", "```py\nfrom django.http import HttpResponse \nfrom django.shortcuts import render \nfrom books.models import Book \n\ndef search_form(request): \n    return render(request, 'search_form.html') \n\ndef search(request): \n    if 'q' in request.GET and request.GET['q']: \n        q = request.GET['q'] \n        books = Book.objects.filter(title__icontains=q) \n        return render(request, 'search_results.html', \n                      {'books': books, 'query': q}) \n    else: \n return render\n           (request, 'search_form.html', {'error': True})\n\n```", "```py\n<html> \n<head> \n    <title>Search</title> \n</head> \n<body> \n {% if error %} \n <p style=\"color: red;\">Please submit a search term.</p> \n {% endif %} \n    <form action=\"/search/\" method=\"get\"> \n        <input type=\"text\" name=\"q\"> \n        <input type=\"submit\" value=\"Search\"> \n    </form> \n</body> \n</html> \n\n```", "```py\ndef search(request): \n    error = False \n    if 'q' in request.GET: \n        q = request.GET['q'] \nif not q: \n error = True \n else: \n            books = Book.objects.filter(title__icontains=q) \n            return render(request, 'search_results.html', \n                          {'books': books, 'query': q}) \n return render(request, 'search_form.html', \n {'error': error})\n\n```", "```py\n<form action=\"/search/\" method=\"get\"> \n\n```", "```py\n<form action=\"\" method=\"get\"> \n\n```", "```py\ndef search(request): \n    error = False \n    if 'q' in request.GET: \n        q = request.GET['q'] \n        if not q: \n            error = True \n elif len(q) > 20: \n error = True \n        else: \n            books = Book.objects.filter(title__icontains=q) \n            return render(request, 'search_results.html', \n                          {'books': books, 'query': q}) \n    return render(request, 'search_form.html', \n        {'error': error}) \n\n```", "```py\n<html> \n<head> \n    <title>Search</title> \n</head> \n<body> \n    {% if error %} \n <p style=\"color: red;\"> \n Please submit a search term 20 characters or shorter. \n </p> \n    {% endif %} \n\n    <form action=\"/search/\" method=\"get\"> \n        <input type=\"text\" name=\"q\"> \n        <input type=\"submit\" value=\"Search\"> \n    </form> \n</body> \n</html> \n\n```", "```py\ndef search(request): \n    errors = [] \n    if 'q' in request.GET: \n        q = request.GET['q'] \n        if not q: \n errors.append('Enter a search term.') \n        elif len(q) > 20: \n errors.append('Please enter at most 20 characters.') \n        else: \n            books = Book.objects.filter(title__icontains=q) \n            return render(request, 'search_results.html', \n                          {'books': books, 'query': q}) \n    return render(request, 'search_form.html', \n                  {'errors': errors}) \n\n```", "```py\n<html> \n<head> \n    <title>Search</title> \n</head> \n<body> \n    {% if errors %} \n <ul> \n {% for error in errors %} \n <li>{{ error }}</li> \n {% endfor %} \n </ul> \n    {% endif %} \n    <form action=\"/search/\" method=\"get\"> \n        <input type=\"text\" name=\"q\"> \n        <input type=\"submit\" value=\"Search\"> \n    </form> \n</body> \n</html> \n\n```", "```py\nfrom django import forms \n\nclass ContactForm(forms.Form): \n    subject = forms.CharField() \n    email = forms.EmailField(required=False) \n    message = forms.CharField() \n\n```", "```py\n>>> from mysite.forms import ContactForm \n>>> f = ContactForm() \n>>> print(f) \n<tr><th><label for=\"id_subject\">Subject:</label></th><td><input type=\"text\" name=\"subject\" id=\"id_subject\" /></td></tr> \n<tr><th><label for=\"id_email\">Email:</label></th><td><input type=\"text\" name=\"email\" id=\"id_email\" /></td></tr> \n<tr><th><label for=\"id_message\">Message:</label></th><td><input type=\"text\" name=\"message\" id=\"id_message\" /></td></tr> \n\n```", "```py\n>>> print(f.as_ul()) \n<li><label for=\"id_subject\">Subject:</label> <input type=\"text\" name=\"subject\" id=\"id_subject\" /></li> \n<li><label for=\"id_email\">Email:</label> <input type=\"text\" name=\"email\" id=\"id_email\" /></li> \n<li><label for=\"id_message\">Message:</label> <input type=\"text\" name=\"message\" id=\"id_message\" /></li> \n\n>>> print(f.as_p()) \n<p><label for=\"id_subject\">Subject:</label> <input type=\"text\" name=\"subject\" id=\"id_subject\" /></p> \n<p><label for=\"id_email\">Email:</label> <input type=\"text\" name=\"email\" id=\"id_email\" /></p> \n<p><label for=\"id_message\">Message:</label> <input type=\"text\" name=\"message\" id=\"id_message\" /></p> \n\n```", "```py\n>>> print(f['subject']) \n<input id=\"id_subject\" name=\"subject\" type=\"text\" /> \n>>> print f['message'] \n<input id=\"id_message\" name=\"message\" type=\"text\" /> \n\n```", "```py\n>>> f = ContactForm({'subject': 'Hello', 'email': 'adrian@example.com', 'message': 'Nice site!'}) \n\n```", "```py\n>>> f.is_bound \nTrue \n\n```", "```py\n>>> f.is_valid() \nTrue \n\n```", "```py\n>>> f = ContactForm({'subject': 'Hello', 'message': 'Nice site!'}) \n>>> f.is_valid() \nTrue \n\n```", "```py\n>>> f = ContactForm({'subject': 'Hello'}) \n>>> f.is_valid() \nFalse \n>>> f = ContactForm({'subject': 'Hello', 'message': ''}) \n>>> f.is_valid() \nFalse \n\n```", "```py\n>>> f = ContactForm({'subject': 'Hello', 'message': ''}) \n>>> f['message'].errors \n['This field is required.'] \n>>> f['subject'].errors \n[] \n>>> f['email'].errors \n[] \n\n```", "```py\n>>> f = ContactForm({'subject': 'Hello', 'message': ''}) \n>>> f.errors \n{'message': ['This field is required.']} \n\n```", "```py\n>>> f = ContactForm({'subject': 'Hello', 'email': 'adrian@example.com', \n'message': 'Nice site!'}) \n>>> f.is_valid() True \n>>> f.cleaned_data \n{'message': 'Nice site!', 'email': 'adrian@example.com', 'subject': \n'Hello'} \n\n```", "```py\n# views.py \n\nfrom django.shortcuts import render \nfrom mysite.forms import ContactForm \nfrom django.http import HttpResponseRedirect \nfrom django.core.mail import send_mail \n\n# ... \n\ndef contact(request): \n    if request.method == 'POST': \n        form = ContactForm(request.POST) \n        if form.is_valid(): \n            cd = form.cleaned_data \n            send_mail( \n                cd['subject'], \n                cd['message'], \n                cd.get('email', 'noreply@example.com'), \n                ['siteowner@example.com'], \n            ) \n            return HttpResponseRedirect('/contact/thanks/') \n    else: \n        form = ContactForm() \n    return render(request, 'contact_form.html', {'form': form}) \n\n```", "```py\n# contact_form.html \n\n<html> \n<head> \n    <title>Contact us</title> \n</head> \n<body> \n    <h1>Contact us</h1> \n\n    {% if form.errors %} \n        <p style=\"color: red;\"> \n            Please correct the error{{ form.errors|pluralize }} below. \n        </p> \n    {% endif %} \n\n    <form action=\"\" method=\"post\"> \n        <table> \n            {{ form.as_table }} \n        </table> \n        {% csrf_token %} \n        <input type=\"submit\" value=\"Submit\"> \n    </form> \n</body> \n</html> \n\n```", "```py\n # ... \nfrom mysite.views import hello, current_datetime, hours_ahead, contact \n\n urlpatterns = [ \n\n     # ... \n\n     url(r'^contact/$', contact), \n] \n\n```", "```py\nfrom django import forms \n\nclass ContactForm(forms.Form): \n    subject = forms.CharField() \n    email = forms.EmailField(required=False) \n    message = forms.CharField(widget=forms.Textarea)\n\n```", "```py\nfrom django import forms \n\nclass ContactForm(forms.Form): \n    subject = forms.CharField(max_length=100) \n    email = forms.EmailField(required=False) \n    message = forms.CharField(widget=forms.Textarea) \n\n```", "```py\ndef contact(request): \n    if request.method == 'POST': \n        form = ContactForm(request.POST) \n        if form.is_valid(): \n            cd = form.cleaned_data \n            send_mail( \n                cd['subject'], \n                cd['message'], \n                cd.get('email', ['noreply@example.com](mailto:'noreply%40example.com)'), \n[['siteowner@example.com](mailto:'siteowner%40example.com)'], \n            ) \n            return HttpResponseRedirect('/contact/thanks/') \n    else: \n        form = ContactForm( \n            initial={'subject': 'I love your site!'} \n        ) \n    return render(request, 'contact_form.html', {'form':form}) \n\n```", "```py\nfrom django import forms \n\nclass ContactForm(forms.Form): \n    subject = forms.CharField(max_length=100) \n    email = forms.EmailField(required=False) \n    message = forms.CharField(widget=forms.Textarea) \n\n    def clean_message(self): \n message = self.cleaned_data['message'] \n num_words = len(message.split()) \n if num_words < 4: \n raise forms.ValidationError(\"Not enough words!\") \n return message\n\n```", "```py\nclass ContactForm(forms.Form): \n    subject = forms.CharField(max_length=100) \n email = forms.EmailField(required=False,\n        label='Your e-mail address') \n    message = forms.CharField(widget=forms.Textarea)\n```", "```py\n<style type=\"text/css\"> \n    ul.errorlist { \n        margin: 0; \n        padding: 0; \n    } \n    .errorlist li { \n        background-color: red; \n        color: white; \n        display: block; \n        font-size: 10px; \n        margin: 0 0 3px; \n        padding: 4px 5px; \n    } \n</style> \n\n```", "```py\n<html> \n<head> \n    <title>Contact us</title> \n</head> \n<body> \n    <h1>Contact us</h1> \n\n    {% if form.errors %} \n        <p style=\"color: red;\"> \n            Please correct the error{{ form.errors|pluralize }} below. \n        </p> \n    {% endif %} \n\n    <form action=\"\" method=\"post\"> \n        <div class=\"field\"> \n            {{ form.subject.errors }} \n            <label for=\"id_subject\">Subject:</label> \n            {{ form.subject }} \n        </div> \n        <div class=\"field\"> \n            {{ form.email.errors }} \n            <label for=\"id_email\">Your e-mail address:</label> \n            {{ form.email }} \n        </div> \n        <div class=\"field\"> \n            {{ form.message.errors }} \n            <label for=\"id_message\">Message:</label> \n            {{ form.message }} \n        </div> \n        {% csrf_token %} \n        <input type=\"submit\" value=\"Submit\"> \n    </form> \n</body> \n</html> \n\n```", "```py\n<div class=\"field{% if form.message.errors %} errors{% endif %}\"> \n    {% if form.message.errors %} \n        <ul> \n        {% for error in form.message.errors %} \n            <li><strong>{{ error }}</strong></li> \n        {% endfor %} \n        </ul> \n    {% endif %} \n    <label for=\"id_message\">Message:</label> \n    {{ form.message }} \n</div> \n\n```"]