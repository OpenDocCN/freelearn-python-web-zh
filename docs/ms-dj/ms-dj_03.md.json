["```py\ndef current_datetime(request): \n    now = datetime.datetime.now() \n    html = \"It is now %s.\" % now \n    return HttpResponse(html) \n\n```", "```py\n<html> \n<head><title>Ordering notice</title></head> \n<body> \n\n<h1>Ordering notice</h1> \n\n<p>Dear {{ person_name }},</p> \n\n<p>Thanks for placing an order from {{ company }}. It's scheduled to ship on {{ ship_date|date:\"F j, Y\" }}.</p> \n<p>Here are the items you've ordered:</p> \n<ul> \n{% for item in item_list %}<li>{{ item }}</li>{% endfor %} \n</ul> \n\n{% if ordered_warranty %} \n    <p>Your warranty information will be included in the packaging.</p> \n{% else %} \n    <p>You didn't order a warranty, so you're on your own when \n    the products inevitably stop working.</p> \n{% endif %} \n\n<p>Sincerely,<br />{{ company }}</p> \n\n</body> \n</html> \n\n```", "```py\n>>> from django import template \n>>> t = template.Template('My name is {{ name }}.') \n>>> c = template.Context({'name': 'Nige'}) \n>>> print (t.render(c)) \nMy name is Nige. \n>>> c = template.Context({'name': 'Barry'}) \n>>> print (t.render(c)) \nMy name is Barry. \n\n```", "```py\n>>> from django.template import Template \n>>> t = Template('My name is {{ name }}.') \n>>> print (t) \n\n```", "```py\n<django.template.base.Template object at 0x030396B0> \n\n```", "```py\n>>> from django.template import Template \n>>> t = Template('{% notatag %}') \nTraceback (most recent call last): \n  File \"\", line 1, in ? \n  ... \ndjango.template.base.TemplateSyntaxError: Invalid block tag: 'notatag' \n\n```", "```py\n>>> from django.template import Context, Template \n>>> t = Template('My name is {{ name }}.') \n>>> c = Context({'name': 'Stephane'}) \n>>> t.render(c) \n'My name is Stephane.' \n\n```", "```py\n>>> from django.template import Template, Context \n>>> raw_template = \"\"\"<p>Dear {{ person_name }},</p> \n... \n... <p>Thanks for placing an order from {{ company }}. It's scheduled to \n... ship on {{ ship_date|date:\"F j, Y\" }}.</p> \n... \n... {% if ordered_warranty %} \n... <p>Your warranty information will be included in the packaging.</p> \n... {% else %} \n... <p>You didn't order a warranty, so you're on your own when \n... the products inevitably stop working.</p> \n... {% endif %} \n... \n... <p>Sincerely,<br />{{ company }}</p>\"\"\" \n>>> t = Template(raw_template) \n>>> import datetime \n>>> c = Context({'person_name': 'John Smith', \n...     'company': 'Outdoor Equipment', \n...     'ship_date': datetime.date(2015, 7, 2), \n...     'ordered_warranty': False}) \n>>> t.render(c) \nu\"<p>Dear John Smith,</p>\\n\\n<p>Thanks for placing an order from Outdoor \nEquipment. It's scheduled to\\nship on July 2, 2015.</p>\\n\\n\\n<p>You \ndidn't order a warranty, so you're on your own when\\nthe products \ninevitably stop working.</p>\\n\\n\\n<p>Sincerely,<br />Outdoor Equipment \n</p>\" \n\n```", "```py\n>>> from django.template import Template, Context \n>>> t = Template('Hello, {{ name }}') \n>>> print (t.render(Context({'name': 'John'}))) \nHello, John \n>>> print (t.render(Context({'name': 'Julie'}))) \nHello, Julie \n>>> print (t.render(Context({'name': 'Pat'}))) \nHello, Pat \n\n```", "```py\n# Bad \nfor name in ('John', 'Julie', 'Pat'): \n    t = Template('Hello, {{ name }}') \n    print (t.render(Context({'name': name}))) \n\n# Good \nt = Template('Hello, {{ name }}') \nfor name in ('John', 'Julie', 'Pat'): \n    print (t.render(Context({'name': name}))) \n\n```", "```py\n>>> from django.template import Template, Context \n>>> person = {'name': 'Sally', 'age': '43'} \n>>> t = Template('{{ person.name }} is {{ person.age }} years old.') \n>>> c = Context({'person': person}) \n>>> t.render(c) \n'Sally is 43 years old.' \n\n```", "```py\n>>> from django.template import Template, Context \n>>> import datetime \n>>> d = datetime.date(1993, 5, 2) \n>>> d.year \n1993 \n>>> d.month \n5 \n>>> d.day \n2 \n>>> t = Template('The month is {{ date.month }} and the year is {{ date.year }}.') \n>>> c = Context({'date': d}) \n>>> t.render(c) \n'The month is 5 and the year is 1993.' \n\n```", "```py\n>>> from django.template import Template, Context \n>>> class Person(object): \n...     def __init__(self, first_name, last_name): \n...         self.first_name, self.last_name = first_name, last_name \n>>> t = Template('Hello, {{ person.first_name }} {{ person.last_name }}.') \n>>> c = Context({'person': Person('John', 'Smith')}) \n>>> t.render(c) \n'Hello, John Smith.' \n\n```", "```py\n>>> from django.template import Template, Context \n>>> t = Template('{{ var }} -- {{ var.upper }} -- {{ var.isdigit }}') \n>>> t.render(Context({'var': 'hello'})) \n'hello -- HELLO -- False' \n>>> t.render(Context({'var': '123'})) \n'123 -- 123 -- True' \n\n```", "```py\n>>> from django.template import Template, Context \n>>> t = Template('Item 2 is {{ items.2 }}.') \n>>> c = Context({'items': ['apples', 'bananas', 'carrots']}) \n>>> t.render(c) \n'Item 2 is carrots.' \n\n```", "```py\n>>> from django.template import Template, Context \n>>> person = {'name': 'Sally', 'age': '43'} \n>>> t = Template('{{ person.name.upper }} is {{ person.age }} years old.') \n>>> c = Context({'person': person}) \n>>> t.render(c) \n'SALLY is 43 years old.' \n\n```", "```py\n        >>> t = Template(\"My name is {{ person.first_name }}.\") \n        >>> class PersonClass3: \n        ...     def first_name(self): \n        ...         raise AssertionError(\"foo\") \n        >>> p = PersonClass3() \n        >>> t.render(Context({\"person\": p})) \n        Traceback (most recent call last): \n        ... \n        AssertionError: foo \n\n        >>> class SilentAssertionError(Exception): \n        ...     silent_variable_failure = True \n        >>> class PersonClass4: \n        ...     def first_name(self): \n        ...         raise SilentAssertionError \n        >>> p = PersonClass4() \n        >>> t.render(Context({\"person\": p})) \n        'My name is .' \n\n```", "```py\n        def delete(self): \n        # Delete the account \n        delete.alters_data = True \n\n```", "```py\n>>> from django.template import Template, Context \n>>> t = Template('Your name is {{ name }}.') \n>>> t.render(Context()) \n'Your name is .' \n>>> t.render(Context({'var': 'hello'})) \n'Your name is .' \n>>> t.render(Context({'NAME': 'hello'})) \n'Your name is .' \n>>> t.render(Context({'Name': 'hello'})) \n'Your name is .' \n\n```", "```py\n{% if today_is_weekend %} \n    <p>Welcome to the weekend!</p> \n{% endif %} \n\n```", "```py\n{% if today_is_weekend %} \n    <p>Welcome to the weekend!</p> \n{% else %} \n    <p>Get back to work.</p> \n{% endif %} \n\n```", "```py\n{% if athlete_list %} \n    Number of athletes: {{ athlete_list|length }} \n{% elif athlete_in_locker_room_list %} \n    <p>Athletes should be out of the locker room soon! </p> \n{% elif ... \n    ... \n{% else %} \n    <p>No athletes. </p> \n{% endif %} \n\n```", "```py\n{% if athlete_list and coach_list %} \n    <p>Both athletes and coaches are available. </p> \n{% endif %} \n\n{% if not athlete_list %} \n    <p>There are no athletes. </p> \n{% endif %} \n\n{% if athlete_list or coach_list %} \n    <p>There are some athletes or some coaches. </p> \n{% endif %} \n\n{% if not athlete_list or coach_list %} \n    <p>There are no athletes or there are some coaches. </p> \n{% endif %} \n\n{% if athlete_list and not coach_list %} \n    <p>There are some athletes and absolutely no coaches. </p> \n{% endif %} \n\n```", "```py\n{% if athlete_list and coach_list or cheerleader_list %} \n\n```", "```py\nif (athlete_list and coach_list) or cheerleader_list \n\n```", "```py\n {% if athlete_list %} \n     {% if coach_list or cheerleader_list %} \n         <p>We have athletes, and either coaches or cheerleaders! </p> \n     {% endif %} \n {% endif %} \n\n```", "```py\n{% if athlete_list or coach_list or parent_list or teacher_list %} \n\n```", "```py\n<ul> \n{% for athlete in athlete_list %} \n    <li>{{ athlete.name }}</li> \n{% endfor %} \n</ul> \n\n```", "```py\n{% for athlete in athlete_list reversed %} \n... \n{% endfor %} \n\n```", "```py\n{% for athlete in athlete_list %} \n    <h1>{{ athlete.name }}</h1> \n    <ul> \n    {% for sport in athlete.sports_played %} \n        <li>{{ sport }}</li> \n    {% endfor %} \n    </ul> \n{% endfor %} \n\n```", "```py\n{% for x, y in points %} \n    <p>There is a point at {{ x }},{{ y }}</p> \n{% endfor %} \n\n```", "```py\n{% for key, value in data.items %} \n    {{ key }}: {{ value }} \n{% endfor %} \n\n```", "```py\n{% if athlete_list %} \n\n  {% for athlete in athlete_list %} \n      <p>{{ athlete.name }}</p> \n  {% endfor %} \n\n{% else %} \n    <p>There are no athletes. Only computer programmers.</p> \n{% endif %} \n\n```", "```py\n{% for athlete in athlete_list %} \n    <p>{{ athlete.name }}</p> \n{% empty %} \n    <p>There are no athletes. Only computer programmers.</p> \n{% endfor %} \n\n```", "```py\n        {% for item in todo_list %} \n            <p>{{ forloop.counter }}: {{ item }}</p> \n        {% endfor %} \n\n```", "```py\n        {% for object in objects %} \n            {% if forloop.first %}<li class=\"first\">\n{% else %}<li>{% endif %} \n            {{ object }} \n            </li> \n        {% endfor %} \n\n```", "```py\n        {% for link in links %} \n            {{ link }}{% if not forloop.last %} | {% endif %} \n        {% endfor %} \n\n```", "```py\n        Link1 | Link2 | Link3 | Link4 \n\n```", "```py\n        Favorite places: \n        {% for p in places %}{{ p }}{% if not forloop.last %}, \n          {% endif %} \n        {% endfor %} \n\n```", "```py\n        {% for country in countries %} \n            <table> \n            {% for city in country.city_list %} \n                <tr> \n                <td>Country #{{ forloop.parentloop.counter }}</td> \n                <td>City #{{ forloop.counter }}</td> \n                <td>{{ city }}</td> \n                </tr> \n            {% endfor %} \n            </table> \n        {% endfor %} \n\n```", "```py\n{% ifequal user currentuser %} \n    <h1>Welcome!</h1> \n{% endifequal %} \n\n```", "```py\n{% ifequal section 'sitenews' %} \n    <h1>Site News</h1> \n{% endifequal %} \n\n{% ifequal section \"community\" %} \n    <h1>Community</h1> \n{% endifequal %} \n\n```", "```py\n{% ifequal section 'sitenews' %} \n    <h1>Site News</h1> \n{% else %} \n    <h1>No News Here</h1> \n{% endifequal %} \n\n```", "```py\n{% ifequal variable 1 %} \n{% ifequal variable 1.23 %} \n{% ifequal variable 'foo' %} \n{% ifequal variable \"foo\" %} \n\n```", "```py\n{% ifequal variable True %} \n{% ifequal variable [1, 2, 3] %} \n{% ifequal variable {'key': 'value'} %} \n\n```", "```py\n{# This is a comment #} \n\n```", "```py\nThis is a {# this is not \na comment #} \ntest. \n\n```", "```py\n{% comment %} \nThis is a \nmulti-line comment. \n{% endcomment %} \n\n```", "```py\n {{ name|lower }} \n\n```", "```py\n {{ my_list|first|upper }} \n\n```", "```py\n {{ bio|truncatewords:\"30\" }} \n\n```", "```py\n        {{ value|addslashes }} \n\n```", "```py\n        {{ pub_date|date:\"F j, Y\" }} \n\n```", "```py\nfrom django.http import HttpResponse \nimport datetime \n\ndef current_datetime(request): \n\n    now = datetime.datetime.now() \n    html = \"<html><body>It is now %s.</body></html>\" % now \n    return HttpResponse(html) \n\n```", "```py\nfrom django.template import Template, Context \nfrom django.http import HttpResponse \nimport datetime \n\ndef current_datetime(request): \n\n    now = datetime.datetime.now() \n    t = Template(\"<html><body>It is now {{ current_date }}. \n         </body></html>\") \n    html = t.render(Context({'current_date': now})) \n    return HttpResponse(html) \n\n```", "```py\nfrom django.template import Template, Context \nfrom django.http import HttpResponse \nimport datetime \n\ndef current_datetime(request): \n\n    now = datetime.datetime.now() \n    # Simple way of using templates from the filesystem. \n    # This is BAD because it doesn't account for missing files! \n    fp = open('/home/djangouser/templates/mytemplate.html') \n    t = Template(fp.read()) \n    fp.close() \n\n    html = t.render(Context({'current_date': now})) \n    return HttpResponse(html) \n\n```", "```py\nTEMPLATES = [ \n    { \n        'BACKEND': 'django.template.backends.django.DjangoTemplates', \n        'DIRS': [], \n        'APP_DIRS': True, \n        'OPTIONS': { \n            # ... some options here ... \n        }, \n    }, \n] \n\n```", "```py\n'DIRS': [ \n           '/home/html/example.com', \n           '/home/html/default', \n       ], \n\n```", "```py\n        'DIRS': [\n        'C:/www/django/templates',\n        ]\n```", "```py\nfrom django.template.loader import get_template \nfrom django.template import Context \nfrom django.http import HttpResponse \nimport datetime \n\ndef current_datetime(request): \n    now = datetime.datetime.now() \n    t = get_template('current_datetime.html') \n    html = t.render(Context({'current_date': now})) \n    return HttpResponse(html) \n\n```", "```py\nIt is now {{ current_date }}. \n\n```", "```py\nfrom django.shortcuts import render \nimport datetime \n\ndef current_datetime(request): \n    now = datetime.datetime.now() \n    return render(request, 'current_datetime.html',  \n                  {'current_date': now}) \n\n```", "```py\nt = get_template('dateapp/current_datetime.html') \n\n```", "```py\nreturn render(request, 'dateapp/current_datetime.html',  \n              {'current_date': now}) \n\n```", "```py\n{% include 'nav.html' %} \n{% include \"nav.html\" %} \n\n```", "```py\n{% include 'includes/nav.html' %} \n\n```", "```py\n{% include template_name %} \n\n```", "```py\n# mypage.html \n\n<html><body> \n\n{% include \"includes/nav.html\" %} \n\n<h1>{{ title }}</h1> \n</body></html> \n\n# includes/nav.html \n\n<div id=\"nav\"> \n    You are in: {{ current_section }} \n</div> \n\n```", "```py\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\"> \n<html lang=\"en\"> \n<head> \n    <title>The current time</title> \n</head> \n<body> \n    <h1>My helpful timestamp site</h1> \n    <p>It is now {{ current_date }}.</p> \n\n    <hr> \n    <p>Thanks for visiting my site.</p> \n</body> \n</html> \n\n```", "```py\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\"> \n<html lang=\"en\"> \n\n<head> \n    <title>Future time</title> \n</head> \n\n<body> \n    <h1>My helpful timestamp site</h1> \n    <p>In {{ hour_offset }} hour(s), it will be {{ next_time }}.</p> \n\n    <hr> \n    <p>Thanks for visiting my site.</p> \n</body> \n</html> \n\n```", "```py\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\"> \n<html lang=\"en\"> \n<head> \n\n```", "```py\n    <hr> \n    <p>Thanks for visiting my site.</p> \n</body> \n</html> \n\n```", "```py\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\"> \n<html lang=\"en\"> \n\n<head> \n    <title>{% block title %}{% endblock %}</title> \n</head> \n\n<body> \n    <h1>My helpful timestamp site</h1> \n    {% block content %}{% endblock %} \n    {% block footer %} \n    <hr> \n    <p>Thanks for visiting my site.</p> \n    {% endblock %} \n</body> \n</html> \n\n```", "```py\n{% extends \"base.html\" %} \n\n{% block title %}The current time{% endblock %} \n\n{% block content %} \n<p>It is now {{ current_date }}.</p> \n{% endblock %} \n\n```", "```py\n{% extends \"base.html\" %} \n\n{% block title %}Future time{% endblock %} \n\n{% block content %} \n\n<p>In {{ hour_offset }} hour(s), it will be {{ next_time }}.</p> \n{% endblock %} \n\n```"]