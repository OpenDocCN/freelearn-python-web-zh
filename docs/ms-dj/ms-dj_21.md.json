["```py\nimport psycopg2.extensions \n\nDATABASES = { \n    # ... \n    'OPTIONS': { \n        'isolation_level': psycopg2.extensions.ISOLATION_LEVEL_SERIALIZABLE, \n    }, \n} \n\n```", "```py\n_mysql_exceptions.OperationalError: ( \n    1005, \"Can't create table '\\\\db_name\\\\.#sql-4a8_ab' (errno: 150)\" \n) \n\n```", "```py\nCREATE DATABASE <dbname> CHARACTER SET utf8; \n\n```", "```py\n# settings.py \nDATABASES = { \n    'default': { \n        'ENGINE': 'django.db.backends.mysql', \n        'OPTIONS': {'read_default_file': '/path/to/my.cnf',}, \n    } \n} \n\n# my.cnf \n[client] \ndatabase = NAME \nuser = USER \npassword = PASSWORD \ndefault-character-set = utf8 \n\n```", "```py\n        ALTER TABLE <tablename> ENGINE=INNODB; \n\n```", "```py\n        'OPTIONS': { \n           'init_command': 'SET storage_engine=INNODB', \n        } \n\n```", "```py\nALTER TABLE `your_table` MODIFY `your_datetime_column` DATETIME(6) \n\n```", "```py\n        'OPTIONS': { # ... 'timeout': 20, # ... } \n\n```", "```py\nGRANT EXECUTE ON SYS.DBMS_LOB TO user; \n\n```", "```py\nDATABASES = { \n    'default': { \n        'ENGINE': 'django.db.backends.oracle', \n        'NAME': 'xe', \n        'USER': 'a_user', \n        'PASSWORD': 'a_password', \n        'HOST': '', \n        'PORT': '', \n    } \n} \n\n```", "```py\nDATABASES = { \n    'default': { \n        'ENGINE': 'django.db.backends.oracle', \n        'NAME': 'xe', \n        'USER': 'a_user', \n        'PASSWORD': 'a_password', \n        'HOST': 'dbprod01ned.mycompany.com', \n        'PORT': '1540', \n    } \n} \n\n```", "```py\n'OPTIONS': { \n    'threaded': True, \n}, \n\n```", "```py\n'OPTIONS': { \n    'use_returning_into': False, \n}, \n\n```", "```py\nclass LegacyModel(models.Model): \n    class Meta: \n        db_table = '\"name_left_in_lowercase\"' \n\nclass ForeignModel(models.Model): \n    class Meta: \n        db_table = '\"OTHER_USER\".\"NAME_ONLY_SEEMS_OVER_30\"' \n\n```", "```py\npython manage.py inspectdb \n\n```", "```py\npython manage.py inspectdb > models.py \n\n```", "```py\nclass Person(models.Model): \n    id = models.IntegerField(primary_key=True) \n    first_name = models.CharField(max_length=70) \n    class Meta: \n       managed = False \n       db_table = 'CENSUS_PERSONS' \n\n```", "```py\npython manage.py migrate \n\n```", "```py\n        id = models.IntegerField(primary_key=True) \n\n```", "```py\n        for_field = models.IntegerField(db_column='for') \n\n```"]