["```py\n# models.py \nfrom django.db import models \n\nclass Publisher(models.Model): \n    name = models.CharField(max_length=30) \n    address = models.CharField(max_length=50) \n    city = models.CharField(max_length=60) \n    state_province = models.CharField(max_length=30) \n    country = models.CharField(max_length=50) \n    website = models.URLField() \n\n    class Meta: \n        ordering = [\"-name\"] \n\n    def __str__(self): \n        return self.name \n\nclass Author(models.Model): \n    salutation = models.CharField(max_length=10) \n    name = models.CharField(max_length=200) \n    email = models.EmailField() \n    headshot = models.ImageField(upload_to='author_headshots') \n\n    def __str__(self): \n        return self.name \n\nclass Book(models.Model): \n    title = models.CharField(max_length=100) \n    authors = models.ManyToManyField('Author') \n    publisher = models.ForeignKey(Publisher) \n    publication_date = models.DateField() \n\n```", "```py\n# views.py \nfrom django.views.generic import ListView \nfrom books.models import Publisher \n\nclass PublisherList(ListView): \n    model = Publisher \n\n```", "```py\n# urls.py \nfrom django.conf.urls import url \nfrom books.views import PublisherList \n\nurlpatterns = [ \n    url(r'^publishers/$', PublisherList.as_view()), \n] \n\n```", "```py\n{% extends \"base.html\" %} \n\n{% block content %} \n    <h2>Publishers</h2> \n    <ul> \n        {% for publisher in object_list %} \n            <li>{{ publisher.name }}</li> \n        {% endfor %} \n    </ul> \n{% endblock %} \n\n```", "```py\n# views.py \nfrom django.views.generic import ListView \nfrom books.models import Publisher \n\nclass PublisherList(ListView): \n    model = Publisher \n context_object_name = 'my_favorite_publishers'\n\n```", "```py\nfrom django.views.generic import DetailView \nfrom books.models import Publisher, Book \n\nclass PublisherDetail(DetailView): \n\n    model = Publisher \n\n    def get_context_data(self, **kwargs): \n        # Call the base implementation first to get a context \n        context = super(PublisherDetail, self).get_context_data(**kwargs) \n        # Add in a QuerySet of all the books \n        context['book_list'] = Book.objects.all() \n        return context \n\n```", "```py\nfrom django.views.generic import DetailView \nfrom books.models import Publisher \n\nclass PublisherDetail(DetailView): \n\n    context_object_name = 'publisher' \n    queryset = Publisher.objects.all() \n\n```", "```py\nfrom django.views.generic import ListView \nfrom books.models import Book \n\nclass BookList(ListView): \n    queryset = Book.objects.order_by('-publication_date') \n    context_object_name = 'book_list' \n\n```", "```py\nfrom django.views.generic import ListView \nfrom books.models import Book \n\nclass AcmeBookList(ListView): \n\n    context_object_name = 'book_list' \n    queryset = Book.objects.filter(publisher__name='Acme Publishing') \n    template_name = 'books/acme_list.html' \n\n```", "```py\n# urls.py \nfrom django.conf.urls import url \nfrom books.views import PublisherBookList \n\nurlpatterns = [ \n    url(r'^books/([\\w-]+)/$', PublisherBookList.as_view()), \n] \n\n```", "```py\n# views.py \nfrom django.shortcuts import get_object_or_404 \nfrom django.views.generic import ListView \nfrom books.models import Book, Publisher \n\nclass PublisherBookList(ListView): \n\n    template_name = 'books/books_by_publisher.html' \n\n    def get_queryset(self): \n        self.publisher = get_object_or_404(Publisher name=self.args[0]) \n        return Book.objects.filter(publisher=self.publisher) \n\n```", "```py\n# ... \n\ndef get_context_data(self, **kwargs): \n    # Call the base implementation first to get a context \n    context = super(PublisherBookList, self).get_context_data(**kwargs) \n\n    # Add in the publisher \n    context['publisher'] = self.publisher \n    return context \n\n```", "```py\n# models.py \nfrom django.db import models \n\nclass Author(models.Model): \n    salutation = models.CharField(max_length=10) \n    name = models.CharField(max_length=200) \n    email = models.EmailField() \n    headshot = models.ImageField(upload_to='author_headshots') \n    last_accessed = models.DateTimeField() \n\n```", "```py\nfrom django.conf.urls import url \nfrom books.views import AuthorDetailView \n\nurlpatterns = [ \n    #... \n    url(r'^authors/(?P<pk>[0-9]+)/$', AuthorDetailView.as_view(), name='author-detail'), \n] \n\n```", "```py\nfrom django.views.generic import DetailView \nfrom django.utils import timezone \nfrom books.models import Author \n\nclass AuthorDetailView(DetailView): \n\n    queryset = Author.objects.all() \n\n    def get_object(self): \n        # Call the superclass \n        object = super(AuthorDetailView, self).get_object() \n\n        # Record the last accessed date \n        object.last_accessed = timezone.now() \n        object.save() \n        # Return the object \n        return object \n\n```"]