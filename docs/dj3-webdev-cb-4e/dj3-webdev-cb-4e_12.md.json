["```py\n(env)$ pip install cookiecutter~=1.7.0\n```", "```py\n(env)$ cookiecutter https://github.com/pydanny/cookiecutter-djangopackage.git\n```", "```py\n(env)$ cookiecutter gh:pydanny/cookiecutter-djangopackage\n```", "```py\nfull_name [Your full name here]: Aidas Bendoraitis\nemail [you@example.com]: aidas@bendoraitis.lt\ngithub_username [yourname]: archatas\nproject_name [Django Package]: django-likes\nrepo_name [dj-package]: django-likes\napp_name [django_likes]: likes\napp_config_name [LikesConfig]: \nproject_short_description [Your project description goes here]: Django app for liking anything on your website.\nmodels [Comma-separated list of models]: Like\ndjango_versions [1.11,2.1]: master\nversion [0.1.0]: \ncreate_example_project [N]: \nSelect open_source_license:\n1 - MIT\n2 - BSD\n3 - ISCL\n4 - Apache Software License 2.0\n5 - Not open source\nChoose from 1, 2, 3, 4, 5 [1]: \n```", "```py\ndjango-likes/\n\u251c\u2500\u2500 docs/\n\u2502   \u251c\u2500\u2500 Makefile\n\u2502   \u251c\u2500\u2500 authors.rst\n\u2502   \u251c\u2500\u2500 conf.py\n\u2502   \u251c\u2500\u2500 contributing.rst\n\u2502   \u251c\u2500\u2500 history.rst\n\u2502   \u251c\u2500\u2500 index.rst\n\u2502   \u251c\u2500\u2500 installation.rst\n\u2502   \u251c\u2500\u2500 make.bat\n\u2502   \u251c\u2500\u2500 readme.rst\n\u2502   \u2514\u2500\u2500 usage.rst\n\u251c\u2500\u2500 likes/\n\u2502   \u251c\u2500\u2500 static/\n\u2502   \u2502   \u251c\u2500\u2500 css/\n\u2502   \u2502   \u2502   \u2514\u2500\u2500 likes.css\n\u2502   \u2502   \u251c\u2500\u2500 img/\n\u2502   \u2502   \u2514\u2500\u2500 js/\n\u2502   \u2502       \u2514\u2500\u2500 likes.js\n\u2502   \u251c\u2500\u2500 templates/\n\u2502   \u2502   \u2514\u2500\u2500 likes/\n\u2502   \u2502       \u2514\u2500\u2500 base.html\n\u2502   \u2514\u2500\u2500 test_utils/\n\u2502       \u251c\u2500\u2500 test_app/\n|       \u2502   \u251c\u2500\u2500 migrations/\n\u2502       \u2502   \u2502   \u2514\u2500\u2500 __init__.py\n\u2502       \u2502   \u251c\u2500\u2500 __init__.py\n\u2502       \u2502   \u251c\u2500\u2500 admin.py\n\u2502       \u2502   \u251c\u2500\u2500 apps.py\n\u2502       \u2502   \u2514\u2500\u2500 models.html\n\u2502       \u251c\u2500\u2500 __init__.py\n\u2502       \u251c\u2500\u2500 admin.py\n\u2502       \u251c\u2500\u2500 apps.py\n\u2502       \u251c\u2500\u2500 models.py\n\u2502       \u251c\u2500\u2500 urls.py\n\u2502       \u2514\u2500\u2500 views.py\n\u251c\u2500\u2500 tests/\n\u2502   \u251c\u2500\u2500 __init__.py\n\u2502   \u251c\u2500\u2500 README.md\n\u2502   \u251c\u2500\u2500 requirements.txt\n\u2502   \u251c\u2500\u2500 settings.py\n\u2502   \u251c\u2500\u2500 test_models.py\n\u2502   \u2514\u2500\u2500 urls.py\n\u251c\u2500\u2500 .coveragerc\n\u251c\u2500\u2500 .editorconfig\n\u251c\u2500\u2500 .gitignore\n\u251c\u2500\u2500 .travis.yml\n\u251c\u2500\u2500 AUTHORS.rst\n\u251c\u2500\u2500 CONTRIBUTING.rst\n\u251c\u2500\u2500 HISTORY.rst\n\u251c\u2500\u2500 LICENSE\n\u251c\u2500\u2500 MANIFEST.in\n\u251c\u2500\u2500 Makefile\n\u251c\u2500\u2500 README.rst\n\u251c\u2500\u2500 manage.py\n\u251c\u2500\u2500 requirements.txt\n\u251c\u2500\u2500 requirements_dev.txt\n\u251c\u2500\u2500 requirements_test.txt\n\u251c\u2500\u2500 runtests.py\n\u251c\u2500\u2500 setup.cfg\n\u251c\u2500\u2500 setup.py*\n\u2514\u2500\u2500 tox.ini\n```", "```py\n# django-likes/likes/__init__.py __version__ = '0.1.0'\n```", "```py\n(env)$ pip install -r requirements_test.txt\n(env)$ python runtests.py \nCreating test database for alias 'default'...\nSystem check identified no issues (0 silenced).\n.\n----------------------------------------------------------------------\nRan 1 test in 0.001s\n\nOK\nDestroying test database for alias 'default'...\n```", "```py\n(env)$ python setup.py sdist\n```", "```py\n(env)$ pip install django-likes-0.1.0.tar.gz\n(env)$ pip uninstall django-likes\n```", "```py\n(env)$ python setup.py register\n(env)$ python setup.py publish\n```", "```py\n(env)$ python manage.py check --deploy --settings=myproject.settings.staging\n```", "```py\n$ brew install ansible\n$ brew cask install virtualbox\n$ brew cask install vagrant\n```", "```py\n{# deployment/ansible_templates/timezone.j2 #} {{ timezone }}\n```", "```py\n{# deployment/ansible_templates/apache_site-pre.conf.j2 #} <VirtualHost *:80>\n    ServerName {{ domain_name }}\n    ServerAlias {{ domain_name }} www.{{ domain_name }}\n\n    DocumentRoot {{ project_root }}/public_html\n    DirectoryIndex index.html\n\n    ErrorLog ${APACHE_LOG_DIR}/error.log\n    CustomLog ${APACHE_LOG_DIR}/access.log combined\n\n    AliasMatch ^/.well-known/(.*) \"/var/www/letsencrypt/$1\"\n\n    <Directory \"/var/www/letsencrypt\">\n        Require all granted\n    </Directory>\n\n    <Directory \"/\">\n        Require all granted\n    </Directory>\n\n</VirtualHost>\n```", "```py\n{# deployment/ansible_templates/pg_hba.j2 #} # TYPE  DATABASE        USER            CIDR-ADDRESS    METHOD\nlocal   all             all                             ident\nhost    all             all             ::0/0           md5\nhost    all             all             0.0.0.0/32      md5\nhost    {{ db_name }}   {{ db_user }}   127.0.0.1/32    md5\n```", "```py\n{# deployment/ansible_templates/postfix.j2 #} # See /usr/share/postfix/main.cf.dist for a commented, more  \n# complete version\n\n# Debian specific:  Specifying a file name will cause the first\n# line of that file to be used as the name.  The Debian default\n# is /etc/mailname.\n# myorigin = /etc/mailname\n\nsmtpd_banner = $myhostname ESMTP $mail_name (Ubuntu)\nbiff = no\n\n# appending .domain is the MUA's job.\nappend_dot_mydomain = no\n\n# Uncomment the next line to generate \"delayed mail\" warnings\n# delay_warning_time = 4h\n\nreadme_directory = no\n\n# TLS parameters\nsmtpd_tls_cert_file=/etc/ssl/certs/ssl-cert-snakeoil.pem\nsmtpd_tls_key_file=/etc/ssl/private/ssl-cert-snakeoil.key\nsmtpd_use_tls=yes\nsmtpd_tls_session_cache_database = btree:${data_directory}/smtpd_scache\nsmtp_tls_session_cache_database = btree:${data_directory}/smtp_scache\n\n# See /usr/share/doc/postfix/TLS_README.gz in the postfix-doc \n# package for information on enabling SSL in \n# the smtp client.\n\nsmtpd_relay_restrictions = permit_mynetworks permit_sasl_authenticated defer_unauth_destination\nmyhostname = {{ domain_name }}\nalias_maps = hash:/etc/aliases\nalias_database = hash:/etc/aliases\nmydestination = $myhostname, localhost, localhost.localdomain, ,  \n localhost\nrelayhost =\nmynetworks = 127.0.0.0/8 [::ffff:127.0.0.0]/104 [::1]/128\nmailbox_size_limit = 0\nrecipient_delimiter = +\ninet_interfaces = all\ninet_protocols = all\nvirtual_alias_domains = {{ domain_name }}\nvirtual_alias_maps = hash:/etc/postfix/virtual\n```", "```py\n{# deployment/ansible_templates/virtual.j2 #} # /etc/postfix/virtual\n\nhello@{{ domain_name }} admin@example.com\n@{{ domain_name }} admin@example.com\n```", "```py\n{# deployment/ansible_templates/memcached.j2 #} # memcached default config file\n# 2003 - Jay Bonci <jaybonci@debian.org>\n# This configuration file is read by the start-memcached script \n# provided as part of the Debian GNU/Linux \n# distribution.\n\n# Run memcached as a daemon. This command is implied, and is not\n# needed for the daemon to run. See the README.Debian that \n# comes with this package for more information.\n-d\n\n# Log memcached's output to /var/log/memcached\nlogfile /var/log/memcached.log\n\n# Be verbose\n# -v\n\n# Be even more verbose (print client commands as well)\n# -vv\n\n# Use 1/16 of server RAM for memcached\n-m {{ (ansible_memtotal_mb * 0.0625) | int }}\n\n# Default connection port is 11211\n-p 11211\n\n# Run the daemon as root. The start-memcached will default to \n# running as root if no -u command is present \n# in this config file\n-u memcache\n\n# Specify which IP address to listen on. The default is to \n# listen on all IP addresses\n# This parameter is one of the only security measures that \n# memcached has, so make sure it's listening on \n# a firewalled interface.\n-l 127.0.0.1\n\n# Limit the number of simultaneous incoming connections. \n# The daemon default is 1024\n# -c 1024\n\n# Lock down all paged memory. Consult with the README and \n# homepage before you do this\n# -k\n\n# Return error when memory is exhausted (rather than \n# removing items)\n# -M\n\n# Maximize core file limit\n# -r\n```", "```py\n{# deployment/ansible_templates/secrets.json.j2 #} {\n    \"DJANGO_SECRET_KEY\": \"{{ django_secret_key }}\",\n    \"DATABASE_ENGINE\": \"django.contrib.gis.db.backends.postgis\",\n    \"DATABASE_NAME\": \"{{ db_name }}\",\n    \"DATABASE_USER\": \"{{ db_user }}\",\n    \"DATABASE_PASSWORD\": \"{{ db_password }}\",\n    \"EMAIL_HOST\": \"{{ email_host }}\",\n    \"EMAIL_PORT\": \"{{ email_port }}\",\n    \"EMAIL_HOST_USER\": \"{{ email_host_user }}\",\n    \"EMAIL_HOST_PASSWORD\": \"{{ email_host_password }}\"\n} \n```", "```py\n# .gitignore # Secrets\nsecrets.jsonsecrets.yml\n\n# Vagrant / Ansible\n.vagrant\n*.retry\n```", "```py\n# deployment/staging/ansible/Vagrantfile\nVAGRANTFILE_API_VERSION = \"2\"\n\nVagrant.configure(VAGRANTFILE_API_VERSION) do |config|\n  config.vm.box = \"bento/ubuntu-18.04\"\n  config.vm.box_version = \"201912.14.0\"\n  config.vm.box_check_update = false\n  config.ssh.insert_key=false\n  config.vm.provider \"virtualbox\" do |v|\n    v.memory = 512\n    v.cpus = 1\n    v.name = \"myproject\"\n  end\n  config.vm.network \"private_network\", ip: \"192.168.50.5\"\n  config.vm.provision \"ansible\" do |ansible|\n    ansible.limit = \"all\"\n    ansible.playbook = \"setup.yml\"\n    ansible.inventory_path = \"./hosts/vagrant\"\n    ansible.host_key_checking = false\n    ansible.verbose = \"vv\"\n    ansible.extra_vars = { ansible_python_interpreter: \n    \"/usr/bin/python3\" }\n  end\nend\n\n```", "```py\n# deployment/staging/ansible/hosts/vagrant\n[servers]\n192.168.50.5\n```", "```py\n# deployment/staging/ansible/vars.yml\n---\n# a unix path-friendly name (IE, no spaces or special characters)\nproject_name: myproject\n\nuser_username: \"{{ project_name }}\"\n\n# the base path to install to. You should not need to change this.\ninstall_root: /home\n\nproject_root: \"{{ install_root }}/{{ project_name }}\"\n\n# the python module path to your project's wsgi file\nwsgi_module: myproject.wsgi\n\n# any directories that need to be added to the PYTHONPATH.\npython_path: \"{{ project_root }}/src/{{ project_name }}\"\n\n# the git repository URL for the project\nproject_repo: git@github.com:archatas/django-myproject.git\n\n# The value of your django project's STATIC_ROOT settings.\nstatic_root: \"{{ python_path }}/static\"\nmedia_root: \"{{ python_path }}/media\"\n\nlocale: en_US.UTF-8\ntimezone: Europe/Berlin\n\ndomain_name: myproject.192.168.50.5.xip.io\ndjango_settings: myproject.settings.staging\n\nletsencrypt_email: \"\"\nwsgi_file_name: wsgi_staging.py\n```", "```py\n# deployment/staging/ansible/sample_secrets.yml # Django Secret Key\ndjango_secret_key: \"change-this-to-50-characters-\n long-random-string\"\n\n# PostgreSQL database settings\ndb_name: \"myproject\"\ndb_user: \"myproject\"\ndb_password: \"change-this-to-a-secret-password\"\ndb_host: \"localhost\"\ndb_port: \"5432\"\n\n# Email SMTP settings\nemail_host: \"localhost\"\nemail_port: \"25\"\nemail_host_user: \"\"\nemail_host_password: \"\"\n\n# a private key that has access to the repository URL\nssh_github_key: ~/.ssh/id_rsa_github\n```", "```py\n# deployment/staging/ansible/setup_on_virtualbox.sh #!/usr/bin/env bash\necho \"=== Setting up the local staging server ===\"\ndate\n\ncd \"$(dirname \"$0\")\"\nvagrant up --provision\n```", "```py\n$ chmod +x setup_on_virtualbox.sh\n$ ./setup_on_virtualbox.sh\n```", "```py\n$ vagrant ssh\nWelcome to Ubuntu 18.04.3 LTS (GNU/Linux 4.15.0-72-generic x86_64)\n\n * Documentation:  https://help.ubuntu.com\n * Management:     https://landscape.canonical.com\n * Support:        https://ubuntu.com/advantage\n\n System information as of Wed Jan 15 04:44:42 CET 2020\n\n System load:  0.21              Processes:           126\n Usage of /:   4.0% of 61.80GB   Users logged in:     1\n Memory usage: 35%               IP address for eth0: 10.0.2.15\n Swap usage:   4%                IP address for eth1: 192.168.50.5\n\n0 packages can be updated.\n0 updates are security updates.\n\n*** System restart required ***\n\nThis system is built by the Bento project by Chef Software\nMore information can be found at https://github.com/chef/bento\nLast login: Wed Jan 15 04:43:32 2020 from 192.168.50.1\nvagrant@myproject:~$ sudo su\nroot@myproject:/home/vagrant#\nreboot\nConnection to 127.0.0.1 closed by remote host.\nConnection to 127.0.0.1 closed.\n```", "```py\n$ vagrant ssh\nWelcome to Ubuntu 18.04.3 LTS (GNU/Linux 4.15.0-74-generic x86_64)\n# \u2026 \nvagrant@myproject:~$ sudo su - myproject\n(env) myproject@myproject:~$ pwd\n/home/myproject\n(env) myproject@myproject:~$ ls\ncommands db_backups logs public_html src env\n```", "```py\n$ vagrant destroy\n$ vagrant up --provision\n```", "```py\n(env)$ python manage.py check --deploy -- \n settings=myproject.settings.production\n```", "```py\n# ~/.ssh/config\nHost *\n    ServerAliveInterval 240\n    AddKeysToAgent yes\n    UseKeychain yes\n\nHost github\n    Hostname github.com\n    IdentityFile ~/.ssh/id_rsa_github\n\nHost myproject-apache\n    Hostname 142.93.167.30\n    User root\n    IdentityFile ~/.ssh/id_rsa_django_cookbook\n```", "```py\n$ ssh myproject-apache\n```", "```py\n# deployment/production/ansible/hosts/remote\n[servers]\nmyproject-apache\n\n[servers:vars]\nansible_python_interpreter=/usr/bin/python3\n```", "```py\n# deployment/production/ansible/vars.yml\n---\n# a unix path-friendly name (IE, no spaces or special characters)\nproject_name: myproject\n\nuser_username: \"{{ project_name }}\"\n\n# the base path to install to. You should not need to change this.\ninstall_root: /home\n\nproject_root: \"{{ install_root }}/{{ project_name }}\"\n\n# the python module path to your project's wsgi file\nwsgi_module: myproject.wsgi\n\n# any directories that need to be added to the PYTHONPATH.\npython_path: \"{{ project_root }}/src/{{ project_name }}\"\n\n# the git repository URL for the project\nproject_repo: git@github.com:archatas/django-myproject.git\n\n# The value of your django project's STATIC_ROOT settings.\nstatic_root: \"{{ python_path }}/static\"\nmedia_root: \"{{ python_path }}/media\"\n\nlocale: en_US.UTF-8\ntimezone: Europe/Berlin\n\ndomain_name: myproject.142.93.167.30.xip.io\ndjango_settings: myproject.settings.production\n\n# letsencrypt settings\nletsencrypt_email: hello@myproject.com\nwsgi_file_name: wsgi_production.py\n```", "```py\n# deployment/production/ansible/sample_secrets.yml # Django Secret Key\ndjango_secret_key: \"change-this-to-50-characters-\n long-random-string\"\n\n# PostgreSQL database settings\ndb_name: \"myproject\"\ndb_user: \"myproject\"\ndb_password: \"change-this-to-a-secret-password\"\ndb_host: \"localhost\"\ndb_port: \"5432\"\n\n# Email SMTP settings\nemail_host: \"localhost\"\nemail_port: \"25\"\nemail_host_user: \"\"\nemail_host_password: \"\"\n\n# a private key that has access to the repository URL\nssh_github_key: ~/.ssh/id_rsa_github\n```", "```py\n# deployment/production/ansible/setup_remotely.sh #!/usr/bin/env bash\necho \"=== Setting up the production server ===\"\ndate\n\ncd \"$(dirname \"$0\")\"\nansible-playbook setup.yml -i hosts/remote\n```", "```py\n$ chmod +x setup_remotely.sh\n$ ./setup_remotely.sh\n```", "```py\n$ ssh myproject-apache\nWelcome to Ubuntu 18.04.3 LTS (GNU/Linux 4.15.0-74-generic x86_64)\n\n * Documentation: https://help.ubuntu.com\n * Management: https://landscape.canonical.com\n * Support: https://ubuntu.com/advantage\n\n System information as of Wed Jan 15 11:39:51 CET 2020\n\n System load: 0.08 Processes: 104\n Usage of /: 8.7% of 24.06GB Users logged in: 0\n Memory usage: 35% IP address for eth0: 142.93.167.30\n Swap usage: 0%\n\n * Canonical Livepatch is available for installation.\n - Reduce system reboots and improve kernel security. Activate at:\n https://ubuntu.com/livepatch\n\n0 packages can be updated.\n0 updates are security updates.\n\n*** System restart required ***\n\nLast login: Sun Jan 12 12:23:35 2020 from 178.12.115.146\nroot@myproject:~# reboot\nConnection to 142.93.167.30 closed by remote host.\nConnection to 142.93.167.30 closed.\n```", "```py\n# deployment/production/ansible/deploy_remotely.sh #!/usr/bin/env bash\necho \"=== Deploying project to production server ===\"\ndate\n\ncd \"$(dirname \"$0\")\"\nansible-playbook deploy.yml -i hosts/remote\n```", "```py\n$ chmod +x deploy_remotely.sh\n```", "```py\n(env)$ python manage.py check --deploy --\n settings=myproject.settings.staging\n```", "```py\n$ brew install ansible\n$ brew cask install virtualbox\n$ brew cask install vagrant\n```", "```py\n{# deployment/ansible_templates/timezone.j2 #} {{ timezone }}\n```", "```py\n{# deployment/ansible_templates/nginx-pre.j2 #} server{\n    listen 80;\n    server_name {{ domain_name }};\n\n    location /.well-known/acme-challenge {\n        root /var/www/letsencrypt;\n        try_files $uri $uri/ =404;\n    }\n    location / {\n        root /var/www/letsencrypt;\n    }\n}\n\n```", "```py\n# deployment/ansible_templates/gunicorn.j2\n[Unit]\nDescription=Gunicorn daemon for myproject website\nAfter=network.target\n\n[Service]\nPIDFile=/run/gunicorn/pid\nType=simple\nUser={{ user_username }}\nGroup=www-data\nRuntimeDirectory=gunicorn\nWorkingDirectory={{ python_path }}\nExecStart={{ project_root }}/env/bin/gunicorn --pid /run/gunicorn/pid --log-file={{ project_root }}/logs/gunicorn.log --workers {{ ansible_processor_count | int }} --bind 127.0.0.1:8000 {{ project_name }}.wsgi:application --env DJANGO_SETTINGS_MODULE={{ django_settings }} --max-requests 1000\nExecReload=/bin/kill -s HUP $MAINPID\nExecStop=/bin/kill -s TERM $MAINPID\nPrivateTmp=true\n\n[Install]\nWantedBy=multi-user.target\n```", "```py\n{# deployment/ansible_templates/pg_hba.j2 #} # TYPE  DATABASE        USER            CIDR-ADDRESS    METHOD\nlocal   all             all                             ident\nhost    all             all             ::0/0           md5\nhost    all             all             0.0.0.0/32      md5\nhost    {{ db_name }}   {{ db_user }}   127.0.0.1/32    md5\n```", "```py\n{# deployment/ansible_templates/postfix.j2 #} # See /usr/share/postfix/main.cf.dist for a commented, more \n# complete version\n\n# Debian specific:  Specifying a file name will cause the first\n# line of that file to be used as the name.  The Debian default\n# is /etc/mailname.\n# myorigin = /etc/mailname\n\nsmtpd_banner = $myhostname ESMTP $mail_name (Ubuntu)\nbiff = no\n\n# appending .domain is the MUA's job.\nappend_dot_mydomain = no\n\n# Uncomment the next line to generate \"delayed mail\" warnings\n#delay_warning_time = 4h\n\nreadme_directory = no\n\n# TLS parameters\nsmtpd_tls_cert_file=/etc/ssl/certs/ssl-cert-snakeoil.pem\nsmtpd_tls_key_file=/etc/ssl/private/ssl-cert-snakeoil.key\nsmtpd_use_tls=yes\nsmtpd_tls_session_cache_database = btree:${data_directory}/smtpd_scache\nsmtp_tls_session_cache_database = btree:${data_directory}/smtp_scache\n\n# See /usr/share/doc/postfix/TLS_README.gz in the postfix-doc \n# package for information on enabling SSL \n# in the smtp client.\n\nsmtpd_relay_restrictions = permit_mynetworks permit_sasl_authenticated defer_unauth_destination\nmyhostname = {{ domain_name }}\nalias_maps = hash:/etc/aliases\nalias_database = hash:/etc/aliases\nmydestination = $myhostname, localhost, localhost.localdomain, , \n localhost\nrelayhost =\nmynetworks = 127.0.0.0/8 [::ffff:127.0.0.0]/104 [::1]/128\nmailbox_size_limit = 0\nrecipient_delimiter = +\ninet_interfaces = all\ninet_protocols = all\nvirtual_alias_domains = {{ domain_name }}\nvirtual_alias_maps = hash:/etc/postfix/virtual\n```", "```py\n{# deployment/ansible_templates/virtual.j2 #} # /etc/postfix/virtual\n\nhello@{{ domain_name }} admin@example.com\n@{{ domain_name }} admin@example.com\n```", "```py\n{# deployment/ansible_templates/memcached.j2 #} # memcached default config file\n# 2003 - Jay Bonci <jaybonci@debian.org>\n# This configuration file is read by the start-memcached script \n# provided as part of the Debian GNU/Linux distribution.\n\n# Run memcached as a daemon. This command is implied, and is not \n# needed for the daemon to run. See the README.Debian \n# that comes with this package for more information.\n-d\n\n# Log memcached's output to /var/log/memcached\nlogfile /var/log/memcached.log\n\n# Be verbose\n# -v\n\n# Be even more verbose (print client commands as well)\n# -vv\n\n# Use 1/16 of server RAM for memcached\n-m {{ (ansible_memtotal_mb * 0.0625) | int }}\n\n# Default connection port is 11211\n-p 11211\n\n# Run the daemon as root. The start-memcached will default to \n# running as root if no -u command is present \n# in this config file\n-u memcache\n\n# Specify which IP address to listen on. The default is to \n# listen on all IP addresses\n# This parameter is one of the only security measures that \n# memcached has, so make sure it's listening \n# on a firewalled interface.\n-l 127.0.0.1\n\n# Limit the number of simultaneous incoming connections. The \n# daemon default is 1024\n# -c 1024\n\n# Lock down all paged memory. Consult with the README and homepage \n# before you do this\n# -k\n\n# Return error when memory is exhausted (rather than \n# removing items)\n# -M\n\n# Maximize core file limit\n# -r\n```", "```py\n{# deployment/ansible_templates/secrets.json.j2 #} {\n    \"DJANGO_SECRET_KEY\": \"{{ django_secret_key }}\",\n    \"DATABASE_ENGINE\": \"django.contrib.gis.db.backends.postgis\",\n    \"DATABASE_NAME\": \"{{ db_name }}\",\n    \"DATABASE_USER\": \"{{ db_user }}\",\n    \"DATABASE_PASSWORD\": \"{{ db_password }}\",\n    \"EMAIL_HOST\": \"{{ email_host }}\",\n    \"EMAIL_PORT\": \"{{ email_port }}\",\n    \"EMAIL_HOST_USER\": \"{{ email_host_user }}\",\n    \"EMAIL_HOST_PASSWORD\": \"{{ email_host_password }}\"\n} \n```", "```py\n# .gitignore # Secrets\nsecrets.jsonsecrets.yml\n\n# Vagrant / Ansible\n.vagrant\n*.retry\n```", "```py\n# deployment/staging/ansible/Vagrantfile\nVAGRANTFILE_API_VERSION = \"2\"\n\nVagrant.configure(VAGRANTFILE_API_VERSION) do |config|\n  config.vm.box = \"bento/ubuntu-18.04\"\n  config.vm.box_version = \"201912.14.0\"\n  config.vm.box_check_update = false\n  config.ssh.insert_key=false\n  config.vm.provider \"virtualbox\" do |v|\n    v.memory = 512\n    v.cpus = 1\n    v.name = \"myproject\"\n  end\n  config.vm.network \"private_network\", ip: \"192.168.50.5\"\n  config.vm.provision \"ansible\" do |ansible|\n    ansible.limit = \"all\"\n    ansible.playbook = \"setup.yml\"\n    ansible.inventory_path = \"./hosts/vagrant\"\n    ansible.host_key_checking = false\n    ansible.verbose = \"vv\"\n    ansible.extra_vars = { ansible_python_interpreter: \n    \"/usr/bin/python3\" }\n  end\nend\n\n```", "```py\n# deployment/staging/ansible/hosts/vagrant\n[servers]\n192.168.50.5\n```", "```py\n# deployment/staging/ansible/vars.yml\n---\n# a unix path-friendly name (IE, no spaces or special characters)\nproject_name: myproject\n\nuser_username: \"{{ project_name }}\"\n\n# the base path to install to. You should not need to change this.\ninstall_root: /home\n\nproject_root: \"{{ install_root }}/{{ project_name }}\"\n\n# the python module path to your project's wsgi file\nwsgi_module: myproject.wsgi\n\n# any directories that need to be added to the PYTHONPATH.\npython_path: \"{{ project_root }}/src/{{ project_name }}\"\n\n# the git repository URL for the project\nproject_repo: git@github.com:archatas/django-myproject.git\n\n# The value of your django project's STATIC_ROOT settings.\nstatic_root: \"{{ python_path }}/static\"\nmedia_root: \"{{ python_path }}/media\"\n\nlocale: en_US.UTF-8\ntimezone: Europe/Berlin\n\ndomain_name: myproject.192.168.50.5.xip.io\ndjango_settings: myproject.settings.staging\n\nletsencrypt_email: \"\"\n```", "```py\n# deployment/staging/ansible/sample_secrets.yml # Django Secret Key\ndjango_secret_key: \"change-this-to-50-characters-long-random-string\"\n\n# PostgreSQL database settings\ndb_name: \"myproject\"\ndb_user: \"myproject\"\ndb_password: \"change-this-to-a-secret-password\"\ndb_host: \"localhost\"\ndb_port: \"5432\"\n\n# Email SMTP settings\nemail_host: \"localhost\"\nemail_port: \"25\"\nemail_host_user: \"\"\nemail_host_password: \"\"\n\n# a private key that has access to the repository URL\nssh_github_key: ~/.ssh/id_rsa_github\n```", "```py\n# deployment/staging/ansible/setup_on_virtualbox.sh #!/usr/bin/env bash\necho \"=== Setting up the local staging server ===\"\ndate\n\ncd \"$(dirname \"$0\")\"\nvagrant up --provision\n```", "```py\n$ chmod +x setup_on_virtualbox.sh\n$ ./setup_on_virtualbox.sh\n```", "```py\n$ vagrant ssh\nWelcome to Ubuntu 18.04.3 LTS (GNU/Linux 4.15.0-72-generic x86_64)\n\n * Documentation:  https://help.ubuntu.com\n * Management:     https://landscape.canonical.com\n * Support:        https://ubuntu.com/advantage\n\n System information as of Wed Jan 15 04:44:42 CET 2020\n\n System load:  0.21              Processes:           126\n Usage of /:   4.0% of 61.80GB   Users logged in:     1\n Memory usage: 35%               IP address for eth0: 10.0.2.15\n Swap usage:   4%                IP address for eth1: 192.168.50.5\n\n0 packages can be updated.\n0 updates are security updates.\n\n*** System restart required ***\n\nThis system is built by the Bento project by Chef Software\nMore information can be found at https://github.com/chef/bento\nLast login: Wed Jan 15 04:43:32 2020 from 192.168.50.1\nvagrant@myproject:~$ sudo su\nroot@myproject:/home/vagrant#\nreboot\nConnection to 127.0.0.1 closed by remote host.\nConnection to 127.0.0.1 closed.\n```", "```py\n$ vagrant ssh\nWelcome to Ubuntu 18.04.3 LTS (GNU/Linux 4.15.0-74-generic x86_64)\n# \u2026 \nvagrant@myproject:~$ sudo su - myproject\n(env) myproject@myproject:~$ pwd\n/home/myproject\n(env) myproject@myproject:~$ ls\ncommands db_backups logs public_html src env\n```", "```py\n$ vagrant destroy\n$ vagrant up --provision\n```", "```py\n(env)$ python manage.py check --deploy --settings=myproject.settings.production\n```", "```py\n# ~/.ssh/config\nHost *\n    ServerAliveInterval 240\n    AddKeysToAgent yes\n    UseKeychain yes\n\nHost github\n    Hostname github.com\n    IdentityFile ~/.ssh/id_rsa_github\n\nHost myproject-nginx\n    Hostname 46.101.136.102\n    User root\n    IdentityFile ~/.ssh/id_rsa_django_cookbook\n```", "```py\n$ ssh myproject-nginx\n```", "```py\n# deployment/production/ansible/hosts/remote\n[servers]\nmyproject-nginx\n\n[servers:vars]\nansible_python_interpreter=/usr/bin/python3\n```", "```py\n# deployment/production/ansible/vars.yml\n---\n# a unix path-friendly name (IE, no spaces or special characters)\nproject_name: myproject\n\nuser_username: \"{{ project_name }}\"\n\n# the base path to install to. You should not need to change this.\ninstall_root: /home\n\nproject_root: \"{{ install_root }}/{{ project_name }}\"\n\n# the python module path to your project's wsgi file\nwsgi_module: myproject.wsgi\n\n# any directories that need to be added to the PYTHONPATH.\npython_path: \"{{ project_root }}/src/{{ project_name }}\"\n\n# the git repository URL for the project\nproject_repo: git@github.com:archatas/django-myproject.git\n\n# The value of your django project's STATIC_ROOT settings.\nstatic_root: \"{{ python_path }}/static\"\nmedia_root: \"{{ python_path }}/media\"\n\nlocale: en_US.UTF-8\ntimezone: Europe/Berlin\n\ndomain_name: myproject.46.101.136.102.xip.io\ndjango_settings: myproject.settings.production\n\n# letsencrypt settings\nletsencrypt_email: hello@myproject.com\n```", "```py\n# deployment/production/ansible/sample_secrets.yml # Django Secret Key\ndjango_secret_key: \"change-this-to-50-characters-long-random-string\"\n\n# PostgreSQL database settings\ndb_name: \"myproject\"\ndb_user: \"myproject\"\ndb_password: \"change-this-to-a-secret-password\"\ndb_host: \"localhost\"\ndb_port: \"5432\"\n\n# Email SMTP settings\nemail_host: \"localhost\"\nemail_port: \"25\"\nemail_host_user: \"\"\nemail_host_password: \"\"\n\n# a private key that has access to the repository URL\nssh_github_key: ~/.ssh/id_rsa_github\n```", "```py\n# deployment/production/ansible/setup_remotely.sh #!/usr/bin/env bash\necho \"=== Setting up the production server ===\"\ndate\n\ncd \"$(dirname \"$0\")\"\nansible-playbook setup.yml -i hosts/remote\n```", "```py\n$ chmod +x setup_remotely.sh\n$ ./setup_remotely.sh\n```", "```py\n$ ssh myproject-nginx\nWelcome to Ubuntu 18.04.3 LTS (GNU/Linux 4.15.0-74-generic x86_64)\n\n * Documentation: https://help.ubuntu.com\n * Management: https://landscape.canonical.com\n * Support: https://ubuntu.com/advantage\n\n System information as of Wed Jan 15 11:39:51 CET 2020\n\n System load: 0.08 Processes: 104\n Usage of /: 8.7% of 24.06GB Users logged in: 0\n Memory usage: 35% IP address for eth0: 142.93.167.30\n Swap usage: 0%\n\n * Canonical Livepatch is available for installation.\n - Reduce system reboots and improve kernel security. Activate at:\n https://ubuntu.com/livepatch\n\n0 packages can be updated.\n0 updates are security updates.\n\n*** System restart required ***\n\nLast login: Sun Jan 12 12:23:35 2020 from 178.12.115.146\nroot@myproject:~# reboot\nConnection to 142.93.167.30 closed by remote host.\nConnection to 142.93.167.30 closed.\n```", "```py\n# deployment/production/ansible/deploy_remotely.sh #!/usr/bin/env bash\necho \"=== Deploying project to production server ===\"\ndate\n\ncd \"$(dirname \"$0\")\"\nansible-playbook deploy.yml -i hosts/remote\n```", "```py\n$ chmod +x deploy_remotely.sh\n```"]