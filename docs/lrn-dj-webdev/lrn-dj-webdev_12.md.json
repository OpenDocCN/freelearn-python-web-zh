["```py\n    $pip install python-social-auth\n\n    ```", "```py\n    INSTALLED_APPS = (\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'user_profile',\n    'tweet',\n    'social.apps.django_app.default',\n    )\n    ```", "```py\n    AUTHENTICATION_BACKENDS = (\n      'social.backends.twitter.TwitterOAuth',\n      'django.contrib.auth.backends.ModelBackend',\n    )\n    ```", "```py\n        TEMPLATE_CONTEXT_PROCESSORS = (\n        'django.contrib.auth.context_processors.auth',\n        'django.core.context_processors.debug',\n        'django.core.context_processors.i18n',\n        'django.core.context_processors.media',\n        'django.contrib.messages.context_processors.messages',\n        'social.apps.django_app.context_processors.backends',\n        )\n        ```", "```py\n    SOCIAL_AUTH_USER_MODEL = 'user_profile.User'\n    ```", "```py\n    SOCIAL_AUTH_LOGIN_REDIRECT_URL = '/profile/'\n    SOCIAL_AUTH_LOGIN_ERROR_URL = '/login-error/'\n    SOCIAL_AUTH_LOGIN_URL = '/login/'\n    SOCIAL_AUTH_DISCONNECT_REDIRECT_URL = '/logout/'\n    ```", "```py\n    $ python manage.py makemigrations\n    Migrations for 'default':\n    0002_auto_XXXX_XXXX.py:\n    - Alter field user on user_profile\n    $ python manage.py migrate\n    Operations to perform:\n    Apply all migrations: admin, default, contenttypes, auth, sessions\n    Running migrations:\n    Applying default.0001_initial... OK\n    Applying default.0002_auto_XXXX_XXXX... OK\n\n    ```", "```py\n    url('', include('social.apps.django_app.urls', namespace='social'))\n    ```", "```py\n    urlpatterns = patterns('',\n    ....\n    url('', include('social.apps.django_app.urls', namespace='social'))\n    )\n    ```", "```py\n    SOCIAL_AUTH_TWITTER_KEY = 'your_key'\n    SOCIAL_AUTH_TWITTER_SECRET = 'your_secret'\n    ```", "```py\n    class User(AbstractBaseUser, PermissionsMixin):\n    \"\"\"\n    Custom user class.\n    \"\"\"\n      username = models.CharField('username', max_length=10, unique=True, db_index=True)\n      email = models.EmailField('email address', unique=True)\n      date_joined = models.DateTimeField(auto_now_add=True)\n      is_active = models.BooleanField(default=True)\n      is_admin = models.BooleanField(default=False)\n      is_staff = models.BooleanField(default=False)\n\n      USERNAME_FIELD = 'username'\n      objects = UserManager()\n      REQUIRED_FIELDS = ['email']\n      class Meta:\n        db_table = u'user'\n        def __unicode__(self):\n      return self.username \n\n    importing the PermissionsMixin as from |django.contrib.auth.models import AbstractBaseUser, PermissionsMixin\n    ```", "```py\nRequest\nGET /\nAccept: application/json+tweetdb\nResponse\n200 OK\nContent-Type: application/json+tweetdb\n{\n  \"version\": \"1.0\",\n  \"links\": [\n    {\n      \"href\": \"/tweets\",\n      \"rel\": \"list\",\n      \"method\": \"GET\" \n    },\n    {\n      \"href\": \"/tweet\",\n      \"rel\": \"create\",\n      \"method\": \"POST\"\n    }\n  ]\n}\n```", "```py\nRequest\nGET /user\nAccept: application/json+tweetdb\n  Response\n  200 OK\n  Content-Type: application/json+tweetdb\n\n    {\n      \"users\": [\n      {\n        \"id\": 1,\n        \"name\": \"Ratan\",\n        \"country: \"India\",\n        \"links\": [\n          {\n            \"href\": \"/user/1\",\n            \"rel\": \"self\",\n            \"method\": \"GET\"\n          },\n          {\n            \"href\": \"/user/1\",\n            \"rel\": \"edit\",\n            \"method\": \"PUT\"\n          },\n          {\n            \"href\": \"/user/1\",\n            \"rel\": \"delete\",\n            \"method\": \"DELETE\"\n          }\n        ]\n      },\n      {\n        \"id\": 2,\n        \"name\": \"Sanjeev\",\n        \"country: \"India\",\n        \"links\": [\n        {\n          \"href\": \"/user/2\",\n          \"rel\": \"self\",\n          \"method\": \"GET\"\n        },\n        {\n          \"href\": \"/user/2\",\n          \"rel\": \"edit\",\n          \"method\": \"PUT\"\n        },\n        {\n          \"href\": \"/user/2\",\n          \"rel\": \"delete\",\n          \"method\": \"DELETE\"\n        }\n      ]\n    }\n  ],\n  \"links\": [\n    {\n      \"href\": \"/user\",\n      \"rel\": \"create\",\n      \"method\": \"POST\"\n    }\n  ]\n}\n```", "```py\nRequest\nPOST /user\nAccept: application/json+tweetdb\n  Content-Type: application/json+tweetdb\n  {\n    \"name\": \"Zuke\",\n    \"country\": \"United States\"\n  }\n  Response\n  201 Created\n  Content-Type: application/json+tweetdb\n  {\n    \"user\": {\n      \"id\": 3,\n      \"name\": \"Zuke\",\n      \"country\": \"United States\",\n      \"links\": [\n        {\n          \"href\": \"/user/3\",\n          \"rel\": \"self\",\n          \"method\": \"GET\"\n        },\n        {\n          \"href\": \"/user/3\",\n          \"rel\": \"edit\",\n          \"method\": \"PUT\"\n        },\n        {\n          \"href\": \"/user/3\",\n          \"rel\": \"delete\",\n          \"method\": \"DELETE\"\n        }\n      ]\n    },\n    \"links\": {\n      \"href\": \"/user\",\n      \"rel\": \"list\",\n      \"method\": \"GET\"\n    }\n  }\n```", "```py\nRequest\nPUT /user/1\nAccept: application/json+tweetdb\n  Content-Type: application/json+tweetdb\n  {\n    \"name\": \"Ratan Kumar\",\n    \"country\": \"United States\"\n  }\n  Response\n  200 OK\n  Content-Type: application/json+tweetdb\n  {\n    \"user\": {\n      \"id\": 1,\n      \"name\": \"Ratan Kumar\",\n      \"country\": \"United States\",\n      \"links\": [\n        {\n          \"href\": \"/user/1\",\n          \"rel\": \"self\",\n          \"method\": \"GET\"\n        },\n        {\n          \"href\": \"/user/1\",\n          \"rel\": \"edit\",\n          \"method\": \"PUT\"\n        },\n        {\n          \"href\": \"/user/1\",\n          \"rel\": \"delete\",\n          \"method\": \"DELETE\"\n        }\n      ]\n    },\n    \"links\": {\n      \"href\": \"/user\",\n      \"rel\": \"list\",\n      \"method\": \"GET\"\n    }\n  }\n```", "```py\n$pip install django-tastypie\n\n```", "```py\n    API_LIMIT_PER_PAGE = 15\n    ```", "```py\n    TASTYPIE_FULL_DEBUG = True\n    ```", "```py\n    TASTYPIE_CANNED_ERROR = \"it's not your fault, it's our we will fix it soon.\"\n    ```", "```py\n    TASTYPIE_ALLOW_MISSING_SLASH = True\n    ```", "```py\n        TASTYPIE_DATETIME_FORMATTING = 'rfc-2822'\n        ```", "```py\n    TASTYPIE_DEFAULT_FORMATS = [json, xml]\n    ```", "```py\nfrom tastypie.resources import ModelResource\nfrom tweet.models import Tweet\n\nclass TweetResource(ModelResource):\nclass Meta:\nqueryset = Tweet.objects.all()\nresource_name = 'tweet'\n```", "```py\nfrom tastypie.api import Api\nfrom tweet.api import TweetResource\n\nv1_api = Api(api_name='v1')\nv1_api.register(TweetResource())\n\nurlpatterns = patterns('',\n...\nurl(r'^api/', include(v1_api.urls)),\n)\n```", "```py\n{\n  \"tweet\": {\n    \"list_endpoint\": \"/api/v1/tweet/\",\n    \"schema\": \"/api/v1/tweet/schema/\"\n  }\n}\n```", "```py\n{\n  \"meta\": {\n    \"limit\": 20,\n    \"next\": null,\n    \"offset\": 0,\n    \"previous\": null,\n    \"total_count\": 1\n  },\n  \"objects\": [\n    {\n      \"country\": \"Global\",\n      \"created_date\": \"2014-12-28T20:54:27\",\n      \"id\": 1,\n      \"is_active\": true,\n      \"resource_uri\": \"/api/v1/tweet/1/\",\n      \"text\": \"#Django is awesome\"\n    }\n  ]\n}\n```", "```py\n{\n  \"allowed_detail_http_methods\": [\n    \"get\",\n    \"post\",\n    \"put\",\n    \"delete\",\n    \"patch\"\n  ],\n  \"allowed_list_http_methods\": [\n    \"get\",\n    \"post\",\n    \"put\",\n    \"delete\",\n    \"patch\"\n  ],\n  \"default_format\": \"application/json\",\n  \"default_limit\": 20,\n  \"fields\": {\n    \"country\": {\n      \"blank\": false,\n      \"default\": \"Global\",\n      \"help_text\": \"Unicode string data. Ex: \\\"Hello World\\\"\",\n      \"nullable\": false,\n      \"readonly\": false,\n      \"type\": \"string\",\n      \"unique\": false\n    },\n    \"created_date\": {\n      \"blank\": true,\n      \"default\": true,\n      \"help_text\": \"A date & time as a string. Ex: \\\"2010-11- 10T03:07:43\\\"\",\n      \"nullable\": false,\n      \"readonly\": false,\n      \"type\": \"datetime\",\n      \"unique\": false\n    },\n    \"id\": {\n      \"blank\": true,\n      \"default\": \"\",\n      \"help_text\": \"Integer data. Ex: 2673\",\n      \"nullable\": false,\n      \"readonly\": false,\n      \"type\": \"integer\",\n      \"unique\": true\n    },\n    \"is_active\": {\n      \"blank\": true,\n      \"default\": true,\n      \"help_text\": \"Boolean data. Ex: True\",\n      \"nullable\": false,\n      \"readonly\": false,\n      \"type\": \"boolean\",\n      \"unique\": false\n    },\n    \"resource_uri\": {\n      \"blank\": false,\n      \"default\": \"No default provided.\",\n      \"help_text\": \"Unicode string data. Ex: \\\"Hello World\\\"\",\n      \"nullable\": false,\n      \"readonly\": true,\n      \"type\": \"string\",\n      \"unique\": false\n    },\n    \"text\": {\n      \"blank\": false,\n      \"default\": \"No default provided.\",\n      \"help_text\": \"Unicode string data. Ex: \\\"Hello World\\\"\",\n      \"nullable\": false,\n      \"readonly\": false,\n      \"type\": \"string\",\n      \"unique\": false\n    }\n  }\n}\n```", "```py\nauthentication = BasicAuthentication()\n```", "```py\nfrom tastypie.authentication import BasicAuthentication\n```"]