["```py\nclass HashTag(models.Model):\n  \"\"\"\n  HashTag model\n  \"\"\"\n  name = models.CharField(max_length=64, unique=True)\n  tweet = models.ManyToManyField(Tweet)\n  def __unicode__(self):\n    return self.name\n```", "```py\n$ python manage.py syncdb\n\n```", "```py\n Creating tables ...\n Creating table tweet_hashtag_tweet\n Creating table tweet_hashtag\n Installing custom SQL ...\n Installing indexes ...\n Installed 0 object(s) from 0 fixture(s)\n\n```", "```py\n$ python manage.py sql tweet\n\n```", "```py\n BEGIN;\n CREATE TABLE \"tweet_tweet\" (\n \"id\" integer NOT NULL PRIMARY KEY,\n \"user_id\" integer NOT NULL REFERENCES \"user_profile_user\" (\"id\"),\n \"text\" varchar(160) NOT NULL,\n \"created_date\" datetime NOT NULL,\n \"country\" varchar(30) NOT NULL,\n \"is_active\" bool NOT NULL\n )\n ;\n CREATE TABLE \"tweet_hashtag_tweet\" (\n \"id\" integer NOT NULL PRIMARY KEY,\n \"hashtag_id\" integer NOT NULL,\n \"tweet_id\" integer NOT NULL REFERENCES \"tweet_tweet\" (\"id\"),\n UNIQUE (\"hashtag_id\", \"tweet_id\")\n )\n ;\n CREATE TABLE \"tweet_hashtag\" (\n \"id\" integer NOT NULL PRIMARY KEY,\n \"name\" varchar(64) NOT NULL UNIQUE\n )\n ;\n COMMIT;\n\n```", "```py\n  from django.contrib import admin\n  from models import Tweet,Hashtag\n  # Register your models here.\n  admin.site.register(Tweet)\n  admin.site.register(HashTag)\n```", "```py\nHello, #Django! you are awesome.\n```", "```py\n  {% extends \"base.html\" %}\n  {% block content %}\n  <div class=\"row clearfix\">\n    <div class=\"col-md-12 column\">\n      {% for tweet in tweets %}\n      <div class=\"well\">\n        <span>{{ tweet.text }}</span>\n      </div>\n      {% endfor %}\n    </div>\n  </div>\n  {% endblock %}\n```", "```py\nfrom django import forms\n```", "```py\n  from django import forms\n  class TweetForm(forms.Form):\n    text = forms.CharField(widget=forms.Textarea(attrs={'rows': 1, 'cols': 85}), max_length=160)\n    country = forms.CharField(widget=forms.HiddenInput())\n```", "```py\n  text = forms.CharField(widget=forms.Textarea(attrs={'rows': 1, 'cols': 85}), max_length=160)\n```", "```py\n  country = forms.CharField(widget=forms.HiddenInput())\n```", "```py\n  {% extends \"base.html\" %}\n  {% block content %}\n  <div class=\"row clearfix\">\n    <div class=\"col-md-12 column\">\n      <form method=\"post\" action=\"post/\">{% csrf_token %}\n        <div class=\"col-md-8 col-md-offset-2 fieldWrapper\">\n          {{ form.text.errors }}\n          {{ form.text }}\n        </div>\n        {{ form.country.as_hidden }}\n        <div>\n          <input type=\"submit\" value=\"post\">\n        </div>\n      </form>\n    </div>\n    <h3>&nbsp;</h3>\n    <div class=\"col-md-12 column\">\n      {% for tweet in tweets %}\n      <div class=\"well\">\n        <span>{{ tweet.text }}</span>\n      </div>\n      {% endfor %}\n    </div>\n  </div>\n  {% endblock %}\n```", "```py\n  {% csrf_token %}\n```", "```py\n<div class=\"col-md-8 col-md-offset-2 fieldWrapper\">\n  {{ form.text.errors }}\n  {{ form.text }}\n</div>\n```", "```py\n  class PostTweet(View):\n    \"\"\"Tweet Post form available on page /user/<username> URL\"\"\"\n    def post(self, request, username):\n      form = TweetForm(self.request.POST)\n      if form.is_valid():\n        user = User.objects.get(username=username)\n        tweet = Tweet(text=form.cleaned_data['text'],\n        user=user,\n        country=form.cleaned_data['country'])\n        tweet.save()\n        words = form.cleaned_data['text'].split(\" \")\n        for word in words:\n        if word[0] == \"#\":\n          hashtag, created = HashTag.objects.get_or_create(name=word[1:])\n          hashtag.tweet.add(tweet)\n        return HttpResponseRedirect('/user/'+username)\n```", "```py\nfrom django.conf.urls import patterns, include, url\nfrom django.contrib import admin\nfrom tweet.views import Index, Profile, PostTweet\n\nadmin.autodiscover()\n\nurlpatterns = patterns('',\n  url(r'^$', Index.as_view()),\n  url(r'^user/(\\w+)/$', Profile.as_view()),\n  url(r'^admin/', include(admin.site.urls)),\n  url(r'^user/(\\w+)/post/$', PostTweet.as_view())\n)\n```", "```py\n  url(r'^user/(\\w+)/post/$', PostTweet.as_view())\n```", "```py\n  url(r'^hashTag/(\\w+)/$', HashTagCloud.as_view()),\n```", "```py\n  class HashTagCloud(View):\n    \"\"\"Hash Tag  page reachable from /hastag/<hashtag> URL\"\"\"\n    def get(self, request, hashtag):\n      params = dict()\n      hashtag = HashTag.objects.get(name=hashtag)\n      params[\"tweets\"] = hashtag.tweet\n      return render(request, 'hashtag.html', params)\n```", "```py\n  {% extends \"base.html\" %}\n  {% block content %}\n  <div class=\"row clearfix\">\n    <div class=\"col-md-12 column\">\n      {% for tweet in tweets.all %}\n      <div class=\"well\">\n        <span>{{ tweet.text }}</span>\n      </div>\n      {% endfor %}\n    </div>\n  </div>\n  {% endblock %}\n```"]