["```py\nclass CORSResource(object):\n  \"\"\"\n  Adds CORS headers to resources that subclass this.\n  \"\"\"\n  def create_response(self, *args, **kwargs):\n    response = super(CORSResource, self).create_response(*args, **kwargs)\n    response['Access-Control-Allow-Origin'] = '*'\n    response['Access-Control-Allow-Headers'] = 'Content-Type'\n    return response\n\n  def method_check(self, request, allowed=None):\n    if allowed is None:\n      allowed = []\n\n    request_method = request.method.lower()\n    allows = ','.join(map(unicode.upper, allowed))\n    if request_method == 'options':\n      response = HttpResponse(allows)\n      response['Access-Control-Allow-Origin'] = '*'\n      response['Access-Control-Allow-Headers'] = 'Content-Type'\n      response['Allow'] = allows\n      raise ImmediateHttpResponse(response=response)\n\n    if not request_method in allowed:\n      response = http.HttpMethodNotAllowed(allows)\n      response['Allow'] = allows\n      raise ImmediateHttpResponse(response=response)\n    return request_method\n```", "```py\nclass TweetResource(CORSResource, ModelResource):\n  class Meta:\n    queryset = Tweet.objects.all()\n    resource_name = 'tweet'\n```", "```py\n<html ng-app=\"tweets\">\n  <head>\n    <title>Tweets App</title>\n    <script src=\"img/angular.min.js\"></script>\n  </head>\n  <body>\n    <div ng-controller=\"tweetController\"> \n      <table>\n        <tr ng-repeat=\"tweet in tweets\">\n          <td>{{ tweet.country }}</td>\n          <td>{{ tweet.text }}</td>\n        </tr>\n      </table>\n    </div>\n    <script src=\"img/app.js\"></script>\n  </body>\n</html>\n```", "```py\nvar app = angular.module('tweets', []);\napp.controller(\"tweetController\", function($scope,$http) {\n  $http({ headers: {'Content-Type': 'application/json; charset=utf-8'},\n  method: 'GET',\n  url: \"http://127.0.0.1:8000/api/v1/tweet/?format=json\"\n  })\n    .success(function (data) {\n    $scope.tweets = data.objects;\n  })\n});\n```", "```py\n  <tr ng-repeat=\"tweet in tweets\">\n    <td>{{ tweet.country }}</td>\n    <td>{{ tweet.text }}</td>\n  </tr>\n```", "```py\nset JAVA_HOME=\\absolute\\path\\to\\Java\n\\absolute\\path\\to\\ES\\bin\\elasticsearch\n\n```", "```py\n{\n  \"status\" : 200,\n  \"name\" : \"MN-E (Ultraverse)\",\n  \"cluster_name\" : \"elasticsearch\",\n  \"version\" : {\n    \"number\" : \"1.4.1\",\n    \"build_hash\" : \"89d3241d670db65f994242c8e8383b169779e2d4\",\n    \"build_timestamp\" : \"2014-11-26T15:49:29Z\",\n    \"build_snapshot\" : false,\n    \"lucene_version\" : \"4.10.2\"\n  },\n  \"tagline\" : \"You Know, for Search\"\n}\n```", "```py\n$pip install requests\n\n```", "```py\n  data = {\n    \"settings\": {\n      \"number_of_shards\": 4,\n      \"number_of_replicas\": 1\n    },\n    \"mappings\": {\n      \"contacts\": {\n        \"properties\": {\n          \"name\": { \"type\": \"string\" },\n          \"email\": { \"type\": \"string\" },\n          \"mobile\": { \"type\": \"string\" }\n        },\n        \"_source\": {\n          \"enabled\": \"true\"\n        }\n      }\n    }\n  }\n}\n\nimport json, requests\nresponse = requests.put('http://127.0.0.1:9200/contacts/', data=json.dumps(data))\nprint response.text\n```", "```py\nmapping_response = requests.get('http://127.0.0.1:9200/contacts/_mappings')\nprint mapping_response.text\n\n```", "```py\nimport json, requests\ndata = json.dumps(\n  {\"name\": \"Ratan Kumar\",\n  \"email\": \"mail@ratankumar.org\",\n  \"mobile\": \"8892572775\"})\nresponse = requests.put('http://127.0.0.1:9200/contacts/contact/1', data=data)\nprint response.text\n```", "```py\nimport json, requests\ncontacts = [{\"name\": \"Rahul Kumar\",\n  \"email\": \"rahul@gmail.com\",\n  \"mobile\": \"1234567890\"},\n  {\"name\": \"Sanjeev Jaiswal\",\n  \"email\": \"jassics@gmail.com\",\n  \"mobile\": \"1122334455\"},\n  {\"name\": \"Raj\",\n  \"email\": \"raj@gmail.com\",\n  \"mobile\": \"0071122334\"},\n  {\"name\": \"Shamitabh\",\n  \"email\": \"shabth@gmail.com\",\n  \"mobile\": \"9988776655\"}\n]\n\nfor idx, contact in enumerate(contacts):\n  data += '{\"index\": {\"_id\": \"%s\"}}\\n' % idx\n  data += json.dumps({\n    \"name\": contact[\"name\"],\n    \"email\": contact[\"email\"],\n    \"mobile\": contact[\"mobile\"]\n  })+'\\n'\n```", "```py\ndata = {\n  \"query\": {\n    \"query_string\": { \"query\": \"raj\" }\n  }\n}\n\nresponse = requests.post('http://127.0.0.1:9200/contacts/contact/_search', data=json.dumps(data))\nprint response.json()\n```"]